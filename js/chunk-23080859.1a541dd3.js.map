{"version":3,"sources":["webpack:///./assets/微信截图_20211219173819.png","webpack:///./assets/微信截图_20211220005321.png","webpack:///./assets/1639757871(1).jpg","webpack:///./assets/微信截图_20211219153236.png","webpack:///./site/docs/javascript-regular-expressions-mini-book.md?f0e8","webpack:///site/docs/javascript-regular-expressions-mini-book.md","webpack:///./site/docs/javascript-regular-expressions-mini-book.md?6840","webpack:///./site/docs/javascript-regular-expressions-mini-book.md","webpack:///./assets/微信截图_20211219175244.png","webpack:///./assets/微信截图_20211221230642.png","webpack:///./assets/微信截图_20211219155900.png","webpack:///./assets/微信截图_20211219155731.png","webpack:///./assets/微信截图_20211219174935.png","webpack:///./assets/微信截图_20211219154202.png","webpack:///./assets/微信截图_20211221221651.png","webpack:///./assets/微信截图_20211219230752.png","webpack:///./assets/微信截图_20211219154447.png","webpack:///./assets/微信截图_20211221204927.png","webpack:///./assets/微信截图_20211220000031.png","webpack:///./assets/微信截图_20211219225240.png","webpack:///./assets/微信截图_20211219140323.png","webpack:///./assets/微信截图_20211219101110.png","webpack:///./assets/微信截图_20211220000110.png","webpack:///./assets/微信截图_20211219152846.png","webpack:///./assets/微信截图_20211219154628.png","webpack:///./assets/微信截图_20211219174005.png","webpack:///./assets/微信截图_20211220013239.png","webpack:///./assets/微信截图_20211221205246.png","webpack:///./assets/微信截图_20211220005910.png"],"names":["module","exports","render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","staticClass","_v","staticStyle","attrs","component"],"mappings":"qGAAAA,EAAOC,QAAU,IAA0B,wC,uBCA3CD,EAAOC,QAAU,IAA0B,wC,uBCA3CD,EAAOC,QAAU,IAA0B,kC,uBCA3CD,EAAOC,QAAU,IAA0B,wC,2CCA3C,IAAIC,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAsBH,EAAII,MAAMC,GAAO,OAAOL,EAAIM,GAAG,IACnGC,EAAkB,CAAC,WAAa,IAAIP,EAAIC,KAASC,EAAGF,EAAIG,eAAmBE,EAAGL,EAAII,MAAMC,IAAIH,EAAG,OAAOG,EAAG,MAAM,CAACG,YAAY,kBAAkB,CAACH,EAAG,KAAK,CAACL,EAAIS,GAAG,yBAAyBJ,EAAG,IAAI,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,gDAAgDJ,EAAG,IAAI,CAACL,EAAIS,GAAG,kBAAkBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,UAAUJ,EAAG,SAAS,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,OAAOJ,EAAG,SAAS,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,OAAOJ,EAAG,SAAS,CAACL,EAAIS,GAAG,YAAYJ,EAAG,IAAI,CAACL,EAAIS,GAAG,mBAAmBJ,EAAG,SAAS,CAACL,EAAIS,GAAG,WAAWJ,EAAG,IAAI,CAACL,EAAIS,GAAG,aAAaJ,EAAG,SAAS,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,QAAQJ,EAAG,IAAI,CAACL,EAAIS,GAAG,aAAaJ,EAAG,SAAS,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,QAAQJ,EAAG,IAAI,CAACL,EAAIS,GAAG,aAAaJ,EAAG,SAAS,CAACL,EAAIS,GAAG,aAAaJ,EAAG,IAAI,CAACL,EAAIS,GAAG,aAAaJ,EAAG,SAAS,CAACL,EAAIS,GAAG,aAAaJ,EAAG,IAAI,CAACL,EAAIS,GAAG,cAAcJ,EAAG,SAAS,CAACL,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,cAAcJ,EAAG,SAAS,CAACL,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,aAAaJ,EAAG,SAAS,CAACL,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,aAAa,CAACA,EAAG,IAAI,CAACL,EAAIS,GAAG,OAAOJ,EAAG,SAAS,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,OAAOJ,EAAG,SAAS,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,OAAOJ,EAAG,SAAS,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,SAASJ,EAAG,IAAI,CAACL,EAAIS,GAAG,+BAA+BJ,EAAG,aAAa,CAACA,EAAG,IAAI,CAACL,EAAIS,GAAG,SAASJ,EAAG,SAAS,CAACL,EAAIS,GAAG,cAAcT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,QAAQJ,EAAG,SAAS,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,aAAaJ,EAAG,SAAS,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,SAASJ,EAAG,IAAI,CAACL,EAAIS,GAAG,oBAAoBJ,EAAG,SAAS,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,OAAOJ,EAAG,aAAa,CAACA,EAAG,IAAI,CAACL,EAAIS,GAAG,yBAAyBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,iBAAiBJ,EAAG,SAAS,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,SAAS,CAACL,EAAIS,GAAG,eAAeT,EAAIS,GAAG,iBAAiBJ,EAAG,SAAS,CAACL,EAAIS,GAAG,eAAeT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,UAAUJ,EAAG,SAAS,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,eAAeJ,EAAG,KAAK,CAACL,EAAIS,GAAG,aAAaJ,EAAG,SAAS,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,QAAQJ,EAAG,aAAa,CAACA,EAAG,IAAI,CAACL,EAAIS,GAAG,UAAUJ,EAAG,SAAS,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,OAAOJ,EAAG,SAAS,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,OAAOJ,EAAG,SAAS,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,SAASJ,EAAG,IAAI,CAACL,EAAIS,GAAG,0BAA0BJ,EAAG,IAAI,CAACL,EAAIS,GAAG,WAAWJ,EAAG,IAAI,CAACA,EAAG,SAAS,CAACL,EAAIS,GAAG,cAAcJ,EAAG,IAAI,CAACA,EAAG,SAAS,CAACL,EAAIS,GAAG,WAAWJ,EAAG,IAAI,CAACA,EAAG,SAAS,CAACL,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACA,EAAG,SAAS,CAACL,EAAIS,GAAG,YAAYJ,EAAG,IAAI,CAACA,EAAG,SAAS,CAACL,EAAIS,GAAG,YAAYJ,EAAG,KAAK,CAACL,EAAIS,GAAG,iBAAiBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,yBAAyBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAeT,EAAIS,GAAG,YAAYJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAeT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,0DAA0DJ,EAAG,KAAK,CAACL,EAAIS,GAAG,mBAAmBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,2CAA2CJ,EAAG,IAAI,CAACL,EAAIS,GAAG,WAAWJ,EAAG,SAAS,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,SAASJ,EAAG,IAAI,CAACL,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,yBAA0BJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,WAAYJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,UAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,cAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,QAASJ,EAAG,IAAI,CAACL,EAAIS,GAAG,WAAWJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,iBAAiBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,8CAAgDT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,kDAA0DT,EAAIS,GAAG,UAAUJ,EAAG,aAAa,CAACA,EAAG,IAAI,CAACL,EAAIS,GAAG,YAAYJ,EAAG,MAAM,CAACG,YAAY,OAAO,CAACH,EAAG,IAAI,CAACL,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACL,EAAIS,GAAG,iBAAiBT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,oEAAoEJ,EAAG,OAAO,CAACL,EAAIS,GAAG,QAAQT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,YAAYT,EAAIS,GAAG,cAAcJ,EAAG,KAAK,CAACL,EAAIS,GAAG,mBAAmBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,wDAAwDJ,EAAG,MAAM,CAACG,YAAY,WAAW,CAACH,EAAG,IAAI,CAACL,EAAIS,GAAG,aAAaJ,EAAG,SAAS,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,SAASJ,EAAG,IAAI,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,iBAAuBT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,eAAeT,EAAIS,GAAG,kBAAkBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,yBAA+BJ,EAAG,IAAI,CAACL,EAAIS,GAAG,WAAWJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,2BAA6BT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,iCAAuCT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,gDAAgDJ,EAAG,KAAK,CAACL,EAAIS,GAAG,cAAcJ,EAAG,IAAI,CAACL,EAAIS,GAAG,aAAaJ,EAAG,SAAS,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,wBAAwBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,mBAAmBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,iBAAuBT,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACL,EAAIS,GAAG,kBAAkBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,mCAAmCJ,EAAG,IAAI,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,2BAA2BT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,iBAAiBT,EAAIS,GAAG,qBAAqBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,qBAAqBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,iBAAuBT,EAAIS,GAAG,wBAAwBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,yBAAyBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,qBAAqBT,EAAIS,GAAG,+CAA+CJ,EAAG,KAAK,CAACL,EAAIS,GAAG,kBAAkBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,sCAAsCJ,EAAG,OAAO,CAACL,EAAIS,GAAG,iBAAuBT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,QAAQJ,EAAG,SAAS,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,kBAAkBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,YAAYT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACL,EAAIS,GAAG,iBAAuBT,EAAIS,GAAG,wBAAwBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,SAAS,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,gBAAgBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,oBAAoBJ,EAAG,KAAK,CAACL,EAAIS,GAAG,oBAAoBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,+CAA+CJ,EAAG,QAAQ,CAACA,EAAG,QAAQ,CAACA,EAAG,KAAK,CAACA,EAAG,KAAK,CAACL,EAAIS,GAAG,SAASJ,EAAG,KAAK,CAACL,EAAIS,GAAG,cAAcJ,EAAG,QAAQ,CAACA,EAAG,KAAK,CAACA,EAAG,KAAK,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWJ,EAAG,KAAK,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,QAAQJ,EAAG,SAAS,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,oBAAoBJ,EAAG,KAAK,CAACA,EAAG,KAAK,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWJ,EAAG,KAAK,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,YAAYT,EAAIS,GAAG,OAAOJ,EAAG,SAAS,CAACL,EAAIS,GAAG,cAAcT,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACA,EAAG,KAAK,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWJ,EAAG,KAAK,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,kBAAkBT,EAAIS,GAAG,OAAOJ,EAAG,SAAS,CAACL,EAAIS,GAAG,kBAAkBT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,WAAWJ,EAAG,SAAS,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,SAASJ,EAAG,KAAK,CAACA,EAAG,KAAK,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWJ,EAAG,KAAK,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,mBAAmBT,EAAIS,GAAG,KAAKJ,EAAG,SAAS,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,SAASJ,EAAG,KAAK,CAACA,EAAG,KAAK,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWJ,EAAG,KAAK,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,wBAAwBT,EAAIS,GAAG,OAAOJ,EAAG,SAAS,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,OAAOJ,EAAG,SAAS,CAACL,EAAIS,GAAG,gCAAgCT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,kBAAkBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,iBAAiBT,EAAIS,GAAG,SAASJ,EAAG,KAAK,CAACA,EAAG,KAAK,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWJ,EAAG,KAAK,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,yBAAyBT,EAAIS,GAAG,MAAMJ,EAAG,SAAS,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,SAASJ,EAAG,KAAK,CAACA,EAAG,KAAK,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,SAASJ,EAAG,KAAK,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,6BAA6BT,EAAIS,GAAG,kBAAkBJ,EAAG,SAAS,CAACL,EAAIS,GAAG,yBAAyBT,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,uCAAuCJ,EAAG,IAAI,CAACL,EAAIS,GAAG,sBAAsBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,sCAAsCT,EAAIS,GAAG,cAAcJ,EAAG,KAAK,CAACL,EAAIS,GAAG,aAAaJ,EAAG,IAAI,CAACL,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,0BAA0BJ,EAAG,KAAK,CAACL,EAAIS,GAAG,iBAAiBJ,EAAG,QAAQ,CAACA,EAAG,QAAQ,CAACA,EAAG,KAAK,CAACA,EAAG,KAAK,CAACL,EAAIS,GAAG,QAAQJ,EAAG,KAAK,CAACL,EAAIS,GAAG,cAAcJ,EAAG,QAAQ,CAACA,EAAG,KAAK,CAACA,EAAG,KAAK,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,YAAYJ,EAAG,KAAK,CAACL,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,WAAWJ,EAAG,KAAK,CAACA,EAAG,KAAK,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWJ,EAAG,KAAK,CAACL,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,WAAWJ,EAAG,KAAK,CAACA,EAAG,KAAK,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,SAASJ,EAAG,KAAK,CAACL,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,OAAOJ,EAAG,SAAS,CAACL,EAAIS,GAAG,aAAaT,EAAIS,GAAG,yBAAyBJ,EAAG,KAAK,CAACA,EAAG,KAAK,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,SAASJ,EAAG,KAAK,CAACL,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,OAAOJ,EAAG,SAAS,CAACL,EAAIS,GAAG,YAAYT,EAAIS,GAAG,sCAAsCJ,EAAG,KAAK,CAACA,EAAG,KAAK,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,SAASJ,EAAG,KAAK,CAACL,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,OAAOJ,EAAG,SAAS,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,yDAAyDJ,EAAG,KAAK,CAACL,EAAIS,GAAG,sBAAsBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,aAAaJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,iBAAiBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,6BAA+BT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,6CAAqDT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,qBAAqBT,EAAIS,GAAG,WAAWJ,EAAG,IAAI,CAACL,EAAIS,GAAG,2BAA2BJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,SAASJ,EAAG,IAAI,CAACL,EAAIS,GAAG,sDAAsDJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kBAAkBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,6BAA+BT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,4DAA4ET,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,iBAAiBT,EAAIS,GAAG,2CAA2CJ,EAAG,IAAI,CAACL,EAAIS,GAAG,uCAAuCJ,EAAG,QAAQ,CAACA,EAAG,QAAQ,CAACA,EAAG,KAAK,CAACA,EAAG,KAAK,CAACL,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACL,EAAIS,GAAG,cAAcJ,EAAG,QAAQ,CAACA,EAAG,KAAK,CAACA,EAAG,KAAK,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,cAAcJ,EAAG,KAAK,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,eAAeJ,EAAG,KAAK,CAACA,EAAG,KAAK,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaJ,EAAG,KAAK,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,cAAcJ,EAAG,KAAK,CAACA,EAAG,KAAK,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWJ,EAAG,KAAK,CAACA,EAAG,KAAK,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWJ,EAAG,KAAK,CAACA,EAAG,KAAK,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,eAAeJ,EAAG,MAAM,CAACG,YAAY,OAAO,CAACH,EAAG,IAAI,CAACL,EAAIS,GAAG,gDAAgDJ,EAAG,KAAK,CAACL,EAAIS,GAAG,eAAeJ,EAAG,IAAI,CAACL,EAAIS,GAAG,2CAA2CJ,EAAG,IAAI,CAACL,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,uBAAuBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,cAAeJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,SAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,WAAYJ,EAAG,OAAO,CAACL,EAAIS,GAAG,iBAAiBT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,WAAWJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kBAAkBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,4BAA8BT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,4BAAgCT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,qBAAqBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,oBAAoBT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,eAAiBT,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACL,EAAIS,GAAG,YAAcT,EAAIS,GAAG,OAAOJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,qBAAqBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,eAAiBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,oBAAsBT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,oBAAoBT,EAAIS,GAAG,WAAWJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,qBAAqBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,eAAiBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,uBAAyBT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,yCAAyCJ,EAAG,KAAK,CAACL,EAAIS,GAAG,eAAeJ,EAAG,IAAI,CAACL,EAAIS,GAAG,kCAAkCJ,EAAG,IAAI,CAACL,EAAIS,GAAG,oCAAoCJ,EAAG,KAAK,CAACL,EAAIS,GAAG,8BAA8BJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACL,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,gBAAgBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,4BAA4BJ,EAAG,OAAO,CAACL,EAAIS,GAAG,iBAAiBT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,mCAAmCJ,EAAG,IAAI,CAACL,EAAIS,GAAG,qBAAqBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,WAAWJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,yCAAyCT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,iCAAmCT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,kDAA0DT,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACL,EAAIS,GAAG,iBAAiBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,uBAAuBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,SAASJ,EAAG,IAAI,CAACL,EAAIS,GAAG,qBAAqBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,2BAA6BJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,kBAAkBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,WAAWJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,yCAAyCT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAeT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAeT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,oBAAoBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAaT,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAWT,EAAIS,GAAG,YAAYJ,EAAG,IAAI,CAACL,EAAIS,GAAG,aAAaJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,wDAAwDT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAeT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAeT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,WAAaT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACL,EAAIS,GAAG,iBAAiBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,kBAAkBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,SAASJ,EAAG,IAAI,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,cAAcT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,oBAAoBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,uCAAmDT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,qBAAqBT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,8BAA8BT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,WAAWJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,2DAA2DT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kBAAoBT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACL,EAAIS,GAAG,4BAA4BJ,EAAG,IAAI,CAACL,EAAIS,GAAG,WAAWJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,aAAa,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,oDAAoDJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,aAAa,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,mCAAmCJ,EAAG,OAAO,CAACG,YAAY,aAAa,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,0BAA0BJ,EAAG,OAAO,CAACG,YAAY,aAAa,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,aAAaJ,EAAG,IAAI,CAACL,EAAIS,GAAG,SAASJ,EAAG,IAAI,CAACL,EAAIS,GAAG,YAAYJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACL,EAAIS,GAAG,8BAA8BJ,EAAG,IAAI,CAACL,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,YAAcT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,mBAAmBT,EAAIS,GAAG,mBAAmBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,QAAQT,EAAIS,GAAG,cAAcJ,EAAG,IAAI,CAACL,EAAIS,GAAG,qCAAqCJ,EAAG,OAAO,CAACL,EAAIS,GAAG,2BAA4BT,EAAIS,GAAG,eAAeJ,EAAG,IAAI,CAACL,EAAIS,GAAG,kCAAkCJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,gCAAiCT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,mCAAoCT,EAAIS,GAAG,wBAAwBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,QAAQT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACL,EAAIS,GAAG,+BAAgCT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,yBAAyBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,6EAA+ET,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,oEAAsET,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,8CAAgDT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,iCAAmCT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,cAAgBT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,6BAA6BJ,EAAG,OAAO,CAACL,EAAIS,GAAG,QAAQT,EAAIS,GAAG,eAAeJ,EAAG,KAAK,CAACL,EAAIS,GAAG,kBAAkBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,SAASJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACL,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,iBAAmBT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,YAAcT,EAAIS,GAAG,iBAAiBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,oBAAsBT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,kBAAkBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,eAAiBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,iDAAmDT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,uCAA2CT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,wBAAwBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACL,EAAIS,GAAG,eAAeT,EAAIS,GAAG,yCAAyCJ,EAAG,IAAI,CAACL,EAAIS,GAAG,oBAAoBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,gBAAkBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,iDAAmDT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,0BAA4BT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,mDAAmDJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kBAAqBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,iDAAmDT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,yBAA0BT,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACL,EAAIS,GAAG,wBAAwBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,sCAAsCJ,EAAG,IAAI,CAACL,EAAIS,GAAG,mCAAmCJ,EAAG,IAAI,CAACL,EAAIS,GAAG,WAAWJ,EAAG,KAAK,CAACA,EAAG,KAAK,CAACL,EAAIS,GAAG,YAAYJ,EAAG,KAAK,CAACL,EAAIS,GAAG,aAAaJ,EAAG,KAAK,CAACL,EAAIS,GAAG,WAAWJ,EAAG,KAAK,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,KAAK,CAACL,EAAIS,GAAG,kBAAkBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,mCAAmCJ,EAAG,MAAM,CAACK,YAAY,CAAC,QAAU,OAAO,OAAS,OAAO,MAAQ,OAAOC,MAAM,CAAC,IAAM,EAAQ,WAAqCN,EAAG,KAAK,CAACL,EAAIS,GAAG,mBAAmBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,+BAA+BJ,EAAG,KAAK,CAACL,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAASJ,EAAG,IAAI,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,4BAA4BJ,EAAG,IAAI,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,6BAA6BJ,EAAG,IAAI,CAACL,EAAIS,GAAG,qBAAsBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,wBAAyBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAeT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,qBAAuBT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,2BAA2BJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,6BAA+BT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,uCAAuCT,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACL,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWJ,EAAG,IAAI,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,aAAaJ,EAAG,IAAI,CAACL,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACL,EAAIS,GAAG,0BAA4BT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,UAAUJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,0BAA4BT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,sCAAwCT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,sBAAsBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,kBAAkBT,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,0BAA0BJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACL,EAAIS,GAAG,mBAAmBT,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,iBAAiBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACL,EAAIS,GAAG,gCAAkCT,EAAIS,GAAG,sBAAsBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,8BAAkCT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,gCAAoCT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,8BAAgCT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,gCAAoCT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,+BAAmCT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,2BAA6BJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACL,EAAIS,GAAG,kBAAkBT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,gBAAgBJ,EAAG,IAAI,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,kCAAkCJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,SAASJ,EAAG,IAAI,CAACL,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,aAAaJ,EAAG,IAAI,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAWT,EAAIS,GAAG,OAAOJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,0BAA4BT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,6CAA+CT,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACL,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,qBAAqBJ,EAAG,IAAI,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,2BAA2BJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAWT,EAAIS,GAAG,kBAAkBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAeT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,qBAAuBT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,gBAAgBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAeT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,uBAAyBT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACL,EAAIS,GAAG,wBAAwBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,wBAAwBT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,WAAWJ,EAAG,SAAS,CAACL,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,SAAS,CAACL,EAAIS,GAAG,YAAYT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACL,EAAIS,GAAG,yBAAyBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,yBAAyBT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,YAAYT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,YAAYT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,kBAAkBJ,EAAG,SAAS,CAACL,EAAIS,GAAG,QAAQT,EAAIS,GAAG,kBAAkBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,0BAA0BJ,EAAG,IAAI,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,sBAAsBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,eAAeJ,EAAG,IAAI,CAACL,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,eAAeJ,EAAG,KAAK,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,uBAAuBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,QAAUT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAeT,EAAIS,GAAG,mBAAmBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAeT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAUT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAWT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAUT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAWT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAUT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAWT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAUT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAWT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAUT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAWT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAUT,EAAIS,GAAG,YAAYJ,EAAG,IAAI,CAACL,EAAIS,GAAG,WAAWJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAeT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAUT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAUT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAeT,EAAIS,GAAG,WAAWJ,EAAG,IAAI,CAACL,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,eAAeT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,kBAAkBT,EAAIS,GAAG,gBAAgBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kBAAkBT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAeT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,iBAAiBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,oCAAoCT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAeT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,yBAAyBJ,EAAG,MAAM,CAACG,YAAY,OAAO,CAACH,EAAG,IAAI,CAACL,EAAIS,GAAG,mCAAmCJ,EAAG,KAAK,CAACL,EAAIS,GAAG,eAAeJ,EAAG,KAAK,CAACL,EAAIS,GAAG,uBAAuBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,mBAAmBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,6CAA6CJ,EAAG,KAAK,CAACL,EAAIS,GAAG,uBAAuBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,gBAAkBT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,kBAAoBT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,mBAAmBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAWT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,aAAaJ,EAAG,KAAK,CAACL,EAAIS,GAAG,uBAAuBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,iBAAiBT,EAAIS,GAAG,aAAaJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,gBAAkBT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,oBAAoBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,uBAAyBT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,iBAAiBT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaT,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaT,EAAIS,GAAG,kBAAkBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,WAAWJ,EAAG,KAAK,CAACL,EAAIS,GAAG,sBAAsBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,+BAA+BJ,EAAG,OAAO,CAACL,EAAIS,GAAG,YAAYT,EAAIS,GAAG,cAAcJ,EAAG,IAAI,CAACL,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,OAAOJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,gBAAkBT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,uBAAuBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,wBAA0BT,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACL,EAAIS,GAAG,qBAAqBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,+BAA+BJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,iBAAmBT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,uBAAuBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,0BAA4BT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,6DAA6DJ,EAAG,IAAI,CAACL,EAAIS,GAAG,8BAA8BJ,EAAG,IAAI,CAACL,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,sBAAsBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,kBAAkBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,4BAA4BT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,gBAAkBT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,wBAA0BT,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,iBAAmBT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,yBAA2BT,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACL,EAAIS,GAAG,qBAAqBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,0BAA4BT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,iCAAmCJ,EAAG,IAAI,CAACL,EAAIS,GAAG,sBAAsBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,OAAOJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,0BAA4BT,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,gCAAgCT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,qBAAqBJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,oCAAsCT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaT,EAAIS,GAAG,aAAaJ,EAAG,IAAI,CAACL,EAAIS,GAAG,kBAAkBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACL,EAAIS,GAAG,+BAA+BJ,EAAG,KAAK,CAACL,EAAIS,GAAG,kBAAkBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,2BAA2BJ,EAAG,IAAI,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,WAAWJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACL,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,wBAAwBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,4BAA4BT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAWT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,WAAaT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,wBAA0BT,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACL,EAAIS,GAAG,mBAAmBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,+BAA+BJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,WAAWJ,EAAG,IAAI,CAACL,EAAIS,GAAG,wCAAwCJ,EAAG,IAAI,CAACL,EAAIS,GAAG,iCAAiCJ,EAAG,KAAK,CAACL,EAAIS,GAAG,iBAAiBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,yBAAyBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,2BAA2BT,EAAIS,GAAG,WAAWJ,EAAG,IAAI,CAACL,EAAIS,GAAG,2BAA2BJ,EAAG,IAAI,CAACL,EAAIS,GAAG,8BAA8BJ,EAAG,OAAO,CAACL,EAAIS,GAAG,iBAAiBT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,aAAaJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,sCAAsCT,EAAIS,GAAG,WAAWJ,EAAG,KAAK,CAACL,EAAIS,GAAG,yBAAyBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,sBAAsBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,4BAA4BT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,aAAaJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,iDAAiDT,EAAIS,GAAG,WAAWJ,EAAG,KAAK,CAACL,EAAIS,GAAG,oCAAoCJ,EAAG,IAAI,CAACL,EAAIS,GAAG,iBAAiBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,iBAAiBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,mBAAmBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,sBAAsBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,oCAAoCJ,EAAG,IAAI,CAACL,EAAIS,GAAG,YAAYJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,iGAAsGT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,eAAiBT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,mBAAmBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,cAAgBT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,qBAAqBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,gBAAkBT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,qBAAqBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAeT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,mBAAmBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,iBAAmBT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,qBAAqBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,iBAAmBT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,kBAAkBT,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACL,EAAIS,GAAG,iBAAiBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,qCAAqCJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,aAAaJ,EAAG,IAAI,CAACL,EAAIS,GAAG,oBAAoBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,kBAAkBT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,iBAAiBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,4CAA4CJ,EAAG,IAAI,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,iBAAiBT,EAAIS,GAAG,kBAAkBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaT,EAAIS,GAAG,2BAA2BJ,EAAG,IAAI,CAACL,EAAIS,GAAG,8BAA8BJ,EAAG,KAAK,CAACL,EAAIS,GAAG,qBAAqBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,wDAAwDJ,EAAG,IAAI,CAACL,EAAIS,GAAG,yBAAyBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,aAAaJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,4CAA4CT,EAAIS,GAAG,WAAWJ,EAAG,IAAI,CAACL,EAAIS,GAAG,eAAeJ,EAAG,IAAI,CAACL,EAAIS,GAAG,YAAYJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,8EAA8ET,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,eAAiBT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,mBAAmBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,cAAgBT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,qBAAqBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,gBAAkBT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,qBAAqBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAeT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,mBAAmBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,iBAAmBT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,qBAAqBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,iBAAmBT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,kBAAkBT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,8CAA8CJ,EAAG,KAAK,CAACL,EAAIS,GAAG,uBAAuBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,8CAA8CJ,EAAG,IAAI,CAACL,EAAIS,GAAG,sCAAsCJ,EAAG,IAAI,CAACL,EAAIS,GAAG,wCAAwCJ,EAAG,IAAI,CAACL,EAAIS,GAAG,iDAAiDJ,EAAG,IAAI,CAACL,EAAIS,GAAG,WAAWJ,EAAG,IAAI,CAACA,EAAG,SAAS,CAACL,EAAIS,GAAG,eAAeJ,EAAG,IAAI,CAACA,EAAG,SAAS,CAACL,EAAIS,GAAG,YAAYJ,EAAG,IAAI,CAACA,EAAG,SAAS,CAACL,EAAIS,GAAG,YAAYJ,EAAG,IAAI,CAACA,EAAG,SAAS,CAACL,EAAIS,GAAG,aAAaJ,EAAG,IAAI,CAACA,EAAG,SAAS,CAACL,EAAIS,GAAG,YAAYJ,EAAG,KAAK,CAACL,EAAIS,GAAG,kBAAkBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,kDAAkDJ,EAAG,KAAK,CAACL,EAAIS,GAAG,eAAeJ,EAAG,IAAI,CAACL,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAWT,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAYT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,WAAWJ,EAAG,SAAS,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAYT,EAAIS,GAAG,iBAAiBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,yBAA2BT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,oCAA0CT,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACL,EAAIS,GAAG,iBAAiBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaT,EAAIS,GAAG,sCAAsCJ,EAAG,IAAI,CAACL,EAAIS,GAAG,mBAAmBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,aAAaJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,gDAAgDT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,yBAA2BT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,iCAAmCT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,mBAAmBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,aAAaJ,EAAG,IAAI,CAACL,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,0BAA4BT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACL,EAAIS,GAAG,0BAA4BT,EAAIS,GAAG,kBAAkBJ,EAAG,KAAK,CAACL,EAAIS,GAAG,eAAeJ,EAAG,IAAI,CAACL,EAAIS,GAAG,6CAA6CJ,EAAG,IAAI,CAACL,EAAIS,GAAG,2BAA2BJ,EAAG,OAAO,CAACL,EAAIS,GAAG,YAAYJ,EAAG,IAAI,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,uBAAuBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,4BAA4BT,EAAIS,GAAG,WAAWJ,EAAG,IAAI,CAACL,EAAIS,GAAG,iBAAiBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kCAAkCT,EAAIS,GAAG,WAAWJ,EAAG,MAAM,CAACK,YAAY,CAAC,QAAU,OAAO,OAAS,OAAO,MAAQ,OAAOC,MAAM,CAAC,IAAM,EAAQ,WAA2CN,EAAG,IAAI,CAACL,EAAIS,GAAG,qCAAqCJ,EAAG,OAAO,CAACL,EAAIS,GAAG,cAAcT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,wDAAwDJ,EAAG,IAAI,CAACL,EAAIS,GAAG,6BAA6BJ,EAAG,KAAK,CAACL,EAAIS,GAAG,iBAAiBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,uBAAuBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kCAAkCT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kBAAoBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,6EAAuFT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,4EAA4EJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaT,EAAIS,GAAG,mBAAmBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,mBAAmBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,UAAUJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kCAAkCT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kBAAoBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,6EAAuFT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,sBAAsBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,QAAQT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,QAAQT,EAAIS,GAAG,WAAWJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kCAAkCT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kBAAoBT,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,kBAAkBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,2BAA2BT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,4BAA4BT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,eAAiBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,aAAeT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,aAAeT,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACL,EAAIS,GAAG,eAAeJ,EAAG,IAAI,CAACL,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACL,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,WAAWJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kCAAkCT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kBAAoBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,qBAAqBJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,gBAAkBT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,wBAA0BT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,cAAcT,EAAIS,GAAG,wBAAwBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kCAAkCT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kBAAoBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,qBAAqBJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgBR,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAWT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAWT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,wBAA0BT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,WAAWJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kCAAkCT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kBAAoBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,qBAAqBJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,6BAA6BT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAWT,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAWT,EAAIS,GAAG,mBAAmBJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,wBAA0BT,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACL,EAAIS,GAAG,eAAeJ,EAAG,IAAI,CAACL,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,8CAA8CJ,EAAG,IAAI,CAACL,EAAIS,GAAG,cAAcJ,EAAG,IAAI,CAACL,EAAIS,GAAG,yBAAyBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,iBAAiBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,gDAAgDT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kBAAoBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kBAAoBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kBAAoBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kBAAoBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,0BAA0BJ,EAAG,OAAO,CAACL,EAAIS,GAAG,kBAAoBT,EAAIS,GAAG,aAAaJ,EAAG,IAAI,CAACL,EAAIS,GAAG,mCAAmCJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,wCAAwCT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kBAAoBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kBAAoBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kBAAoBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kBAAoBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,kBAAkBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,iBAAiBT,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACL,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,uBAAuBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,+BAA+BJ,EAAG,IAAI,CAACL,EAAIS,GAAG,wBAAwBJ,EAAG,KAAK,CAACL,EAAIS,GAAG,qBAAqBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,qBAAqBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,uCAAuCT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kBAAoBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,qBAAqBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAWT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAWT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAWT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,kCAAkCJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAaT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,2BAA2BJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAWT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,2BAA2BJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAYT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,2BAA2BJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAWT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,qBAAqBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAWT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAWT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAWT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,kCAAkCJ,EAAG,OAAO,CAACL,EAAIS,GAAG,cAAgBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,2BAA2BJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAWT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,2BAA2BJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAYT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,2BAA2BJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAWT,EAAIS,GAAG,OAAOJ,EAAG,KAAK,CAACL,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,aAAaJ,EAAG,IAAI,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,QAAQT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,SAASJ,EAAG,IAAI,CAACL,EAAIS,GAAG,oBAAoBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,iBAAiBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,4CAA4CT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,yBAA2BT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACL,EAAIS,GAAG,cAAcT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,cAAcT,EAAIS,GAAG,OAAOJ,EAAG,KAAK,CAACL,EAAIS,GAAG,yBAAyBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,gEAAgEJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAaT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAaT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAWT,EAAIS,GAAG,aAAaJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,mCAAmCT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,mCAAqCT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,mCAAqCT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAUT,EAAIS,GAAG,cAAcJ,EAAG,IAAI,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,YAAYT,EAAIS,GAAG,sCAAsCJ,EAAG,MAAM,CAACK,YAAY,CAAC,QAAU,OAAO,OAAS,OAAO,MAAQ,OAAOC,MAAM,CAAC,IAAM,EAAQ,WAA2CN,EAAG,KAAK,CAACL,EAAIS,GAAG,wBAAwBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,6CAA6CJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAeT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,oDAA0DT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAWT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,0BAA0BJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kBAAkBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,eAAiBT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,iBAAiBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,eAAiBT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,yCAAyCJ,EAAG,SAAS,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,KAAKJ,EAAG,SAAS,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,+BAA+BJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,sBAAsBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,kBAAkBT,EAAIS,GAAG,sBAAsBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,yBAA2BT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,oCAA0CT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,mBAAmBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kDAAkDT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,yBAA2BT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,iCAAmCT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACL,EAAIS,GAAG,eAAeJ,EAAG,IAAI,CAACL,EAAIS,GAAG,kDAAkDJ,EAAG,KAAK,CAACL,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,WAAWJ,EAAG,IAAI,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,kCAAkCJ,EAAG,IAAI,CAACL,EAAIS,GAAG,kCAAkCJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,oBAAoBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,gBAAkBT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,oBAAsBT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,iCAAiCJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,wBAAwBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,UAAYT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,gBAAkBT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,oBAAsBT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACL,EAAIS,GAAG,QAAQT,EAAIS,GAAG,4BAA4BJ,EAAG,IAAI,CAACL,EAAIS,GAAG,eAAeJ,EAAG,KAAK,CAACL,EAAIS,GAAG,2BAA2BJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,iBAAiBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,qBAAqBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,iBAAiBT,EAAIS,GAAG,kBAAkBJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,wBAAwBT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,8BAAgCT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,sCAAsCJ,EAAG,KAAK,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,qBAAqBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,iBAAiBT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,sBAAsBT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,yBAA0BT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,cAAcJ,EAAG,KAAK,CAACL,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,aAAaJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,0BAA0BT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,wBAAwBJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,kBAAkBJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,4BAA4BJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,iCAAiCT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,mDAAqDT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,8CAA8CJ,EAAG,IAAI,CAACL,EAAIS,GAAG,mCAAmCJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,wBAAwBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,kBAAkBT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,yBAAyBJ,EAAG,OAAO,CAACG,YAAY,aAAa,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,aAAa,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,aAAa,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,aAAa,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,aAAa,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,aAAa,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,oBAAoBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,wBAAwBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,gCAAgCJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,sBAAsBJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,mBAAmBJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,6CAA6CT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,uCAAyCT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,0BAA0BJ,EAAG,KAAK,CAACL,EAAIS,GAAG,mBAAmBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,WAAWJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACL,EAAIS,GAAG,uCAAuCJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACH,EAAG,OAAO,CAACG,YAAY,YAAY,CAACR,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,aAAa,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,OAAOT,EAAIS,GAAG,kBAAkBJ,EAAG,OAAO,CAACG,YAAY,YAAY,CAACR,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,aAAa,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,SAAST,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,UAAUJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACL,EAAIS,GAAG,2BAA2BJ,EAAG,IAAI,CAACL,EAAIS,GAAG,mBAAmBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,8BAA8BJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kCAAkCT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,yCAA2CT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,6BAA+BT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,yBAA2BT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,eAAeT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,eAAeT,EAAIS,GAAG,mBAAmBJ,EAAG,SAAS,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,aAAaJ,EAAG,IAAI,CAACL,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACL,EAAIS,GAAG,cAAcT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,cAAcT,EAAIS,GAAG,cAAcJ,EAAG,SAAS,CAACL,EAAIS,GAAG,cAAcT,EAAIS,GAAG,uBAAuBJ,EAAG,KAAK,CAACL,EAAIS,GAAG,cAAcJ,EAAG,IAAI,CAACL,EAAIS,GAAG,mCAAmCJ,EAAG,KAAK,CAACL,EAAIS,GAAG,uBAAuBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,0BAA0BJ,EAAG,IAAI,CAACL,EAAIS,GAAG,iCAAiCJ,EAAG,IAAI,CAACL,EAAIS,GAAG,+BAA+BJ,EAAG,IAAI,CAACL,EAAIS,GAAG,8BAA8BJ,EAAG,IAAI,CAACL,EAAIS,GAAG,WAAWJ,EAAG,IAAI,CAACA,EAAG,SAAS,CAACL,EAAIS,GAAG,eAAeJ,EAAG,IAAI,CAACA,EAAG,SAAS,CAACL,EAAIS,GAAG,cAAcJ,EAAG,IAAI,CAACA,EAAG,SAAS,CAACL,EAAIS,GAAG,eAAeJ,EAAG,KAAK,CAACL,EAAIS,GAAG,kBAAkBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACL,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,eAAeJ,EAAG,MAAM,CAACK,YAAY,CAAC,QAAU,OAAO,OAAS,OAAO,MAAQ,OAAOC,MAAM,CAAC,IAAM,EAAQ,WAA2CN,EAAG,IAAI,CAACL,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAeT,EAAIS,GAAG,2BAA2BJ,EAAG,MAAM,CAACK,YAAY,CAAC,QAAU,OAAO,OAAS,OAAO,MAAQ,OAAOC,MAAM,CAAC,IAAM,EAAQ,WAA2CN,EAAG,IAAI,CAACL,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,YAAYT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAWT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,SAASJ,EAAG,KAAK,CAACL,EAAIS,GAAG,iBAAiBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACL,EAAIS,GAAG,YAAcT,EAAIS,GAAG,cAAcJ,EAAG,MAAM,CAACK,YAAY,CAAC,QAAU,OAAO,OAAS,OAAO,MAAQ,OAAOC,MAAM,CAAC,IAAM,EAAQ,WAA2CN,EAAG,IAAI,CAACL,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,sBAAsBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,YAAYT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAWT,EAAIS,GAAG,gBAAgBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAWT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,YAAYT,EAAIS,GAAG,8BAA8BJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,YAAYJ,EAAG,IAAI,CAACL,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAWT,EAAIS,GAAG,uBAAuBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,+BAA+BJ,EAAG,MAAM,CAACK,YAAY,CAAC,QAAU,OAAO,OAAS,OAAO,MAAQ,OAAOC,MAAM,CAAC,IAAM,EAAQ,WAA2CN,EAAG,IAAI,CAACL,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAeT,EAAIS,GAAG,aAAaJ,EAAG,MAAM,CAACK,YAAY,CAAC,QAAU,OAAO,OAAS,OAAO,MAAQ,OAAOC,MAAM,CAAC,IAAM,EAAQ,WAA2CN,EAAG,IAAI,CAACL,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,QAAQT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACL,EAAIS,GAAG,YAAYT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAWT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,QAAQT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACL,EAAIS,GAAG,YAAYT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAWT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,YAAYT,EAAIS,GAAG,eAAeJ,EAAG,IAAI,CAACL,EAAIS,GAAG,sBAAsBJ,EAAG,MAAM,CAACK,YAAY,CAAC,QAAU,OAAO,OAAS,OAAO,MAAQ,OAAOC,MAAM,CAAC,IAAM,EAAQ,WAA2CN,EAAG,IAAI,CAACL,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAeT,EAAIS,GAAG,aAAaJ,EAAG,MAAM,CAACK,YAAY,CAAC,QAAU,OAAO,OAAS,OAAO,MAAQ,OAAOC,MAAM,CAAC,IAAM,EAAQ,WAA2CN,EAAG,IAAI,CAACL,EAAIS,GAAG,2BAA2BJ,EAAG,OAAO,CAACL,EAAIS,GAAG,QAAQT,EAAIS,GAAG,gBAAgBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,0BAA0BJ,EAAG,OAAO,CAACL,EAAIS,GAAG,kBAAqBJ,EAAG,KAAK,CAACL,EAAIS,GAAG,kBAAkBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,0BAA0BJ,EAAG,SAAS,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,OAAOJ,EAAG,aAAa,CAACA,EAAG,IAAI,CAACL,EAAIS,GAAG,0KAA0KJ,EAAG,IAAI,CAACL,EAAIS,GAAG,SAASJ,EAAG,SAAS,CAACL,EAAIS,GAAG,cAAcT,EAAIS,GAAG,wBAAwBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,4DAA4DJ,EAAG,IAAI,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,2BAA2BJ,EAAG,KAAK,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,sBAAsBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,YAAYT,EAAIS,GAAG,mCAAmCJ,EAAG,IAAI,CAACL,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAaT,EAAIS,GAAG,8BAA8BJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAWT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAYT,EAAIS,GAAG,kBAAkBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,sCAAsCJ,EAAG,IAAI,CAACL,EAAIS,GAAG,2CAA2CJ,EAAG,IAAI,CAACL,EAAIS,GAAG,4CAA4CJ,EAAG,IAAI,CAACL,EAAIS,GAAG,8BAA8BJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAeT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,4BAA4BT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,4DAAoET,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,cAAcT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAaT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,cAAcT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAYT,EAAIS,GAAG,OAAOJ,EAAG,KAAK,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,wBAAwBJ,EAAG,SAAS,CAACL,EAAIS,GAAG,aAAaT,EAAIS,GAAG,UAAUJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAeT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,6BAA6BT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,0DAAkET,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,eAAeT,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAWT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,cAAcT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAaT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACA,EAAG,SAAS,CAACL,EAAIS,GAAG,wBAAwBT,EAAIS,GAAG,aAAaJ,EAAG,MAAM,CAACK,YAAY,CAAC,QAAU,OAAO,OAAS,OAAO,MAAQ,OAAOC,MAAM,CAAC,IAAM,EAAQ,WAA2CN,EAAG,IAAI,CAACL,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAeT,EAAIS,GAAG,aAAaJ,EAAG,MAAM,CAACK,YAAY,CAAC,QAAU,OAAO,OAAS,OAAO,MAAQ,OAAOC,MAAM,CAAC,IAAM,EAAQ,WAA2CN,EAAG,IAAI,CAACL,EAAIS,GAAG,2CAA2CJ,EAAG,OAAO,CAACL,EAAIS,GAAG,eAAeT,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAYT,EAAIS,GAAG,mBAAmBJ,EAAG,KAAK,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,mBAAmBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,iBAAiBT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAeT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAaT,EAAIS,GAAG,sCAAsCJ,EAAG,IAAI,CAACA,EAAG,SAAS,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,UAAUJ,EAAG,SAAS,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,QAAQJ,EAAG,SAAS,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,gDAAgDJ,EAAG,IAAI,CAACL,EAAIS,GAAG,WAAWJ,EAAG,MAAM,CAACK,YAAY,CAAC,QAAU,OAAO,OAAS,OAAO,MAAQ,OAAOC,MAAM,CAAC,IAAM,EAAQ,WAA2CN,EAAG,IAAI,CAACL,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAeT,EAAIS,GAAG,YAAYJ,EAAG,MAAM,CAACK,YAAY,CAAC,QAAU,OAAO,OAAS,OAAO,MAAQ,OAAOC,MAAM,CAAC,IAAM,EAAQ,WAA2CN,EAAG,IAAI,CAACL,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,wDAAwDJ,EAAG,KAAK,CAACL,EAAIS,GAAG,eAAeJ,EAAG,IAAI,CAACL,EAAIS,GAAG,mBAAmBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,sEAAsEJ,EAAG,IAAI,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,SAAS,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,yBAAyBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,SAAS,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,4BAA4BJ,EAAG,IAAI,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,SAAS,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,wBAAwBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,OAAOJ,EAAG,SAAS,CAACL,EAAIS,GAAG,QAAQT,EAAIS,GAAG,UAAUJ,EAAG,SAAS,CAACL,EAAIS,GAAG,eAAeT,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,uBAAuBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACL,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaT,EAAIS,GAAG,uBAAuBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,gBAAgBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,gCAAgCJ,EAAG,KAAK,CAACL,EAAIS,GAAG,qBAAqBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,oCAAoCJ,EAAG,IAAI,CAACL,EAAIS,GAAG,8CAA8CJ,EAAG,IAAI,CAACL,EAAIS,GAAG,+CAA+CJ,EAAG,IAAI,CAACL,EAAIS,GAAG,wCAAwCJ,EAAG,IAAI,CAACL,EAAIS,GAAG,qBAAqBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,YAAYJ,EAAG,IAAI,CAACL,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACL,EAAIS,GAAG,iBAAiBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,wFAAwFJ,EAAG,IAAI,CAACL,EAAIS,GAAG,0BAA0BJ,EAAG,SAAS,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,SAAS,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,kBAAkBJ,EAAG,IAAI,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,sBAAsBJ,EAAG,IAAI,CAACA,EAAG,SAAS,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,KAAKJ,EAAG,SAAS,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,KAAKJ,EAAG,SAAS,CAACL,EAAIS,GAAG,QAAQT,EAAIS,GAAG,KAAKJ,EAAG,SAAS,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,SAAS,CAACL,EAAIS,GAAG,QAAQT,EAAIS,GAAG,KAAKJ,EAAG,SAAS,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,SAAS,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,iBAAiBJ,EAAG,QAAQ,CAACA,EAAG,QAAQ,CAACA,EAAG,KAAK,CAACA,EAAG,KAAK,CAACL,EAAIS,GAAG,QAAQJ,EAAG,KAAK,CAACL,EAAIS,GAAG,YAAYJ,EAAG,QAAQ,CAACA,EAAG,KAAK,CAACA,EAAG,KAAK,CAACL,EAAIS,GAAG,SAASJ,EAAG,KAAK,CAACL,EAAIS,GAAG,eAAeJ,EAAG,SAAS,CAACL,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAWT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,OAAOJ,EAAG,SAAS,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,OAAOJ,EAAG,SAAS,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,SAASJ,EAAG,KAAK,CAACA,EAAG,KAAK,CAACL,EAAIS,GAAG,SAASJ,EAAG,KAAK,CAACL,EAAIS,GAAG,wBAAwBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,OAAOJ,EAAG,SAAS,CAACL,EAAIS,GAAG,YAAYT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,eAAeJ,EAAG,SAAS,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,4BAA4BJ,EAAG,OAAO,CAACL,EAAIS,GAAG,YAAYT,EAAIS,GAAG,UAAUJ,EAAG,SAAS,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,eAAeJ,EAAG,KAAK,CAACA,EAAG,KAAK,CAACL,EAAIS,GAAG,QAAQJ,EAAG,KAAK,CAACL,EAAIS,GAAG,kBAAkBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,YAAYT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAWT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,sBAAsBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,QAAQT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAWT,EAAIS,GAAG,oBAAoBJ,EAAG,KAAK,CAACA,EAAG,KAAK,CAACL,EAAIS,GAAG,OAAOJ,EAAG,KAAK,CAACL,EAAIS,GAAG,WAAWJ,EAAG,SAAS,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,kBAAkBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,OAAOJ,EAAG,SAAS,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaT,EAAIS,GAAG,OAAOJ,EAAG,SAAS,CAACL,EAAIS,GAAG,aAAaT,EAAIS,GAAG,SAASJ,EAAG,KAAK,CAACA,EAAG,KAAK,CAACL,EAAIS,GAAG,QAAQJ,EAAG,KAAK,CAACL,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAYT,EAAIS,GAAG,2BAA2BJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaT,EAAIS,GAAG,SAASJ,EAAG,KAAK,CAACA,EAAG,KAAK,CAACL,EAAIS,GAAG,QAAQJ,EAAG,KAAK,CAACL,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,YAAcT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAaT,EAAIS,GAAG,WAAWJ,EAAG,SAAS,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,iBAAiBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,iBAAiBJ,EAAG,QAAQ,CAACA,EAAG,QAAQ,CAACA,EAAG,KAAK,CAACA,EAAG,KAAK,CAACL,EAAIS,GAAG,WAAWJ,EAAG,KAAK,CAACL,EAAIS,GAAG,SAASJ,EAAG,KAAK,CAACL,EAAIS,GAAG,aAAaJ,EAAG,QAAQ,CAACA,EAAG,KAAK,CAACA,EAAG,KAAK,CAACA,EAAG,SAAS,CAACL,EAAIS,GAAG,WAAWJ,EAAG,KAAK,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWJ,EAAG,KAAK,CAACA,EAAG,KAAK,CAACA,EAAG,SAAS,CAACL,EAAIS,GAAG,cAAcJ,EAAG,KAAK,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,iCAAiCJ,EAAG,KAAK,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWJ,EAAG,KAAK,CAACA,EAAG,KAAK,CAACA,EAAG,SAAS,CAACL,EAAIS,GAAG,aAAaJ,EAAG,KAAK,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,6BAA6BJ,EAAG,KAAK,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWJ,EAAG,KAAK,CAACA,EAAG,KAAK,CAACA,EAAG,SAAS,CAACL,EAAIS,GAAG,aAAaJ,EAAG,KAAK,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,sBAAsBJ,EAAG,KAAK,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWJ,EAAG,KAAK,CAACA,EAAG,KAAK,CAACA,EAAG,SAAS,CAACL,EAAIS,GAAG,eAAeJ,EAAG,KAAK,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,SAASJ,EAAG,KAAK,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,eAAeJ,EAAG,IAAI,CAACL,EAAIS,GAAG,yBAAyBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,mBAAmBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACL,EAAIS,GAAG,0BAA0BJ,EAAG,IAAI,CAACL,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaT,EAAIS,GAAG,eAAeJ,EAAG,IAAI,CAACL,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaT,EAAIS,GAAG,mBAAmBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,eAAeJ,EAAG,IAAI,CAACL,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,IAAI,CAACL,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACL,EAAIS,GAAG,mBAAmBT,EAAIS,GAAG,qBAAqBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,iBAAiBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,QAAQT,EAAIS,GAAG,YAAYJ,EAAG,IAAI,CAACL,EAAIS,GAAG,iCAAiCJ,EAAG,MAAM,CAACK,YAAY,CAAC,QAAU,OAAO,OAAS,OAAO,MAAQ,OAAOC,MAAM,CAAC,IAAM,EAAQ,WAA2CN,EAAG,KAAK,CAACL,EAAIS,GAAG,eAAeJ,EAAG,IAAI,CAACL,EAAIS,GAAG,yBAAyBJ,EAAG,KAAK,CAACL,EAAIS,GAAG,qBAAqBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,+BAA+BJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAaT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAaT,EAAIS,GAAG,mBAAmBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,iBAAiBT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,kCAAkCJ,EAAG,MAAM,CAACK,YAAY,CAAC,QAAU,OAAO,OAAS,OAAO,MAAQ,OAAOC,MAAM,CAAC,IAAM,EAAQ,WAA2CN,EAAG,KAAK,CAACL,EAAIS,GAAG,kBAAkBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,mBAAmBJ,EAAG,KAAK,CAACA,EAAG,KAAK,CAACL,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,gBAAqBT,EAAIS,GAAG,YAAYJ,EAAG,KAAK,CAACL,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,aAAaJ,EAAG,IAAI,CAACL,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,mBAAmBT,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,iBAAiBJ,EAAG,MAAM,CAACK,YAAY,CAAC,QAAU,OAAO,OAAS,OAAO,MAAQ,OAAOC,MAAM,CAAC,IAAM,EAAQ,WAA2CN,EAAG,IAAI,CAACL,EAAIS,GAAG,aAAaJ,EAAG,MAAM,CAACK,YAAY,CAAC,QAAU,OAAO,OAAS,OAAO,MAAQ,OAAOC,MAAM,CAAC,IAAM,EAAQ,WAA2CN,EAAG,KAAK,CAACL,EAAIS,GAAG,mBAAmBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,0BAA0BJ,EAAG,IAAI,CAACL,EAAIS,GAAG,uBAAuBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACL,EAAIS,GAAG,kDAAkDJ,EAAG,IAAI,CAACL,EAAIS,GAAG,yBAAyBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,6BAA+BT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,+DAA+DT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,YAAYT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,QAAQT,EAAIS,GAAG,eAAeJ,EAAG,IAAI,CAACL,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,YAAYT,EAAIS,GAAG,kCAAkCJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,6BAA+BT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,+DAAiET,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,4BAA4BJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,iCAAiCJ,EAAG,KAAK,CAACL,EAAIS,GAAG,uBAAuBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaT,EAAIS,GAAG,2BAA2BJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,8BAA8BJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,6BAA+BT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,wCAAwCT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,6FAA6HT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAWT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAWT,EAAIS,GAAG,WAAWJ,EAAG,KAAK,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAeT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,eAAiBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,qCAAuCJ,EAAG,IAAI,CAACL,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,iBAAiBT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,eAAeT,EAAIS,GAAG,YAAYJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAeT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,mBAAqBT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,qDAAqDJ,EAAG,IAAI,CAACL,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAeT,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACL,EAAIS,GAAG,eAAeT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,mBAAmBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,4CAA4CJ,EAAG,OAAO,CAACL,EAAIS,GAAG,YAAcT,EAAIS,GAAG,YAAYJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,YAAcT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,kBAAoBT,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACL,EAAIS,GAAG,mBAAmBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,eAAeT,EAAIS,GAAG,4BAA4BJ,EAAG,IAAI,CAACL,EAAIS,GAAG,oBAAoBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,iBAAiBT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACL,EAAIS,GAAG,wBAAwBT,EAAIS,GAAG,2BAA2BJ,EAAG,KAAK,CAACL,EAAIS,GAAG,eAAeJ,EAAG,IAAI,CAACL,EAAIS,GAAG,4BAA4BJ,EAAG,KAAK,CAACL,EAAIS,GAAG,eAAeJ,EAAG,IAAI,CAACL,EAAIS,GAAG,aAAaJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,qBAAqBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,uBAAuBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,iCAAiCJ,EAAG,IAAI,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,QAAQT,EAAIS,GAAG,aAAaJ,EAAG,IAAI,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,oBAAoBT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,QAAQT,EAAIS,GAAG,6BAA6BJ,EAAG,OAAO,CAACL,EAAIS,GAAG,YAAcJ,EAAG,IAAI,CAACL,EAAIS,GAAG,YAAYJ,EAAG,MAAM,CAACK,YAAY,CAAC,QAAU,OAAO,OAAS,OAAO,MAAQ,OAAOC,MAAM,CAAC,IAAM,EAAQ,WAA2CN,EAAG,KAAK,CAACL,EAAIS,GAAG,mBAAmBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,aAAaJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACL,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,cAAcJ,EAAG,IAAI,CAACL,EAAIS,GAAG,uCAAuCJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,cAAcJ,EAAG,IAAI,CAACL,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,mBAAmBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,kBAAkBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,qBAAqBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,YAAYJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACL,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,YAAYJ,EAAG,IAAI,CAACL,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,eAAeT,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAWT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACL,EAAIS,GAAG,uBAA6BJ,EAAG,IAAI,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,cAAcT,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAWT,EAAIS,GAAG,kBAAkBJ,EAAG,IAAI,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,sBAA0BJ,EAAG,IAAI,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,eAAeT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,sBAA0BJ,EAAG,IAAI,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,sBAA0BJ,EAAG,IAAI,CAACL,EAAIS,GAAG,mBAAmBJ,EAAG,MAAM,CAACK,YAAY,CAAC,QAAU,OAAO,OAAS,OAAO,MAAQ,OAAOC,MAAM,CAAC,IAAM,EAAQ,WAA2CN,EAAG,KAAK,CAACL,EAAIS,GAAG,eAAeJ,EAAG,IAAI,CAACL,EAAIS,GAAG,sCAAsCJ,EAAG,IAAI,CAACL,EAAIS,GAAG,sBAAsBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,iDAAiDJ,EAAG,IAAI,CAACL,EAAIS,GAAG,0CAA0CJ,EAAG,KAAK,CAACL,EAAIS,GAAG,qBAAqBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,oCAAoCJ,EAAG,IAAI,CAACL,EAAIS,GAAG,2EAA2EJ,EAAG,IAAI,CAACL,EAAIS,GAAG,sCAAsCJ,EAAG,IAAI,CAACL,EAAIS,GAAG,oBAAoBJ,EAAG,IAAI,CAACA,EAAG,SAAS,CAACL,EAAIS,GAAG,YAAYJ,EAAG,IAAI,CAACA,EAAG,SAAS,CAACL,EAAIS,GAAG,cAAcJ,EAAG,IAAI,CAACA,EAAG,SAAS,CAACL,EAAIS,GAAG,WAAWJ,EAAG,IAAI,CAACA,EAAG,SAAS,CAACL,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACL,EAAIS,GAAG,eAAeJ,EAAG,IAAI,CAACL,EAAIS,GAAG,8BAA8BJ,EAAG,IAAI,CAACA,EAAG,SAAS,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,IAAI,CAACA,EAAG,SAAS,CAACL,EAAIS,GAAG,kBAAkBJ,EAAG,IAAI,CAACA,EAAG,SAAS,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,IAAI,CAACA,EAAG,SAAS,CAACL,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACL,EAAIS,GAAG,iBAAiBJ,EAAG,KAAK,CAACL,EAAIS,GAAG,qBAAqBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,6FAA6FJ,EAAG,IAAI,CAACL,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACL,EAAIS,GAAG,oBAAoBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,0BAA0BJ,EAAG,KAAK,CAACL,EAAIS,GAAG,uBAAuBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,wDAAwDJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,uBAAuBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,6BAA6BJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kBAAoBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,mCAAmCT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,6EAAuFT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,eAAeJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kBAAoBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,qBAAqBJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAWT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gCAAsCT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,wBAAwBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,yBAA2BT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaT,EAAIS,GAAG,UAAUJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,yBAA2BT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAWT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,sBAAsBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kBAAoBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,kBAAkBT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,kBAAkBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,eAAeT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,YAAYT,EAAIS,GAAG,YAAYJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kBAAoBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,eAAeT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,kBAAkBT,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACL,EAAIS,GAAG,4BAA4BJ,EAAG,IAAI,CAACL,EAAIS,GAAG,oBAAoBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,uCAAuCJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,aAAaJ,EAAG,IAAI,CAACL,EAAIS,GAAG,oBAAoBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,2BAA2BT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,qBAAqBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,qBAAqBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,qBAAqBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,mBAAmBT,EAAIS,GAAG,mBAAmBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,aAAaJ,EAAG,KAAK,CAACL,EAAIS,GAAG,cAAcJ,EAAG,IAAI,CAACL,EAAIS,GAAG,mCAAmCJ,EAAG,IAAI,CAACL,EAAIS,GAAG,mCAAmCJ,EAAG,IAAI,CAACL,EAAIS,GAAG,yCAAyCJ,EAAG,IAAI,CAACL,EAAIS,GAAG,6CAA6CJ,EAAG,KAAK,CAACL,EAAIS,GAAG,mBAAmBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,uBAAuBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kBAAkBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,qBAAqBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,eAAeJ,EAAG,SAAS,CAACL,EAAIS,GAAG,QAAQT,EAAIS,GAAG,KAAKJ,EAAG,SAAS,CAACL,EAAIS,GAAG,QAAQT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAaT,EAAIS,GAAG,YAAYJ,EAAG,IAAI,CAACL,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAWT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,eAAeT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAWT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,sBAAsBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,oBAAsBT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,mCAAmCJ,EAAG,IAAI,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,qBAAuBT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,oCAAoCJ,EAAG,IAAI,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,sBAAwBT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,yCAAyCJ,EAAG,IAAI,CAACL,EAAIS,GAAG,iBAAiBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,wBAAwBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACL,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,aAAaJ,EAAG,IAAI,CAACL,EAAIS,GAAG,aAAaJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,aAAaJ,EAAG,IAAI,CAACL,EAAIS,GAAG,YAAYJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,aAAaJ,EAAG,IAAI,CAACL,EAAIS,GAAG,aAAaJ,EAAG,MAAM,CAACK,YAAY,CAAC,QAAU,OAAO,OAAS,OAAO,MAAQ,OAAOC,MAAM,CAAC,IAAM,EAAQ,WAA2CN,EAAG,IAAI,CAACL,EAAIS,GAAG,oCAAoCJ,EAAG,IAAI,CAACL,EAAIS,GAAG,8CAA8CJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,aAAaJ,EAAG,IAAI,CAACL,EAAIS,GAAG,wBAAwBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,sBAAwBT,EAAIS,GAAG,0BAA0BJ,EAAG,IAAI,CAACL,EAAIS,GAAG,mDAAmDJ,EAAG,IAAI,CAACL,EAAIS,GAAG,yBAAyBJ,EAAG,KAAK,CAACL,EAAIS,GAAG,kBAAkBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,kBAAkBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,qCAAqCJ,EAAG,IAAI,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,kCAAkCJ,EAAG,IAAI,CAACL,EAAIS,GAAG,0BAA0BJ,EAAG,OAAO,CAACL,EAAIS,GAAG,QAAUT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,+BAA+BJ,EAAG,IAAI,CAACL,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,4BAAkCT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,0BAA0BT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,sBAA4BT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,mBAAmBT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,sBAA4BT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,sBAAsBT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,+BAA+BJ,EAAG,IAAI,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,2CAA2CJ,EAAG,IAAI,CAACL,EAAIS,GAAG,cAAcJ,EAAG,MAAM,CAACK,YAAY,CAAC,QAAU,OAAO,OAAS,OAAO,MAAQ,OAAOC,MAAM,CAAC,IAAM,EAAQ,WAA2CN,EAAG,IAAI,CAACL,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAaT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAaT,EAAIS,GAAG,cAAcJ,EAAG,MAAM,CAACK,YAAY,CAAC,QAAU,OAAO,OAAS,OAAO,MAAQ,OAAOC,MAAM,CAAC,IAAM,EAAQ,WAA2CN,EAAG,IAAI,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,yCAAyCT,EAAIS,GAAG,2BAA2BJ,EAAG,IAAI,CAACL,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAaT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAWT,EAAIS,GAAG,yFAAyFJ,EAAG,OAAO,CAACL,EAAIS,GAAG,gCAAgCT,EAAIS,GAAG,0BAA0BJ,EAAG,KAAK,CAACL,EAAIS,GAAG,aAAaJ,EAAG,IAAI,CAACL,EAAIS,GAAG,qFAAqFJ,EAAG,IAAI,CAACL,EAAIS,GAAG,sBAAsBJ,EAAG,KAAK,CAACA,EAAG,KAAK,CAACL,EAAIS,GAAG,SAASJ,EAAG,KAAK,CAACL,EAAIS,GAAG,aAAaJ,EAAG,KAAK,CAACL,EAAIS,GAAG,WAAWJ,EAAG,KAAK,CAACL,EAAIS,GAAG,2BAA2BJ,EAAG,KAAK,CAACL,EAAIS,GAAG,qBAAqBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,4BAA4BJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,eAAeT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,mBAAqBT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,eAAeT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,mBAAqBT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,eAAeT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,mBAAqBT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,eAAeT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,mBAAqBT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,qDAAyDT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,oDAAwDT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,kBAAkBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,qDAAyDT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,aAAaJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,WAAWJ,EAAG,IAAI,CAACL,EAAIS,GAAG,qCAAqCJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,mBAAqBT,EAAIS,GAAG,WAAWJ,EAAG,IAAI,CAACL,EAAIS,GAAG,+CAA+CJ,EAAG,IAAI,CAACL,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,6BAA6BJ,EAAG,OAAO,CAACL,EAAIS,GAAG,eAAeT,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,8BAA8BJ,EAAG,IAAI,CAACL,EAAIS,GAAG,wBAAwBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,mFAAmFJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAWT,EAAIS,GAAG,yDAAyDJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAWT,EAAIS,GAAG,qBAAqBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAWT,EAAIS,GAAG,kBAAkBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAWT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAYT,EAAIS,GAAG,kBAAkBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAWT,EAAIS,GAAG,iBAAiBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,+CAA+CJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,eAAeT,EAAIS,GAAG,6BAA6BJ,EAAG,IAAI,CAACL,EAAIS,GAAG,iEAAiEJ,EAAG,KAAK,CAACL,EAAIS,GAAG,iCAAiCJ,EAAG,IAAI,CAACL,EAAIS,GAAG,6CAA6CJ,EAAG,OAAO,CAACL,EAAIS,GAAG,iBAAmBT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAaT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACL,EAAIS,GAAG,YAAcT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACL,EAAIS,GAAG,QAAQT,EAAIS,GAAG,cAAcJ,EAAG,MAAM,CAACK,YAAY,CAAC,QAAU,OAAO,OAAS,OAAO,MAAQ,OAAOC,MAAM,CAAC,IAAM,EAAQ,WAA2CN,EAAG,IAAI,CAACL,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAeT,EAAIS,GAAG,oBAAoBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,MAAM,CAACK,YAAY,CAAC,QAAU,OAAO,OAAS,OAAO,MAAQ,OAAOC,MAAM,CAAC,IAAM,EAAQ,WAA2CN,EAAG,IAAI,CAACL,EAAIS,GAAG,sDAAsDJ,EAAG,IAAI,CAACL,EAAIS,GAAG,uBAAuBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,uBAAuBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,eAAkBT,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACL,EAAIS,GAAG,qBAAqBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,4CAA4CJ,EAAG,IAAI,CAACL,EAAIS,GAAG,qCAAqCJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACL,EAAIS,GAAG,yFAAyFJ,EAAG,KAAK,CAACL,EAAIS,GAAG,oBAAoBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,qBAAqBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAWT,EAAIS,GAAG,qCAAqCJ,EAAG,KAAK,CAACL,EAAIS,GAAG,qBAAqBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,iBAAiBT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,oBAAoBT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,iBAAiBT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,mBAAmBT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,0BAA0BJ,EAAG,KAAK,CAACL,EAAIS,GAAG,4BAA4BJ,EAAG,IAAI,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,0CAA0CJ,EAAG,KAAK,CAACL,EAAIS,GAAG,eAAeJ,EAAG,IAAI,CAACL,EAAIS,GAAG,iBAAiBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,sCAAsCJ,EAAG,IAAI,CAACL,EAAIS,GAAG,sCAAsCJ,EAAG,IAAI,CAACL,EAAIS,GAAG,2EAA2EJ,EAAG,IAAI,CAACL,EAAIS,GAAG,+CAA+CJ,EAAG,KAAK,CAACL,EAAIS,GAAG,oBAAoBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,2BAA2BJ,EAAG,IAAI,CAACL,EAAIS,GAAG,6CAA6CJ,EAAG,IAAI,CAACL,EAAIS,GAAG,2CAA2CJ,EAAG,IAAI,CAACL,EAAIS,GAAG,sCAAsCJ,EAAG,IAAI,CAACL,EAAIS,GAAG,WAAWJ,EAAG,IAAI,CAACA,EAAG,SAAS,CAACL,EAAIS,GAAG,kBAAkBJ,EAAG,IAAI,CAACA,EAAG,SAAS,CAACL,EAAIS,GAAG,iBAAiBJ,EAAG,IAAI,CAACA,EAAG,SAAS,CAACL,EAAIS,GAAG,YAAYJ,EAAG,KAAK,CAACL,EAAIS,GAAG,qBAAqBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,6CAA6CJ,EAAG,IAAI,CAACL,EAAIS,GAAG,wBAAwBJ,EAAG,SAAS,CAACL,EAAIS,GAAG,iBAAiBT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,uBAAuBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,WAAWJ,EAAG,KAAK,CAACL,EAAIS,GAAG,eAAeJ,EAAG,IAAI,CAACL,EAAIS,GAAG,4BAA4BJ,EAAG,IAAI,CAACL,EAAIS,GAAG,0BAA0BJ,EAAG,IAAI,CAACL,EAAIS,GAAG,gDAAgDJ,EAAG,IAAI,CAACL,EAAIS,GAAG,mCAAmCJ,EAAG,IAAI,CAACL,EAAIS,GAAG,sBAAsBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,eAAeJ,EAAG,IAAI,CAACL,EAAIS,GAAG,uBAAuBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,eAAeJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,cAAgBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,cAAgBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,cAAcJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,cAAgBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,cAAgBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaJ,EAAG,KAAK,CAACL,EAAIS,GAAG,eAAeJ,EAAG,IAAI,CAACL,EAAIS,GAAG,4BAA4BJ,EAAG,IAAI,CAACL,EAAIS,GAAG,8BAA8BJ,EAAG,OAAO,CAACL,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,cAAcJ,EAAG,IAAI,CAACL,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACL,EAAIS,GAAG,2BAA6BT,EAAIS,GAAG,cAAcJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,2BAA6BT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,yCAA+CT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,kBAAkBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,eAAeJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kBAAoBT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kBAAoBT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kBAAoBT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gCAAsCT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gCAAsCT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gCAAsCT,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACL,EAAIS,GAAG,eAAeJ,EAAG,IAAI,CAACL,EAAIS,GAAG,8BAA8BJ,EAAG,IAAI,CAACL,EAAIS,GAAG,oCAAoCJ,EAAG,OAAO,CAACL,EAAIS,GAAG,YAAYJ,EAAG,IAAI,CAACL,EAAIS,GAAG,mCAAmCJ,EAAG,IAAI,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,cAAcJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,wCAAwCT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kBAAoBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,4EAAsFT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,wCAAwCT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kBAAoBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,4EAAsFT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACL,EAAIS,GAAG,mLAA2LJ,EAAG,IAAI,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,eAAeJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,wCAAwCT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kBAAoBT,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,4BAAkCT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,wCAAwCT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kBAAoBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,wBAAwBJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,6BAA6BT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,8BAA8BJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gCAAsCT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACL,EAAIS,GAAG,cAAcJ,EAAG,KAAK,CAACL,EAAIS,GAAG,eAAeJ,EAAG,IAAI,CAACL,EAAIS,GAAG,0BAA0BJ,EAAG,OAAO,CAACL,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaT,EAAIS,GAAG,YAAYJ,EAAG,IAAI,CAACL,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACL,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,mBAAmBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kBAAoBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAWT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,sDAAsDT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaT,EAAIS,GAAG,wBAAwBJ,EAAG,KAAK,CAACL,EAAIS,GAAG,sBAAsBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,iDAAiDJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,eAAeJ,EAAG,KAAK,CAACL,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,YAAYT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,YAAYJ,EAAG,IAAI,CAACL,EAAIS,GAAG,mCAAmCJ,EAAG,IAAI,CAACL,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACL,EAAIS,GAAG,YAAYT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,mBAAmBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kBAAoBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAWT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,mBAAmBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAeT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAWT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gDAAoDT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,mBAAmBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAeT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gDAAoDT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gDAAoDT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAWT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gCAAsCT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAWT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAWT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,wBAA0BT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,gBAAgBJ,EAAG,IAAI,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,yBAAyBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,UAAUJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kBAAoBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,oBAAoBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,qBAAqBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,2DAAiET,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gCAAsCT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,2EAA2EJ,EAAG,IAAI,CAACL,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,mBAAmBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaJ,EAAG,KAAK,CAACL,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,kBAAkBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,SAASJ,EAAG,IAAI,CAACL,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,iCAAiCJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kBAAoBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,qBAAqBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,eAAeT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,eAAeT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,eAAeT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,eAAeT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,2DAAiET,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,uDAA6DT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,uDAA6DT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,eAAeT,EAAIS,GAAG,uBAAuBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACL,EAAIS,GAAG,YAAcT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,sBAAsBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,UAAUJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kBAAoBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,qBAAqBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,uBAAuBJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,oBAAoBJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,qBAAqBJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,eAAeT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,6DAAmET,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,yDAA+DT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,0DAAgET,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,eAAeT,EAAIS,GAAG,uBAAuBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACL,EAAIS,GAAG,YAAcT,EAAIS,GAAG,oDAAoDJ,EAAG,IAAI,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,UAAUJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kBAAoBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,qBAAqBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,uBAAuBJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,oBAAoBJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,qBAAqBJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,eAAeT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,6DAAmET,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,yDAA+DT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,0DAAgET,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACL,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACL,EAAIS,GAAG,eAAeT,EAAIS,GAAG,sBAAsBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,eAAeT,EAAIS,GAAG,cAAcJ,EAAG,IAAI,CAACL,EAAIS,GAAG,uBAAuBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,eAAeT,EAAIS,GAAG,cAAcJ,EAAG,IAAI,CAACL,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACL,EAAIS,GAAG,eAAeT,EAAIS,GAAG,6BAA6BJ,EAAG,OAAO,CAACL,EAAIS,GAAG,eAAeT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,mBAAmBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAWT,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,eAAeT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,WAAaT,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,eAAeT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAeT,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,eAAeT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,kBAAkBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,kBAAkBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,mBAAmBT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,kBAAkBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,qBAAqBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,eAAeT,EAAIS,GAAG,4BAA4BJ,EAAG,IAAI,CAACL,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,kBAAkBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAWT,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,eAAeT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,WAAaT,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,eAAeT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAeT,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,eAAeT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,kBAAkBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,kBAAkBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,kBAAkBT,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACL,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAASJ,EAAG,IAAI,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,kCAAkCJ,EAAG,IAAI,CAACL,EAAIS,GAAG,6BAA6BJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAeT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAeT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,iBAAiBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,WAAaT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACL,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,aAAaJ,EAAG,IAAI,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,4BAA4BJ,EAAG,IAAI,CAACL,EAAIS,GAAG,+BAA+BJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,2BAA6BT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,0BAA8BT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,8BAA8BJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,2BAA6BT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,kDAA4DT,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACL,EAAIS,GAAG,0BAA0BJ,EAAG,IAAI,CAACL,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaT,EAAIS,GAAG,4BAA4BJ,EAAG,SAAS,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,SAASJ,EAAG,SAAS,CAACL,EAAIS,GAAG,QAAQT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,8BAA8BJ,EAAG,QAAQ,CAACA,EAAG,QAAQ,CAACA,EAAG,KAAK,CAACA,EAAG,KAAK,CAACL,EAAIS,GAAG,QAAQJ,EAAG,KAAK,CAACL,EAAIS,GAAG,YAAYJ,EAAG,QAAQ,CAACA,EAAG,KAAK,CAACA,EAAG,KAAK,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,mBAAmBJ,EAAG,KAAK,CAACL,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,mBAAmBJ,EAAG,KAAK,CAACA,EAAG,KAAK,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,KAAK,CAACA,EAAG,KAAK,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,QAAQT,EAAIS,GAAG,QAAQJ,EAAG,KAAK,CAACL,EAAIS,GAAG,mBAAmBJ,EAAG,KAAK,CAACA,EAAG,KAAK,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACL,EAAIS,GAAG,mBAAmBJ,EAAG,KAAK,CAACA,EAAG,KAAK,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAeT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAeT,EAAIS,GAAG,OAAOJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAeT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,4BAA4BT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,gBAAkBT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,mBAAqBT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAeT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,mBAAqBT,EAAIS,GAAG,OAAOJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAeT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,eAAeT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,cAAgBT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,yBAA2BT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAeT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,mBAAqBT,EAAIS,GAAG,OAAOJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAeT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,mBAAoBT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,yBAA2BT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,qBAAqBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAeT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,mBAAqBT,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACL,EAAIS,GAAG,QAAQT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,OAAOJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACL,EAAIS,GAAG,sBAAsBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACL,EAAIS,GAAG,oBAAoBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,UAAUJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACL,EAAIS,GAAG,uBAAwBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,aAAaJ,EAAG,IAAI,CAACL,EAAIS,GAAG,qCAAqCJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,sBAAwBT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,yBAAyBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,oBAAoBT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,4BAA4BJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,mDAA2DT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,mDAA2DT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,oDAA4DT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaT,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUT,EAAIS,GAAG,QAAQJ,EAAG,KAAK,CAACL,EAAIS,GAAG,0BAA0BJ,EAAG,IAAI,CAACL,EAAIS,GAAG,4CAA4CJ,EAAG,OAAO,CAACL,EAAIS,GAAG,QAAQT,EAAIS,GAAG,OAAOJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,wCAA0CT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,yCAAyCT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,sDAA4DT,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,oDAAsDT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAWT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,sDAA4DT,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,qBAAqBJ,EAAG,QAAQ,CAACA,EAAG,QAAQ,CAACA,EAAG,KAAK,CAACA,EAAG,KAAK,CAACL,EAAIS,GAAG,SAASJ,EAAG,KAAK,CAACL,EAAIS,GAAG,YAAYJ,EAAG,QAAQ,CAACA,EAAG,KAAK,CAACA,EAAG,KAAK,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,SAASJ,EAAG,KAAK,CAACL,EAAIS,GAAG,sBAAsBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,iBAAiBJ,EAAG,KAAK,CAACA,EAAG,KAAK,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,SAASJ,EAAG,KAAK,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,qBAAqBJ,EAAG,KAAK,CAACA,EAAG,KAAK,CAACA,EAAG,OAAO,CAACL,EAAIS,GAAG,SAASJ,EAAG,KAAK,CAACL,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOT,EAAIS,GAAG,2BAA2BJ,EAAG,OAAO,CAACL,EAAIS,GAAG,wBAAwBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,sBAAsBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,eAAeT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACL,EAAIS,GAAG,uBAAuBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,4CAA4CT,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACL,EAAIS,GAAG,YAAYT,EAAIS,GAAG,SAASJ,EAAG,IAAI,CAACL,EAAIS,GAAG,eAAeJ,EAAG,IAAI,CAACL,EAAIS,GAAG,+CAA+CJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,YAAcT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,iBAAmBT,EAAIS,GAAG,mBAAmBJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,iBAAmBT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,2DAA6DT,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACL,EAAIS,GAAG,oBAAoBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,mCAAmCJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaT,EAAIS,GAAG,8BAA8BJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACL,EAAIS,GAAG,oJAAoJJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,oBAAoBT,EAAIS,GAAG,uCAAuCJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,UAAYT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,wBAAwBT,EAAIS,GAAG,mCAAmCJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,UAAYT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,wBAAwBT,EAAIS,GAAG,mCAAmCJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,UAAYT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,0BAA0BT,EAAIS,GAAG,+BAA+BJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,UAAYT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,2BAA2BT,EAAIS,GAAG,8BAA8BJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,WAAYT,EAAIS,GAAG,aAAaJ,EAAG,IAAI,CAACL,EAAIS,GAAG,aAAaJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,qBAAqBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,kBAAoBT,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,UAAYT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,wBAA0BT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,eAAeT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,UAAYT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gBAAkBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,eAAeT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,UAAYT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,eAAiBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,iBAAiBT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,UAAYT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,kBAAoBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,kBAAkBT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,WAAYT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,kBAAoBT,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACL,EAAIS,GAAG,eAAeJ,EAAG,KAAK,CAACL,EAAIS,GAAG,0BAA0BJ,EAAG,IAAI,CAACL,EAAIS,GAAG,uDAAuDJ,EAAG,IAAI,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,4BAA4BT,EAAIS,GAAG,yBAAyBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,4BAA4BT,EAAIS,GAAG,gBAAgBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,eAAeT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,YAAcT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACL,EAAIS,GAAG,0BAA0BT,EAAIS,GAAG,OAAOJ,EAAG,IAAI,CAACL,EAAIS,GAAG,mBAAmBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,SAAST,EAAIS,GAAG,wBAAwBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,2BAA2BJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,YAAcT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACH,EAAG,OAAO,CAACG,YAAY,YAAY,CAACR,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,aAAa,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,aAAa,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,YAAcT,EAAIS,GAAG,OAAOT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,YAAY,CAACR,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,aAAa,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACH,EAAG,OAAO,CAACG,YAAY,YAAY,CAACR,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,aAAa,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,OAAOT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,YAAY,CAACR,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,aAAa,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACH,EAAG,OAAO,CAACG,YAAY,YAAY,CAACR,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,aAAa,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,uBAAuB,CAACR,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,4BAA4BT,EAAIS,GAAG,sBAAsBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,0BAA0BT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAWT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,iBAAmBT,EAAIS,GAAG,mBAAmBJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,iBAAmBT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,qBAAqBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,mBAAmBJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,+BAA+BJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,eAAeT,EAAIS,GAAG,mBAAmBJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,2BAA2BJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,4BAA4BT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,YAAY,CAACR,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,aAAa,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,SAAST,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACL,EAAIS,GAAG,sBAAsBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,8CAA8CJ,EAAG,IAAI,CAACL,EAAIS,GAAG,gDAAgDJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,qEAAuET,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAWT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,kCAAkCJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,UAAYT,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,gBAAkBT,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAWT,EAAIS,GAAG,kBAAkBJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACL,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACL,EAAIS,GAAG,QAAQT,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACL,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACL,EAAIS,GAAG,WAAWT,EAAIS,GAAG,wBAAwBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,QAAQT,EAAIS,GAAG,UAAUJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,mCAAmCT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,qBAAqBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,sBAAsBT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,wBAAwBT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgBR,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,oBAAoBJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgBR,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAeT,EAAIS,GAAG,gBAAgBJ,EAAG,KAAK,CAACL,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,eAAeJ,EAAG,IAAI,CAACL,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaT,EAAIS,GAAG,0CAA0CJ,EAAG,IAAI,CAACL,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACL,EAAIS,GAAG,iBAAiBT,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACL,EAAIS,GAAG,aAAaT,EAAIS,GAAG,0BAA0BJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,mBAAmBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,0BAA0BJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,yBAAyBT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,sBAAsBT,EAAIS,GAAG,gDAAgDJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,yBAAyBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,qBAAqBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,uBAAuBJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,2BAA2BJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,uBAAyBT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,yBAA2BT,EAAIS,GAAG,UAAUJ,EAAG,KAAK,CAACL,EAAIS,GAAG,iBAAiBJ,EAAG,IAAI,CAACL,EAAIS,GAAG,uBAAuBJ,EAAG,MAAM,CAACG,YAAY,QAAQ,CAACH,EAAG,OAAO,CAACA,EAAG,OAAO,CAACG,YAAY,YAAY,CAACR,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,aAAa,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,OAAOT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,YAAY,CAACR,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,aAAa,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,aAAa,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,WAAaT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,YAAY,CAACR,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,aAAa,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,OAAOT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,YAAY,CAACR,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,aAAa,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,aAAa,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAeT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,aAAa,CAACR,EAAIS,GAAG,iBAAiBT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,gBAAkBT,EAAIS,GAAG,OAAOT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,YAAY,CAACR,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,aAAa,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,aAAa,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,YAAcT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,aAAa,CAACR,EAAIS,GAAG,iBAAiBT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,eAAiBT,EAAIS,GAAG,OAAOT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,YAAY,CAACR,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,aAAa,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,aAAa,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,WAAaT,EAAIS,GAAG,OAAOT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,YAAY,CAACR,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,aAAa,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,OAAOT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,YAAY,CAACR,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,aAAa,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,aAAa,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,cAAgBT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,YAAY,CAACR,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,aAAa,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,OAAOT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,YAAY,CAACR,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,aAAa,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,OAAOT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,YAAY,CAACR,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,aAAa,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,kBAAkB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,kBAAkB,CAACR,EAAIS,GAAG,oBAAoBT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,kBAAkB,CAACR,EAAIS,GAAG,qBAAqBT,EAAIS,GAAG,sBAAsBJ,EAAG,OAAO,CAACG,YAAY,kBAAkB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,kBAAkB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACG,YAAY,kBAAkB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,oBAAoB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,kBAAkB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,oBAAoB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,kBAAkB,CAACR,EAAIS,GAAG,iBAAiBT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,uBAAuB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,kBAAkB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,kBAAkB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,kBAAkB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,kBAAkB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,wBAAwBJ,EAAG,OAAO,CAACG,YAAY,YAAY,CAACR,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,aAAa,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,OAAOT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,YAAY,CAACR,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,aAAa,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,uBAAuB,CAACR,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgBR,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,kBAAkBT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,kBAAkBJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,oBAAoBT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,aAAeT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,oBAAoBT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,YAAcT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,oBAAoBT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,WAAaT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,oBAAoBT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,WAAaT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACG,YAAY,2BAA2B,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,oBAAoBT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,cAAgBT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,eAAeT,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,aAAaT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgBR,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,eAAeT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAUT,EAAIS,GAAG,mBAAmBJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,eAAeT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAUT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,sBAAsBJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,wBAAwBJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAUT,EAAIS,GAAG,kBAAkBJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,eAAeT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,gBAAkBT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,QAAUT,EAAIS,GAAG,kBAAkBJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,eAAeT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,eAAiBT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,kBAAkBJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,iBAAiBT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,8BAA8BJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,sBAAsBT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,oBAAoBJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,yBAAyBJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,wBAAwBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,kBAAkBJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,qBAAqBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,qBAAqBJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,eAAeT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,eAAiBT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,cAAcJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,gBAAgBT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,6BAA6BJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,oBAAoBJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,mBAAmBJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,mBAAmBJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,aAAaJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,6BAA6BJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,6BAA6BT,EAAIS,GAAG,qBAAqBJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,eAAeT,EAAIS,GAAG,oCAAoCJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,eAAeT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,WAAaT,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,gBAAkBT,EAAIS,GAAG,2BAA2BJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,qBAAqBT,EAAIS,GAAG,QAAQJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,cAAcT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,iBAAiBT,EAAIS,GAAG,kBAAkBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,UAAUJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,QAAQT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,OAAOT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAWT,EAAIS,GAAG,yBAAyBJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAWT,EAAIS,GAAG,gBAAgBJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,WAAWJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,mBAAmBJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,yBAAyBJ,EAAG,OAAO,CAACG,YAAY,wBAAwB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAWT,EAAIS,GAAG,kBAAkBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,yBAAyBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,UAAUT,EAAIS,GAAG,kBAAkBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,SAAST,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,qBAAqB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,YAAYJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,SAAWT,EAAIS,GAAG,eAAeJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,iBAAiBJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,oBAAoBJ,EAAG,OAAO,CAACG,YAAY,iBAAiB,CAACR,EAAIS,GAAG,eAAeT,EAAIS,GAAG,OAAOJ,EAAG,OAAO,CAACG,YAAY,eAAe,CAACR,EAAIS,GAAG,gBAAkBT,EAAIS,GAAG,SAASJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,KAAKJ,EAAG,OAAO,CAACG,YAAY,gBAAgB,CAACR,EAAIS,GAAG,WAAWT,EAAIS,GAAG,0BAA0BJ,EAAG,OAAO,CAACG,YAAY,YAAY,CAACR,EAAIS,GAAG,MAAMJ,EAAG,OAAO,CAACG,YAAY,aAAa,CAACR,EAAIS,GAAG,YAAYT,EAAIS,GAAG,OAAOT,EAAIS,GAAG,UAAUJ,EAAG,IAAI,CAACL,EAAIS,GAAG,cCq5D724N,GACE,KAAF,mBACE,WAAF,GAGE,KALF,WAMI,MAAJ,KC55DsY,I,YCOlYG,EAAY,eACd,EACAb,EACAQ,GACA,EACA,KACA,KACA,MAIa,aAAAK,E,gCClBff,EAAOC,QAAU,IAA0B,wC,qBCA3CD,EAAOC,QAAU,IAA0B,wC,uBCA3CD,EAAOC,QAAU,IAA0B,wC,uBCA3CD,EAAOC,QAAU,IAA0B,wC,uBCA3CD,EAAOC,QAAU,IAA0B,wC,uBCA3CD,EAAOC,QAAU,IAA0B,wC,uBCA3CD,EAAOC,QAAU,IAA0B,wC,uBCA3CD,EAAOC,QAAU,IAA0B,wC,qBCA3CD,EAAOC,QAAU,IAA0B,wC,uBCA3CD,EAAOC,QAAU,IAA0B,wC,qBCA3CD,EAAOC,QAAU,IAA0B,wC,uBCA3CD,EAAOC,QAAU,IAA0B,wC,uBCA3CD,EAAOC,QAAU,IAA0B,wC,uBCA3CD,EAAOC,QAAU,IAA0B,wC,uBCA3CD,EAAOC,QAAU,IAA0B,wC,uBCA3CD,EAAOC,QAAU,IAA0B,wC,qBCA3CD,EAAOC,QAAU,IAA0B,wC,qBCA3CD,EAAOC,QAAU,IAA0B,wC,qBCA3CD,EAAOC,QAAU,IAA0B,wC,qBCA3CD,EAAOC,QAAU,IAA0B,wC,qBCA3CD,EAAOC,QAAU,IAA0B","file":"js/chunk-23080859.1a541dd3.js","sourcesContent":["module.exports = __webpack_public_path__ + \"img/微信截图_20211219173819.9a511975.png\";","module.exports = __webpack_public_path__ + \"img/微信截图_20211220005321.ea65d979.png\";","module.exports = __webpack_public_path__ + \"img/1639757871(1).ab1fc0d9.jpg\";","module.exports = __webpack_public_path__ + \"img/微信截图_20211219153236.830c1454.png\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"vc-snippet-doc\"},[_c('h1',[_vm._v(\"JavaScript 正则表达式迷你书\")]),_c('p',[_c('code',[_vm._v(\"javascript-regular-expressions-mini-book\")])]),_c('p',[_vm._v(\"笔记：感谢这本📕的作者\")]),_c('p',[_vm._v(\"正则表达式是\"),_c('strong',[_vm._v(\"匹配模式\")]),_vm._v(\"，要么\"),_c('strong',[_vm._v(\"匹配字符\")]),_vm._v(\"，要么\"),_c('strong',[_vm._v(\"匹配位置\")])]),_c('p',[_vm._v(\"对于位置的理解，我们可以理解成\"),_c('strong',[_vm._v(\"空字符\")])]),_c('p',[_vm._v(\"第一章 正则表达式\"),_c('strong',[_vm._v(\"字符匹配\")]),_vm._v(\"攻略\")]),_c('p',[_vm._v(\"第二章 正则表达式\"),_c('strong',[_vm._v(\"位置匹配\")]),_vm._v(\"攻略\")]),_c('p',[_vm._v(\"第三章 正则表达式\"),_c('strong',[_vm._v(\"括号的作用\")])]),_c('p',[_vm._v(\"第四章 正则表达式\"),_c('strong',[_vm._v(\"回溯法原理\")])]),_c('p',[_vm._v(\"第五章 正则表达式的\"),_c('strong',[_vm._v(\"拆分\")])]),_c('p',[_vm._v(\"第六章 正则表达式的\"),_c('strong',[_vm._v(\"构建\")])]),_c('p',[_vm._v(\"第七章 正则表达式\"),_c('strong',[_vm._v(\"编程\")])]),_c('h3',[_vm._v(\"每一章都讨论了什么？\")]),_c('blockquote',[_c('p',[_vm._v(\"正则是\"),_c('strong',[_vm._v(\"匹配模式\")]),_vm._v(\"，要么\"),_c('strong',[_vm._v(\"匹配字符\")]),_vm._v(\"，要么\"),_c('strong',[_vm._v(\"匹配位置\")]),_vm._v(\"。\")])]),_c('p',[_vm._v(\"第一章和第二章以这个角度去讲解了正则表达式的基础。\")]),_c('blockquote',[_c('p',[_vm._v(\"在正则可以\"),_c('strong',[_vm._v(\"使用括号捕获数据\")]),_vm._v(\"，要么在 \"),_c('code',[_vm._v(\"API\")]),_vm._v(\" 中进行\"),_c('strong',[_vm._v(\"分组引用\")]),_vm._v(\"，要么在正则里进行\"),_c('strong',[_vm._v(\"反向引用\")]),_vm._v(\"。\")])]),_c('p',[_vm._v(\"第三章的主题，讲解了正则表达式中\"),_c('strong',[_vm._v(\"括号的作用\")]),_vm._v(\"。\")]),_c('blockquote',[_c('p',[_vm._v(\"学习正则，是需要了解其匹配原理的。\")])]),_c('p',[_vm._v(\"第四章，讲解了正则表达式的\"),_c('strong',[_vm._v(\"回溯法原理\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"第五章，是从读的角度，去\"),_c('strong',[_vm._v(\"拆分一个正则表达式\")]),_vm._v(\"，而第六章是从写的角度，去\"),_c('strong',[_vm._v(\"构建一个正则表达式\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"第七章讲解了\"),_c('strong',[_vm._v(\"正则的用法\")]),_vm._v(\"，和相关 \"),_c('code',[_vm._v(\"API\")]),_vm._v(\" 需要注意的地方。\")]),_c('h2',[_vm._v(\"第一章 正则表达式\"),_c('strong',[_vm._v(\"字符匹配\")]),_vm._v(\"攻略\")]),_c('blockquote',[_c('p',[_vm._v(\"正则表达式是\"),_c('strong',[_vm._v(\"匹配模式\")]),_vm._v(\"，要么\"),_c('strong',[_vm._v(\"匹配字符\")]),_vm._v(\"，要么\"),_c('strong',[_vm._v(\"匹配位置\")]),_vm._v(\"。\")])]),_c('p',[_vm._v(\"元字符太多了，看起来没有系统性，不好记。\")]),_c('p',[_vm._v(\"内容包括：\")]),_c('p',[_c('strong',[_vm._v(\"两种模糊匹配\")])]),_c('p',[_c('strong',[_vm._v(\"字符组\")])]),_c('p',[_c('strong',[_vm._v(\"量词\")])]),_c('p',[_c('strong',[_vm._v(\"分支结构\")])]),_c('p',[_c('strong',[_vm._v(\"案例分析\")])]),_c('h3',[_vm._v(\"1.1. 两种模糊匹配\")]),_c('p',[_vm._v(\"如果正则只有精确匹配是没多大意义的，比如 \"),_c('code',[_vm._v(\"/hello/\")]),_vm._v(\"，也只能匹配字符串中的 \"),_c('code',[_vm._v(\"\\\"hello\\\"\")]),_vm._v(\" 这个子串。\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/hello/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"hello\\\"\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => true\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"正则表达式之所以强大，是因为其能实现模糊匹配。 而模糊匹配，有两个方向上的“模糊”：横向模糊和纵向模糊。\")]),_c('h4',[_vm._v(\"1.1.1. 横向模糊匹配\")]),_c('p',[_vm._v(\"横向模糊指的是，一个正则可匹配的字符串的长度不是固定的，可以是多种情况的。\")]),_c('p',[_vm._v(\"其实现的方式是\"),_c('strong',[_vm._v(\"使用量词\")]),_vm._v(\"。譬如 \"),_c('code',[_vm._v(\"{m,n}\")]),_vm._v(\"，表示连续出现最少 \"),_c('code',[_vm._v(\"m\")]),_vm._v(\" 次，最多 \"),_c('code',[_vm._v(\"n\")]),_vm._v(\" 次。\")]),_c('p',[_vm._v(\"比如正则 \"),_c('code',[_vm._v(\"/ab{2,5}c/\")]),_vm._v(\" 表示匹配这样一个字符串：第一个字符是 \\\"\"),_c('code',[_vm._v(\"a\")]),_vm._v(\"\\\"，接下来是 \"),_c('code',[_vm._v(\"2\")]),_vm._v(\" 到 \"),_c('code',[_vm._v(\"5\")]),_vm._v(\" 个字符 \\\"\"),_c('code',[_vm._v(\"b\")]),_vm._v(\"\\\"，最后 是字符 \\\"\"),_c('code',[_vm._v(\"c\")]),_vm._v(\"\\\"。\")]),_c('p',[_vm._v(\"测试如下：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/ab{2,5}c/g\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"abc abbc abbbc abbbbc abbbbbc abbbbbbc\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"match\")]),_vm._v(\"(regex) );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"abbc\\\", \\\"abbbc\\\", \\\"abbbbc\\\", \\\"abbbbbc\\\"]\")]),_vm._v(\"\\n\")])]),_c('blockquote',[_c('p',[_vm._v(\"NOTE\")])]),_c('div',{staticClass:\"tip\"},[_c('p',[_vm._v(\"案例中用的正则是 \"),_c('code',[_vm._v(\"/ab{2,5}c/g\")]),_vm._v(\"，其中 \"),_c('code',[_vm._v(\"g\")]),_vm._v(\" 是正则的一个修饰符。表示全局匹配，即，在目 标字符串中按顺序找到满足匹配模式的所有子串，强调的是“所有”，而不只是“第一个” \"),_c('code',[_vm._v(\"。g\")]),_vm._v(\" 是单词 \"),_c('code',[_vm._v(\"global\")]),_vm._v(\" 的首字母。\")])]),_c('h4',[_vm._v(\"1.1.2. 纵向模糊匹配\")]),_c('p',[_vm._v(\"纵向模糊指的是，一个正则匹配的字符串，具体到某一位字符时，它可以不是某个确定的字符，可以有多种可能。\")]),_c('div',{staticClass:\"warning\"},[_c('p',[_vm._v(\"其实现的方式是使用\"),_c('strong',[_vm._v(\"字符组\")]),_vm._v(\"。\")])]),_c('p',[_vm._v(\"譬如 \"),_c('code',[_vm._v(\"[abc]\")]),_vm._v(\"，表示该字符是可以字符 \"),_c('code',[_vm._v(\"\\\"a\\\"、\\\"b\\\"、\\\"c\\\"\")]),_vm._v(\" 中的任何一个。 比如 \"),_c('code',[_vm._v(\"/a[123]b/\")]),_vm._v(\" 可以匹配如下三种字符串： \"),_c('code',[_vm._v(\"\\\"a1b\\\"、\\\"a2b\\\"、\\\"a3b\\\"\")])]),_c('p',[_vm._v(\"测试如下：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/a[123]b/g\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"a0b a1b a2b a3b a4b\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"match\")]),_vm._v(\"(regex) );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"a1b\\\", \\\"a2b\\\", \\\"a3b\\\"]\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"以上就是本章讲的主体内容，只要掌握横向和纵向模糊匹配，就能解决很大部分正则匹配问题。\")]),_c('h3',[_vm._v(\"1.2. 字符组\")]),_c('p',[_vm._v(\"需要强调的是，虽叫\"),_c('strong',[_vm._v(\"字符组\")]),_vm._v(\"（字符类），但只是其中一个字符。 例如 \"),_c('code',[_vm._v(\"[abc]\")]),_vm._v(\"，表示匹配一个字符，它可以是 \"),_c('code',[_vm._v(\"\\\"a\\\"、\\\"b\\\"、\\\"c\\\"\")]),_vm._v(\" 之一。\")]),_c('h4',[_vm._v(\"1.2.1. 范围表示法\")]),_c('p',[_vm._v(\"如果字符组里的字符特别多的话，怎么办？可以使用范围表示法。\")]),_c('p',[_vm._v(\"比如 \"),_c('code',[_vm._v(\"[123456abcdefGHIJKLM]\")]),_vm._v(\"，可以写成 \"),_c('code',[_vm._v(\"[1-6a-fG-M]\")]),_vm._v(\"。用连字符 - 来省略和简写。\")]),_c('p',[_vm._v(\"因为连字符有特殊用途，那么要匹配 \"),_c('code',[_vm._v(\"\\\"a\\\"、\\\"-\\\"、\\\"z\\\"\")]),_vm._v(\" 这三者中任意一个字符，该怎么做呢？\")]),_c('p',[_vm._v(\"不能写成 \"),_c('code',[_vm._v(\"[a-z]\")]),_vm._v(\"，因为其表示小写字符中的任何一个字符。\")]),_c('p',[_vm._v(\"可以写成如下的方式：\"),_c('code',[_vm._v(\"[-az]\")]),_vm._v(\" 或 \"),_c('code',[_vm._v(\"[az-] 或 [a\\\\-z]\")]),_vm._v(\"。 即要么放在开头，要么放在结尾，要么转义。总之不会让引擎认为是范围表示法就行了。\")]),_c('h4',[_vm._v(\"1.2.2. 排除字符组\")]),_c('p',[_vm._v(\"纵向模糊匹配，还有一种情形就是，某位字符可以是任何东西，但就不能是 \"),_c('code',[_vm._v(\"\\\"a\\\"、\\\"b\\\"、\\\"c\\\"\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"此时就是\"),_c('strong',[_vm._v(\"排除字符组\")]),_vm._v(\"（反义字符组）的概念。例如 \"),_c('code',[_vm._v(\"[^abc]\")]),_vm._v(\"，表示是一个除 \"),_c('code',[_vm._v(\"\\\"a\\\"、\\\"b\\\"、\\\"c\\\"\")]),_vm._v(\"之外的任意一个字 符。字符组的第一位放 \"),_c('code',[_vm._v(\"^\")]),_vm._v(\"（\"),_c('strong',[_vm._v(\"脱字符\")]),_vm._v(\"），表示求反的概念。\")]),_c('p',[_vm._v(\"当然，也有相应的范围表示法。\")]),_c('h4',[_vm._v(\"1.2.3. 常见的简写形式\")]),_c('p',[_vm._v(\"有了字符组的概念后，一些常见的符号我们也就理解了。因为它们都是系统自带的简写形式。\")]),_c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"字符组\")]),_c('th',[_vm._v(\"具体含义\")])])]),_c('tbody',[_c('tr',[_c('td',[_c('code',[_vm._v(\"\\\\d\")])]),_c('td',[_vm._v(\"表示 \"),_c('code',[_vm._v(\"[0-9]\")]),_vm._v(\"。表示是\"),_c('strong',[_vm._v(\"一位数字\")]),_vm._v(\"。 记忆方式：其英文是 \"),_c('code',[_vm._v(\"digit（数字）。\")])])]),_c('tr',[_c('td',[_c('code',[_vm._v(\"\\\\D\")])]),_c('td',[_vm._v(\"表示 \"),_c('code',[_vm._v(\"[^0-9]\")]),_vm._v(\"。表示\"),_c('strong',[_vm._v(\"除数字外的任意字\")]),_vm._v(\"符。\")])]),_c('tr',[_c('td',[_c('code',[_vm._v(\"\\\\w\")])]),_c('td',[_vm._v(\"表示 \"),_c('code',[_vm._v(\"[0-9a-zA-Z_]\")]),_vm._v(\"。表示\"),_c('strong',[_vm._v(\"数字、大小写字母和下划线\")]),_vm._v(\"。 记忆方式：\"),_c('code',[_vm._v(\"w\")]),_vm._v(\" 是 \"),_c('code',[_vm._v(\"word\")]),_vm._v(\" 的简写，也称\"),_c('strong',[_vm._v(\"单词字符\")]),_vm._v(\"。\")])]),_c('tr',[_c('td',[_c('code',[_vm._v(\"\\\\W\")])]),_c('td',[_vm._v(\"表示 \"),_c('code',[_vm._v(\"[^0-9a-zA-Z_]\")]),_vm._v(\"。\"),_c('strong',[_vm._v(\"非单词字符\")]),_vm._v(\"。\")])]),_c('tr',[_c('td',[_c('code',[_vm._v(\"\\\\s\")])]),_c('td',[_vm._v(\"表示 \"),_c('code',[_vm._v(\"[ \\\\t\\\\v\\\\n\\\\r\\\\f]\")]),_vm._v(\"。表示\"),_c('strong',[_vm._v(\"空白符\")]),_vm._v(\"，包括\"),_c('strong',[_vm._v(\"空格、水平制表符、垂直制表符、换行符、回车符、换页符\")]),_vm._v(\"。记忆方式：\"),_c('code',[_vm._v(\"s\")]),_vm._v(\" 是 \"),_c('code',[_vm._v(\"space\")]),_vm._v(\" 的首字母，空白符的单词是 \"),_c('code',[_vm._v(\"white space\")]),_vm._v(\"。\")])]),_c('tr',[_c('td',[_c('code',[_vm._v(\"\\\\S\")])]),_c('td',[_vm._v(\"表示 \"),_c('code',[_vm._v(\"[^ \\\\t\\\\v\\\\n\\\\r\\\\f]\")]),_vm._v(\"。 \"),_c('strong',[_vm._v(\"非空白符\")]),_vm._v(\"。\")])]),_c('tr',[_c('td',[_c('code',[_vm._v(\".\")])]),_c('td',[_vm._v(\"表示 \"),_c('code',[_vm._v(\"[^\\\\n\\\\r\\\\u2028\\\\u2029]\")]),_vm._v(\"。通配符，表示几乎任意字符。\"),_c('strong',[_vm._v(\"换行符、回车符、行分隔符和段分隔符除外\")]),_vm._v(\"。 记忆方式：想想省略号 \"),_c('code',[_vm._v(\"…\")]),_vm._v(\" 中的每个点，都可以理解成占位符，表示任何类似的东西。\")])])])]),_c('p',[_vm._v(\"如果要匹配任意字符怎么办？可以使用 \"),_c('code',[_vm._v(\"[\\\\d\\\\D]、[\\\\w\\\\W]、[\\\\s\\\\S] 和 [^]\")]),_vm._v(\" 中任何的一个。\")]),_c('h3',[_vm._v(\"1.3. 量词\")]),_c('p',[_vm._v(\"量词也称重复。掌握 \"),_c('code',[_vm._v(\"{m,n}\")]),_vm._v(\" 的准确含义后，只需要记住一些简写形式。\")]),_c('h4',[_vm._v(\"1.3.1. 简写形式\")]),_c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"量词\")]),_c('th',[_vm._v(\"具体含义\")])])]),_c('tbody',[_c('tr',[_c('td',[_c('code',[_vm._v(\"{m,}\")])]),_c('td',[_vm._v(\"表示至少出现 \"),_c('code',[_vm._v(\"m\")]),_vm._v(\" 次。\")])]),_c('tr',[_c('td',[_c('code',[_vm._v(\"{m}\")])]),_c('td',[_vm._v(\"等价于 \"),_c('code',[_vm._v(\"{m,m}\")]),_vm._v(\"，表示出现 \"),_c('code',[_vm._v(\"m\")]),_vm._v(\" 次。\")])]),_c('tr',[_c('td',[_c('code',[_vm._v(\"?\")])]),_c('td',[_vm._v(\"等价于 \"),_c('code',[_vm._v(\"{0,1}\")]),_vm._v(\"，表示\"),_c('strong',[_vm._v(\"出现或者不出现\")]),_vm._v(\"。记忆方式：问号的意思表示，有吗？\")])]),_c('tr',[_c('td',[_c('code',[_vm._v(\"+\")])]),_c('td',[_vm._v(\"等价于 \"),_c('code',[_vm._v(\"{1,}\")]),_vm._v(\"，表示\"),_c('strong',[_vm._v(\"出现至少一次\")]),_vm._v(\"。 记忆方式：加号是追加的意思，得先有一个，然后才考虑追加。\")])]),_c('tr',[_c('td',[_c('code',[_vm._v(\"*\")])]),_c('td',[_vm._v(\"等价于 \"),_c('code',[_vm._v(\"{0,}\")]),_vm._v(\"，表示\"),_c('strong',[_vm._v(\"出现任意次\")]),_vm._v(\"，有可能不出现。记忆方式：看看天上的星星，可能一颗没有，可能零散有几颗，可能数也数不过来。\")])])])]),_c('h4',[_vm._v(\"1.3.2. 贪婪匹配与惰性匹配\")]),_c('p',[_vm._v(\"看如下的例子：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/\\\\d{2,5}/g\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"123 1234 12345 123456\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"match\")]),_vm._v(\"(regex) );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"123\\\", \\\"1234\\\", \\\"12345\\\", \\\"12345\\\"]\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"其中正则 \"),_c('code',[_vm._v(\"/\\\\d{2,5}/\")]),_vm._v(\"，表示数字连续出现 \"),_c('code',[_vm._v(\"2\")]),_vm._v(\" 到 \"),_c('code',[_vm._v(\"5\")]),_vm._v(\" 次。会匹配 \"),_c('code',[_vm._v(\"2 位、3 位、4 位、5 位\")]),_vm._v(\"连续数字。\")]),_c('p',[_vm._v(\"但是其是贪婪的，它会尽可能多的匹配。你能给我 \"),_c('code',[_vm._v(\"6\")]),_vm._v(\" 个，我就要 \"),_c('code',[_vm._v(\"5\")]),_vm._v(\" 个。你能给我 \"),_c('code',[_vm._v(\"3\")]),_vm._v(\" 个，我就要 \"),_c('code',[_vm._v(\"3\")]),_vm._v(\" 个。\")]),_c('p',[_vm._v(\"反正只要在能力范围内，越多越好。 我们知道有时贪婪不是一件好事。而惰性匹配，就是尽可能少的匹配：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/\\\\d{2,5}?/g\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"123 1234 12345 123456\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"match\")]),_vm._v(\"(regex) );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"12\\\", \\\"12\\\", \\\"34\\\", \\\"12\\\", \\\"34\\\", \\\"12\\\", \\\"34\\\", \\\"56\\\"]\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"其中 \"),_c('code',[_vm._v(\"/\\\\d{2,5}?/\")]),_vm._v(\" 表示，虽然 2 到 5 次都行，当 2 个就够的时候，就不再往下尝试了。\")]),_c('p',[_vm._v(\"通过在量词后面加个问号就能实现惰性匹配，因此所有惰性匹配情形如下：\")]),_c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"惰性量词\")]),_c('th',[_vm._v(\"贪婪量词\")])])]),_c('tbody',[_c('tr',[_c('td',[_c('code',[_vm._v(\"{m,n}?\")])]),_c('td',[_c('code',[_vm._v(\"{m,n}\")])])]),_c('tr',[_c('td',[_c('code',[_vm._v(\"{m,}?\")])]),_c('td',[_c('code',[_vm._v(\"{m,}\")])])]),_c('tr',[_c('td',[_c('code',[_vm._v(\"??\")])]),_c('td',[_c('code',[_vm._v(\"?\")])])]),_c('tr',[_c('td',[_c('code',[_vm._v(\"+?\")])]),_c('td',[_c('code',[_vm._v(\"+\")])])]),_c('tr',[_c('td',[_c('code',[_vm._v(\"*?\")])]),_c('td',[_c('code',[_vm._v(\"*\")])])])])]),_c('div',{staticClass:\"tip\"},[_c('p',[_vm._v(\"TIP 对惰性匹配的记忆方式是：量词后面加个问号，问一问你知足了吗，你很贪婪吗？\")])]),_c('h3',[_vm._v(\"1.4. 多选分支\")]),_c('p',[_vm._v(\"一个模式可以实现横向和纵向模糊匹配。而多选分支可以支持多个子模式任选其一。\")]),_c('p',[_vm._v(\"具体形式如下：\"),_c('code',[_vm._v(\"(p1|p2|p3)\")]),_vm._v(\"，其中 \"),_c('code',[_vm._v(\"p1、p2 和 p3\")]),_vm._v(\" 是子模式，用 \"),_c('code',[_vm._v(\"|\")]),_vm._v(\"（管道符）分隔，表示其中任何之一。\")]),_c('p',[_vm._v(\"例如要匹配字符串 \\\"\"),_c('code',[_vm._v(\"good\")]),_vm._v(\"\\\" 和 \\\"\"),_c('code',[_vm._v(\"nice\")]),_vm._v(\"\\\" 可以使用 \"),_c('code',[_vm._v(\"/good|nice/\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"测试如下：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/good|nice/g\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"good idea, nice try.\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"match\")]),_vm._v(\"(regex) );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"good\\\", \\\"nice\\\"]\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"但有个事实我们应该注意，比如我用 \"),_c('code',[_vm._v(\"/good|goodbye/\")]),_vm._v(\"，去匹配 \"),_c('code',[_vm._v(\"\\\"goodbye\\\"\")]),_vm._v(\" 字符串时，结果是 \"),_c('code',[_vm._v(\"\\\"good\\\"\")]),_vm._v(\"：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/good|goodbye/g\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"goodbye\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"match\")]),_vm._v(\"(regex) );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"good\\\"]\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"而把正则改成 \"),_c('code',[_vm._v(\"/goodbye|good/\")]),_vm._v(\"，结果是：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/goodbye|good/g\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"goodbye\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"match\")]),_vm._v(\"(regex) );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"goodbye\\\"]\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"也就是说，分支结构也是惰性的，即当前面的匹配上了，后面的就不再尝试了。\")]),_c('h3',[_vm._v(\"1.5. 案例分析\")]),_c('p',[_vm._v(\"匹配字符，无非就是字符组、量词和分支结构的组合使用罢了。\")]),_c('p',[_vm._v(\"下面找几个例子演练一下（其中，每个正则并不是只有唯一写法）：\")]),_c('h4',[_vm._v(\"1.5.1. 匹配 16 进制颜色值 要求匹配：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_vm._v(\"#ffbbad\\n#\"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"Fc01\")]),_vm._v(\"DF\\n#\"),_c('span',{staticClass:\"hljs-variable constant_\"},[_vm._v(\"FFF\")]),_vm._v(\"\\n#ffE\\n\")])]),_c('p',[_vm._v(\"分析： 表示一个 16 进制字符，可以用字符组 \"),_c('code',[_vm._v(\"[0-9a-fA-F]\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"其中字符可以出现 3 或 6 次，需要是用量词和分支结构。\")]),_c('p',[_vm._v(\"使用分支结构时，需要注意顺序。\")]),_c('p',[_vm._v(\"正则如下：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/#([0-9a-fA-F]{6}|[0-9a-fA-F]{3})/g\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"#ffbbad #Fc01DF #FFF #ffE\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"match\")]),_vm._v(\"(regex) );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"#ffbbad\\\", \\\"#Fc01DF\\\", \\\"#FFF\\\", \\\"#ffE\\\"]\")]),_vm._v(\"\\n\")])]),_c('h4',[_vm._v(\"1.5.2. 匹配时间\")]),_c('p',[_vm._v(\"以 24 小时制为例。 要求匹配：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"23\")]),_vm._v(\":\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"59\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"02\")]),_vm._v(\":\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"07\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"分析：\")]),_c('p',[_vm._v(\"共 4 位数字，第一位数字可以为 \"),_c('code',[_vm._v(\"[0-2]\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"当第 1 位为 \\\"2\\\" 时，第 2 位可以为 \"),_c('code',[_vm._v(\"[0-3]\")]),_vm._v(\"，其他情况时，第 2 位为 \"),_c('code',[_vm._v(\"[0-9]\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"第 3 位数字为 \"),_c('code',[_vm._v(\"[0-5]\")]),_vm._v(\"，第4位为 \"),_c('code',[_vm._v(\"[0-9]\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"正则如下：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/^([01][0-9]|[2][0-3]):[0-5][0-9]$/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"23:59\\\"\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"02:07\\\"\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => true\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => true\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"NOTE 正则中使用了 \"),_c('code',[_vm._v(\"^\")]),_vm._v(\" 和 \"),_c('code',[_vm._v(\"$\")]),_vm._v(\"，分别表示字符串开头和结尾。\")]),_c('p',[_vm._v(\"如果也要求匹配 \"),_c('code',[_vm._v(\"\\\"7:9\\\"\")]),_vm._v(\"，也就是说时分前面的 \"),_c('code',[_vm._v(\"\\\"0\\\"\")]),_vm._v(\" 可以省略。\")]),_c('p',[_vm._v(\"此时正则变成：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/^(0?[0-9]|1[0-9]|[2][0-3]):(0?[0-9]|[1-5][0-9])$/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"23:59\\\"\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"02:07\\\"\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"7:9\\\"\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => true\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => true\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => true\")]),_vm._v(\"\\n\")])]),_c('h4',[_vm._v(\"1.5.3. 匹配日期\")]),_c('p',[_vm._v(\"比如 \"),_c('code',[_vm._v(\"yyyy-mm-dd\")]),_vm._v(\" 格式为例。 要求匹配：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2017\")]),_vm._v(\"-\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"06\")]),_vm._v(\"-\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"10\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"分析：\")]),_c('p',[_vm._v(\"年，四位数字即可，可用 \"),_c('code',[_vm._v(\"[0-9]{4}\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"月，共 12 个月，分两种情况 \"),_c('code',[_vm._v(\"\\\"01\\\"、\\\"02\\\"、…、\\\"09\\\" 和 \\\"10\\\"、\\\"11\\\"、\\\"12\\\"\")]),_vm._v(\"，可用 \"),_c('code',[_vm._v(\"(0[1-9]|1[0-2])\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"日，最大 31 天，可用 \"),_c('code',[_vm._v(\"(0[1-9]|[12][0-9]|3[01])\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"正则如下：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"2017-06-10\\\"\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => true\")]),_vm._v(\"\\n\")])]),_c('h4',[_vm._v(\"1.5.4. window 操作系统文件路径\")]),_c('p',[_vm._v(\"要求匹配：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"F\")]),_vm._v(\":\\\\study\\\\javascript\\\\regex\\\\regular expression.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"pdf\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"F\")]),_vm._v(\":\\\\study\\\\javascript\\\\regex\\\\\\n\"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"F\")]),_vm._v(\":\\\\study\\\\javascript\\n\"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"F\")]),_vm._v(\":\\\\\\n\")])]),_c('p',[_vm._v(\"分析：\")]),_c('p',[_vm._v(\"整体模式是:\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_vm._v(\"盘符:\\\\文件夹\\\\文件夹\\\\文件夹\\\\\\n\")])]),_c('p',[_vm._v(\"其中匹配 \"),_c('code',[_vm._v(\"\\\"F:\\\\\\\"\")]),_vm._v(\"，需要使用 \"),_c('code',[_vm._v(\"[a-zA-Z]:\\\\\\\\\")]),_vm._v(\"，其中盘符不区分大小写，注意 \"),_c('code',[_vm._v(\"\\\\\")]),_vm._v(\" 字符需要转义。\")]),_c('p',[_vm._v(\"文件名或者文件夹名，不能包含一些特殊字符，此时我们需要排除字符组 \"),_c('code',[_vm._v(\"[^\\\\\\\\:*<>|\\\"?\\\\r\\\\n/]\")]),_vm._v(\" 来表示合法字符。\")]),_c('p',[_vm._v(\"另外它们的名字不能为空名，至少有一个字符，也就是要使用量词 \"),_c('code',[_vm._v(\"+\")]),_vm._v(\"。因此匹配 \"),_c('code',[_vm._v(\"文件夹\\\\\")]),_vm._v(\"，可用 \"),_c('code',[_vm._v(\"[^\\\\\\\\:*<>|\\\"?\\\\r\\\\n/]+\\\\\\\\\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"另外 \"),_c('code',[_vm._v(\"文件夹\\\\\")]),_vm._v(\"，可以出现任意次。也就是 \"),_c('code',[_vm._v(\"([^\\\\\\\\:*<>|\\\"?\\\\r\\\\n/]+\\\\\\\\)*\")]),_vm._v(\"。其中括号表示其内部正则是一个整体。\")]),_c('p',[_vm._v(\"路径的最后一部分可以是 \"),_c('code',[_vm._v(\"文件夹\")]),_vm._v(\"，没有 \"),_c('code',[_vm._v(\"\\\\\")]),_vm._v(\"，因此需要添加 \"),_c('code',[_vm._v(\"([^\\\\\\\\:*<>|\\\"?\\\\r\\\\n/]+)?\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"最后拼接成了一个看起来比较复杂的正则：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/^[a-zA-Z]:\\\\\\\\([^\\\\\\\\:*<>|\\\"?\\\\r\\\\n/]+\\\\\\\\)*([^\\\\\\\\:*<>|\\\"?\\\\r\\\\n/]+)?$/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"F:\\\\\\\\study\\\\\\\\javascript\\\\\\\\regex\\\\\\\\regular expression.pdf\\\"\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"F:\\\\\\\\study\\\\\\\\javascript\\\\\\\\regex\\\\\\\\\\\"\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"F:\\\\\\\\study\\\\\\\\javascript\\\"\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"F:\\\\\\\\\\\"\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => true\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => true\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => true\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => true\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"其中，在JavaScript 中字符串要表示字符 \"),_c('code',[_vm._v(\"\\\\\")]),_vm._v(\" 时，也需要转义。\")]),_c('h4',[_vm._v(\"1.5.5. 匹配 id\")]),_c('p',[_vm._v(\"要求从\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_vm._v(\"<div id=\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"container\\\"\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"class\")]),_vm._v(\"=\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"main\\\"\")]),_vm._v(\"></div>\\n\")])]),_c('p',[_vm._v(\"提取出 \"),_c('code',[_vm._v(\"id=\\\"container\\\"\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"可能最开始想到的正则是：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/id=\\\".*\\\"/\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'<div id=\\\"container\\\" class=\\\"main\\\"></div>'\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"(string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"match\")]),_vm._v(\"(regex)[\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\"]);\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => id=\\\"container\\\" class=\\\"main\\\"\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"因为 \"),_c('code',[_vm._v(\".\")]),_vm._v(\" 是通配符，本身就匹配双引号的，而量词 \"),_c('code',[_vm._v(\"*\")]),_vm._v(\" 又是贪婪的，当遇到 \"),_c('code',[_vm._v(\"container\")]),_vm._v(\" 后面双引号时，是不会停下来，会继续匹配，直到遇到最后一个双引号为止。\")]),_c('p',[_vm._v(\"解决之道，可以使用惰性匹配：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/id=\\\".*?\\\"/\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'<div id=\\\"container\\\" class=\\\"main\\\"></div>'\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"(string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"match\")]),_vm._v(\"(regex)[\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\"]);\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => id=\\\"container\\\"\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"当然，这样也会有个问题。效率比较低，因为其匹配原理会涉及到“回溯”这个概念。可以优化如下：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/id=\\\"[^\\\"]*\\\"/\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'<div id=\\\"container\\\" class=\\\"main\\\"></div>'\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"(string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"match\")]),_vm._v(\"(regex)[\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\"]);\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => id=\\\"container\")]),_vm._v(\"\\n\")])]),_c('h2',[_vm._v(\"2. 第二章 正则表达式位置匹配攻略\")]),_c('p',[_vm._v(\"正则表达式是匹配模式，要么匹配字符，要么匹配位置。请记住这句话。\")]),_c('p',[_vm._v(\"然而大部分人学习正则时，对于匹配位置的重视程度没有那么高。\")]),_c('p',[_vm._v(\"内容包括：\")]),_c('ul',[_c('li',[_vm._v(\"什么是位置？\")]),_c('li',[_vm._v(\"如何匹配位置？\")]),_c('li',[_vm._v(\"位置的特性\")]),_c('li',[_vm._v(\"几个应用实例分析\")])]),_c('h3',[_vm._v(\"2.1. 什么是位置呢？\")]),_c('p',[_vm._v(\"位置（锚）是相邻字符之间的位置。比如，下图中箭头所指的地方\")]),_c('img',{staticStyle:{\"display\":\"flex\",\"margin\":\"auto\",\"width\":\"60%\"},attrs:{\"src\":require(\"../../assets/1639757871(1).jpg\")}}),_c('h3',[_vm._v(\"2.2. 如何匹配位置呢？\")]),_c('p',[_vm._v(\"在 \"),_c('code',[_vm._v(\"ES5\")]),_vm._v(\" 中，共有 6 个锚： \"),_c('code',[_vm._v(\"^、$、\\\\b、\\\\B、(?=p)、(?!p)\")])]),_c('h4',[_vm._v(\"2.2.1. \"),_c('code',[_vm._v(\"^\")]),_vm._v(\" 和 \"),_c('code',[_vm._v(\"$\")])]),_c('p',[_c('code',[_vm._v(\"^\")]),_vm._v(\"（脱字符）匹配开头，在多行匹配中匹配行开头。\")]),_c('p',[_c('code',[_vm._v(\"$\")]),_vm._v(\"（美元符号）匹配结尾，在多行匹配中匹配行结尾。\")]),_c('p',[_vm._v(\"比如我们把字符串的开头和结尾用 \\\"\"),_c('code',[_vm._v(\"#\")]),_vm._v(\"\\\" 替换（位置可以替换成字符的！）：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" result = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"hello\\\"\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"replace\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/^|$/g\")]),_vm._v(\", \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'#'\")]),_vm._v(\");\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"(result);\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => \\\"#hello#\\\"\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"多行匹配模式（即有修饰符 \"),_c('code',[_vm._v(\"m\")]),_vm._v(\"）时，二者是行的概念，这一点需要我们注意：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" result = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"I\\\\nlove\\\\njavascript\\\"\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"replace\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/^|$/gm\")]),_vm._v(\", \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'#'\")]),_vm._v(\");\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"(result);\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"/*\\n#I#\\n#love#\\n#javascript#\\n*/\")]),_vm._v(\"\\n\")])]),_c('h4',[_vm._v(\"2.2.2. \"),_c('code',[_vm._v(\"\\\\b\")]),_vm._v(\" 和 \"),_c('code',[_vm._v(\"\\\\B\")])]),_c('p',[_c('code',[_vm._v(\"\\\\b\")]),_vm._v(\" 是单词边界，具体就是 \"),_c('code',[_vm._v(\"\\\\w\")]),_vm._v(\" 与 \"),_c('code',[_vm._v(\"\\\\W \")]),_vm._v(\"之间的位置，也包括 \"),_c('code',[_vm._v(\"\\\\w\")]),_vm._v(\" 与 \"),_c('code',[_vm._v(\"^\")]),_vm._v(\" 之间的位置，和 \"),_c('code',[_vm._v(\"\\\\w\")]),_vm._v(\" 与 \"),_c('code',[_vm._v(\"$\")]),_vm._v(\" 之间的位置。\")]),_c('p',[_vm._v(\"比如考察文件名 \"),_c('code',[_vm._v(\"\\\"[JS] Lesson_01.mp4\\\"\")]),_vm._v(\" 中的 \"),_c('code',[_vm._v(\"\\\\b\")]),_vm._v(\"，如下：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" result = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"[JS] Lesson_01.mp4\\\"\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"replace\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/\\\\b/g\")]),_vm._v(\", \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'#'\")]),_vm._v(\");\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"(result);\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => \\\"[#JS#] #Lesson_01#.#mp4#\\\"\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"为什么是这样呢？这需要仔细看看。\")]),_c('p',[_vm._v(\"首先，我们知道，\"),_c('code',[_vm._v(\"\\\\w\")]),_vm._v(\" 是字符组 \"),_c('code',[_vm._v(\"[0-9a-zA-Z_]\")]),_vm._v(\" 的简写形式，即 \"),_c('code',[_vm._v(\"\\\\w\")]),_vm._v(\" 是字母数字或者下划线的中任何一个字符。而 \"),_c('code',[_vm._v(\"\\\\W\")]),_vm._v(\" 是排除字符组 \"),_c('code',[_vm._v(\"[^0-9a-zA-Z_]\")]),_vm._v(\" 的简写形式，即 \"),_c('code',[_vm._v(\"\\\\W\")]),_vm._v(\" 是 \"),_c('code',[_vm._v(\"\\\\w\")]),_vm._v(\" 以外的任何一个字符。\")]),_c('p',[_vm._v(\"此时我们可以看看 \"),_c('code',[_vm._v(\"\\\"[#JS#] #Lesson_01#.#mp4#\\\"\")]),_vm._v(\" 中的每一个井号 ，是怎么来的。\")]),_c('p',[_vm._v(\"第 1 个，两边字符是 \"),_c('code',[_vm._v(\"\\\"[\\\" 与 \\\"J\\\"，是 \\\\W 与 \\\\w 之间\")]),_vm._v(\"的位置。\")]),_c('p',[_vm._v(\"第 2 个，两边字符是 \"),_c('code',[_vm._v(\"\\\"S\\\" 与 \\\"]\\\"，也就是 \\\\w 与 \\\\W 之间\")]),_vm._v(\"的位置。\")]),_c('p',[_vm._v(\"第 3 个，两边字符是 \"),_c('code',[_vm._v(\"空格与 \\\"L\\\"，也就是 \\\\W 与 \\\\w 之间\")]),_vm._v(\"的位置。\")]),_c('p',[_vm._v(\"第 4 个，两边字符是 \"),_c('code',[_vm._v(\"\\\"1\\\" 与 \\\".\\\"，也就是 \\\\w 与 \\\\W 之间\")]),_vm._v(\"的位置。\")]),_c('p',[_vm._v(\"第 5 个，两边字符是 \"),_c('code',[_vm._v(\"\\\".\\\" 与 \\\"m\\\"，也就是 \\\\W 与 \\\\w之间\")]),_vm._v(\"的位置。\")]),_c('p',[_vm._v(\"第 6 个，位于结尾，前面的字符 \\\"4\\\" 是 \"),_c('code',[_vm._v(\"\\\\w\")]),_vm._v(\"，\"),_c('code',[_vm._v(\"即 \\\\w 与 $ 之间\")]),_vm._v(\"的位置。\")]),_c('p',[_vm._v(\"知道了 \"),_c('code',[_vm._v(\"\\\\b\")]),_vm._v(\" 的概念后，那么 \"),_c('code',[_vm._v(\"\\\\B\")]),_vm._v(\" 也就相对好理解了。\")]),_c('p',[_c('code',[_vm._v(\"\\\\B\")]),_vm._v(\" 就是 \"),_c('code',[_vm._v(\"\\\\b\")]),_vm._v(\" 的反面的意思，非单词边界。例如在字符串中所有位置中，扣掉 \"),_c('code',[_vm._v(\"\\\\b\")]),_vm._v(\"，剩下的都是 \"),_c('code',[_vm._v(\"\\\\B\")]),_vm._v(\" 的。\")]),_c('p',[_vm._v(\"具体说来就是 \"),_c('code',[_vm._v(\"\\\\w\")]),_vm._v(\" 与 \"),_c('code',[_vm._v(\"\\\\w\")]),_vm._v(\"、 \"),_c('code',[_vm._v(\"\\\\W\")]),_vm._v(\" 与 \"),_c('code',[_vm._v(\"\\\\W\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"^\")]),_vm._v(\" 与 \"),_c('code',[_vm._v(\"\\\\W\")]),_vm._v(\"，\"),_c('code',[_vm._v(\"\\\\W\")]),_vm._v(\" 与 \"),_c('code',[_vm._v(\"$\")]),_vm._v(\" 之间的位置。\")]),_c('p',[_vm._v(\"比如上面的例子，把所有 \"),_c('code',[_vm._v(\"\\\\B\")]),_vm._v(\" 替换成 \"),_c('code',[_vm._v(\"\\\"#\\\"\")]),_vm._v(\"：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" result = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"[JS] Lesson_01.mp4\\\"\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"replace\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/\\\\B/g\")]),_vm._v(\", \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'#'\")]),_vm._v(\");\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"(result);\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => \\\"#[J#S]# L#e#s#s#o#n#_#0#1.m#p#4\\\"\")]),_vm._v(\"\\n\")])]),_c('h4',[_vm._v(\"2.2.3. \"),_c('code',[_vm._v(\"(?=p) 和 (?!p)\")])]),_c('p',[_c('code',[_vm._v(\"(?=p)\")]),_vm._v(\"，其中 \"),_c('code',[_vm._v(\"p\")]),_vm._v(\" 是一个子模式，即 \"),_c('code',[_vm._v(\"p\")]),_vm._v(\" 前面的位置，或者说，该位置后面的字符要匹配 \"),_c('code',[_vm._v(\"p\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"比如 \"),_c('code',[_vm._v(\"(?=l)\")]),_vm._v(\"，表示 \"),_c('code',[_vm._v(\"\\\"l\\\"\")]),_vm._v(\" 字符前面的位置，例如：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" result = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"hello\\\"\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"replace\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/(?=l)/g\")]),_vm._v(\", \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'#'\")]),_vm._v(\");\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"(result);\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => \\\"he#l#lo\\\"\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"而 \"),_c('code',[_vm._v(\"(?!p)\")]),_vm._v(\" 就是 \"),_c('code',[_vm._v(\"(?=p)\")]),_vm._v(\" 的反面意思，比如：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" result = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"hello\\\"\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"replace\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/(?!l)/g\")]),_vm._v(\", \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'#'\")]),_vm._v(\");\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"(result);\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => \\\"#h#ell#o#\\\"\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"二者的学名分别是 \"),_c('code',[_vm._v(\"positive lookahead\")]),_vm._v(\" 和 \"),_c('code',[_vm._v(\"negative lookahead\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"中文翻译分别是\"),_c('strong',[_vm._v(\"正向先行断言\")]),_vm._v(\"和\"),_c('strong',[_vm._v(\"负向先行断言\")]),_vm._v(\"。\")]),_c('p',[_c('code',[_vm._v(\"ES5\")]),_vm._v(\" 之后的版本，会支持 \"),_c('code',[_vm._v(\"positive lookbehind\")]),_vm._v(\" 和 \"),_c('code',[_vm._v(\"negative lookbehind\")]),_vm._v(\"。 具体是 \"),_c('code',[_vm._v(\"(?<=p)\")]),_vm._v(\" 和 \"),_c('code',[_vm._v(\"(?<!p)\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"也有书上把这四个东西，翻译成\"),_c('strong',[_vm._v(\"环视\")]),_vm._v(\"，即看看右边和看看左边。\")]),_c('p',[_vm._v(\"但一般书上，没有很好强调这四者是个位置。\")]),_c('p',[_vm._v(\"比如 \"),_c('code',[_vm._v(\"(?=p)\")]),_vm._v(\"，一般都理解成：要求接下来的字符与 \"),_c('code',[_vm._v(\"p\")]),_vm._v(\" 匹配，但不能包括 \"),_c('code',[_vm._v(\"p\")]),_vm._v(\" 匹配的那些字符。\")]),_c('p',[_vm._v(\"而在本人看来，\"),_c('code',[_vm._v(\"(?=p)\")]),_vm._v(\" 就与 \"),_c('code',[_vm._v(\"^\")]),_vm._v(\" 一样好理解，就是 \"),_c('code',[_vm._v(\"p\")]),_vm._v(\" 前面的那个位置。\")]),_c('h3',[_vm._v(\"2.3. 位置的特性\")]),_c('p',[_vm._v(\"对于位置的理解，我们可以理解成空字符 \"),_c('code',[_vm._v(\"\\\"\\\"\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"比如 \"),_c('code',[_vm._v(\"\\\"hello\\\"\")]),_vm._v(\" 字符串等价于如下的形式：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"hello\\\"\")]),_vm._v(\" == \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"\\\"\")]),_vm._v(\" + \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"h\\\"\")]),_vm._v(\" + \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"\\\"\")]),_vm._v(\" + \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"e\\\"\")]),_vm._v(\" + \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"\\\"\")]),_vm._v(\" + \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"l\\\"\")]),_vm._v(\" + \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"\\\"\")]),_vm._v(\" + \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"l\\\"\")]),_vm._v(\" + \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"\\\"\")]),_vm._v(\" + \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"o\\\"\")]),_vm._v(\" + \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"\\\"\")]),_vm._v(\"; \\n\")])]),_c('p',[_vm._v(\"也等价于：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"hello\\\"\")]),_vm._v(\" == \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"\\\"\")]),_vm._v(\" + \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"\\\"\")]),_vm._v(\" + \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"hello\\\"\")]),_vm._v(\" \\n\")])]),_c('p',[_vm._v(\"因此，把 \"),_c('code',[_vm._v(\"/^hello$/\")]),_vm._v(\" 写成 \"),_c('code',[_vm._v(\"/^^hello$$$/\")]),_vm._v(\"，是没有任何问题的：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" result = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/^^hello$$$/\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"hello\\\"\")]),_vm._v(\");\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"(result);\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => true\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"甚至可以写成更复杂的:\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" result = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/(?=he)^^he(?=\\\\w)llo$\\\\b\\\\b$/\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"hello\\\"\")]),_vm._v(\");\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"(result);\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => true\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"也就是说字符之间的位置，可以写成多个。\")]),_c('div',{staticClass:\"tip\"},[_c('p',[_vm._v(\"TIP 把位置理解空字符，是对位置非常有效的理解方式。\")])]),_c('h3',[_vm._v(\"2.4. 相关案例\")]),_c('h4',[_vm._v(\"2.4.1. 不匹配任何东西的正则\")]),_c('p',[_vm._v(\"让你写个正则不匹配任何东西\")]),_c('p',[_vm._v(\"easy，\"),_c('code',[_vm._v(\"/.^/\")]),_vm._v(\"。 因为此正则要求只有一个字符，但该字符后面是开头，而这样的字符串是不存在的。\")]),_c('h4',[_vm._v(\"2.4.2 数字的千位分隔符表示法\")]),_c('p',[_vm._v(\"比如把 \"),_c('code',[_vm._v(\"\\\"12345678\\\"\")]),_vm._v(\"，变成 \"),_c('code',[_vm._v(\"\\\"12,345,678\\\"\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"可见是需要把相应的位置替换成 \"),_c('code',[_vm._v(\"\\\",\\\"\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"思路是什么呢？\")]),_c('h5',[_vm._v(\"2.4.2.1. 弄出最后一个逗号\")]),_c('p',[_vm._v(\"使用 \"),_c('code',[_vm._v(\"(?=\\\\d{3}$)\")]),_vm._v(\" 就可以做到：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" result = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"12345678\\\"\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"replace\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/(?=\\\\d{3}$)/g\")]),_vm._v(\", \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"','\")]),_vm._v(\")\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"(result);\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => \\\"12345,678\\\"\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"其中，\"),_c('code',[_vm._v(\"(?=\\\\d{3}$)\")]),_vm._v(\" 匹配 \"),_c('code',[_vm._v(\"\\\\d{3}$\")]),_vm._v(\" 前面的位置。而 \"),_c('code',[_vm._v(\"\\\\d{3}$\")]),_vm._v(\" 匹配的是目标字符串最后那 \"),_c('code',[_vm._v(\"3\")]),_vm._v(\" 位数字。\")]),_c('h5',[_vm._v(\"2.4.2.2. 弄出所有的逗号\")]),_c('p',[_vm._v(\"因为逗号出现的位置，要求后面 3 个数字一组，也就是 \"),_c('code',[_vm._v(\"\\\\d{3}\")]),_vm._v(\" 至少出现一次。\")]),_c('p',[_vm._v(\"此时可以使用量词 \"),_c('code',[_vm._v(\"+\")]),_vm._v(\"：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" result = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"12345678\\\"\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"replace\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/(?=(\\\\d{3})+$)/g\")]),_vm._v(\", \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"','\")]),_vm._v(\")\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"(result);\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => \\\"12,345,678\\\"\")]),_vm._v(\"\\n\")])]),_c('h5',[_vm._v(\"2.4.2.3. 匹配其余案例\")]),_c('p',[_vm._v(\"写完正则后，要多验证几个案例，此时我们会发现问题：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" result = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"123456789\\\"\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"replace\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/(?=(\\\\d{3})+$)/g\")]),_vm._v(\", \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"','\")]),_vm._v(\")\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"(result);\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => \\\",123,456,789\\\"\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"因为上面的正则，仅仅表示把从结尾向前数，一但是 3 的倍数，就把其前面的位置替换成逗号。因此才会出现这个问题。\")]),_c('p',[_vm._v(\"怎么解决呢？我们要求匹配的到这个位置不能是开头。\")]),_c('p',[_vm._v(\"我们知道匹配开头可以使用 \"),_c('code',[_vm._v(\"^\")]),_vm._v(\"，但要求这个位置不是开头怎么办？\")]),_c('p',[_vm._v(\"easy，\"),_c('code',[_vm._v(\"(?!^)\")]),_vm._v(\"，你想到了吗？测试如下：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/(?!^)(?=(\\\\d{3})+$)/g\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" result = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"12345678\\\"\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"replace\")]),_vm._v(\"(regex, \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"','\")]),_vm._v(\")\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"(result);\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => \\\"12,345,678\\\"\")]),_vm._v(\"\\nresult = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"123456789\\\"\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"replace\")]),_vm._v(\"(regex, \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"','\")]),_vm._v(\");\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"(result);\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => \\\"123,456,789\\\"\")]),_vm._v(\"\\n\")])]),_c('h5',[_vm._v(\"2.4.2.4. 支持其他形式\")]),_c('p',[_vm._v(\"如果要把 \"),_c('code',[_vm._v(\"\\\"12345678 123456789\\\"\")]),_vm._v(\" 替换成 \"),_c('code',[_vm._v(\"\\\"12,345,678 123,456,789\\\"。\")])]),_c('p',[_vm._v(\"此时我们需要修改正则，把里面的开头 \"),_c('code',[_vm._v(\"^\")]),_vm._v(\" 和结尾 \"),_c('code',[_vm._v(\"$\")]),_vm._v(\"，修改成 \"),_c('code',[_vm._v(\"\\\\b\")]),_vm._v(\"：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"12345678 123456789\\\"\")]),_vm._v(\",\\nregex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/(?!\\\\b)(?=(\\\\d{3})+\\\\b)/g\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" result = string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"replace\")]),_vm._v(\"(regex, \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"','\")]),_vm._v(\")\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"(result);\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => \\\"12,345,678 123,456,789\\\"\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"其中 \"),_c('code',[_vm._v(\"(?!\\\\b)\")]),_vm._v(\" 怎么理解呢？\")]),_c('p',[_vm._v(\"要求当前是一个位置，但不是 \"),_c('code',[_vm._v(\"\\\\b\")]),_vm._v(\" 前面的位置，其实 \"),_c('code',[_vm._v(\"(?!\\\\b)\")]),_vm._v(\" 说的就是 \"),_c('code',[_vm._v(\"\\\\B\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"因此最终正则变成了：\"),_c('code',[_vm._v(\"/\\\\B(?=(\\\\d{3})+\\\\b)/g。\")])]),_c('h5',[_vm._v(\"2.4.2.5. 格式化\")]),_c('p',[_vm._v(\"千分符表示法一个常见的应用就是货币格式化。\")]),_c('p',[_vm._v(\"比如把下面的字符串：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1888\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"格式化成：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_vm._v(\"$ \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1888.00\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"有了前面的铺垫，我们很容易实现如下：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"function\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"format\")]),_vm._v(\" (num) {\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"return\")]),_vm._v(\" num.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"toFixed\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2\")]),_vm._v(\").\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"replace\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/\\\\B(?=(\\\\d{3})+\\\\b)/g\")]),_vm._v(\", \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\",\\\"\")]),_vm._v(\").\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"replace\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/^/\")]),_vm._v(\", \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"$$ \\\"\")]),_vm._v(\"); };\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( \"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"format\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1888\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => \\\"$ 1,888.00\\\"\")]),_vm._v(\"\\n\")])]),_c('h4',[_vm._v(\"2.4.3. 验证密码问题\")]),_c('p',[_vm._v(\"密码长度 \"),_c('code',[_vm._v(\"6-12\")]),_vm._v(\" 位，由数字、小写字符和大写字母组成，但必须至少包括 \"),_c('code',[_vm._v(\"2\")]),_vm._v(\" 种字符。\")]),_c('p',[_vm._v(\"此题，如果写成多个正则来判断，比较容易。但要写成一个正则就比较困难。\")]),_c('p',[_vm._v(\"那么，我们就来挑战一下。看看我们对位置的理解是否深刻。\")]),_c('h5',[_vm._v(\"2.4.3.1. 简化\")]),_c('p',[_vm._v(\"不考虑“但必须至少包括 \"),_c('code',[_vm._v(\"2\")]),_vm._v(\" 种字符”这一条件。我们可以容易写出：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/^[0-9A-Za-z]{6,12}$/\")]),_vm._v(\";\\n\")])]),_c('p',[_vm._v(\"2.4.3.2. 判断是否包含有某一种字符\")]),_c('p',[_vm._v(\"假设，要求的必须包含数字，怎么办？此时我们可以使用 \"),_c('code',[_vm._v(\"(?=.*[0-9])\")]),_vm._v(\" 来做。\")]),_c('p',[_vm._v(\"因此正则变成：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/(?=.*[0-9])^[0-9A-Za-z]{6,12}$/\")]),_vm._v(\";\\n\")])]),_c('h5',[_vm._v(\"2.4.3.3. 同时包含具体两种字符\")]),_c('p',[_vm._v(\"比如同时包含数字和小写字母，可以用 \"),_c('code',[_vm._v(\"(?=.*[0-9])(?=.*[a-z])\")]),_vm._v(\" 来做。\")]),_c('p',[_vm._v(\"因此正则变成：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/(?=.*[0-9])(?=.*[a-z])^[0-9A-Za-z]{6,12}$/\")]),_vm._v(\";\\n\")])]),_c('h5',[_vm._v(\"2.4.3.4. 解答 我们可以把原题变成下列几种情况之一：\")]),_c('p',[_vm._v(\"同时包含数字和小写字母\")]),_c('p',[_vm._v(\"同时包含数字和大写字母\")]),_c('p',[_vm._v(\"同时包含小写字母和大写字母\")]),_c('p',[_vm._v(\"同时包含数字、小写字母和大写字母\")]),_c('p',[_vm._v(\"以上的 4 种情况是或的关系（实际上，可以不用第 4 条）。\")]),_c('p',[_vm._v(\"最终答案是：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/((?=.*[0-9])(?=.*[a-z])|(?=.*[0-9])(?=.*[A-Z])|(?=.*[a-z])(?=.*[A\\u0002Z]))^[0-9A-Za-z]{6,12}$/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"1234567\\\"\")]),_vm._v(\") ); \"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// false 全是数字\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"abcdef\\\"\")]),_vm._v(\") ); \"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// false 全是小写字母\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"ABCDEFGH\\\"\")]),_vm._v(\") ); \"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// false 全是大写字母\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"ab23C\\\"\")]),_vm._v(\") ); \"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// false 不足6位\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"ABCDEF234\\\"\")]),_vm._v(\") ); \"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// true 大写字母和数字\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"abcdEF234\\\"\")]),_vm._v(\") ); \"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// true 三者都有\")]),_vm._v(\"\\n\")])]),_c('h5',[_vm._v(\"2.4.3.5. 解惑\")]),_c('p',[_vm._v(\"上面的正则看起来比较复杂，只要理解了第二步，其余就全部理解了。\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_vm._v(\"/(?=.*[\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\"-\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"9\")]),_vm._v(\"])^[\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\"-9A-\"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"Za\")]),_vm._v(\"-z]{\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"6\")]),_vm._v(\",\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"12\")]),_vm._v(\"}$/\\n\")])]),_c('p',[_vm._v(\"对于这个正则，我们只需要弄明白 \"),_c('code',[_vm._v(\"(?=.*[0-9])^\")]),_vm._v(\" 即可。\")]),_c('p',[_vm._v(\"分开来看就是 \"),_c('code',[_vm._v(\"(?=.*[0-9])\")]),_vm._v(\" 和 \"),_c('code',[_vm._v(\"^\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"表示开头前面还有个位置（当然也是开头，即同一个位置，想想之前的空字符类比）。\")]),_c('p',[_c('code',[_vm._v(\"(?=.*[0-9])\")]),_vm._v(\" 表示该位置后面的字符匹配 \"),_c('code',[_vm._v(\".*[0-9]\")]),_vm._v(\"，即，有任何多个任意字符，后面再跟个数字。\")]),_c('p',[_vm._v(\"翻译成大白话，就是接下来的字符，必须包含个数字。\")]),_c('h5',[_vm._v(\"2.4.3.6. 另外一种解法\")]),_c('p',[_vm._v(\"“至少包含两种字符”的意思就是说，不能全部都是数字，也不能全部都是小写字母，也不能全部都是大写字母。\")]),_c('p',[_vm._v(\"那么要求“不能全部都是数字”，怎么做呢？ \"),_c('code',[_vm._v(\"(?!p)\")]),_vm._v(\" 出马！\")]),_c('p',[_vm._v(\"对应的正则是：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/(?!^[0-9]{6,12}$)^[0-9A-Za-z]{6,12}$/\")]),_vm._v(\";\\n\")])]),_c('p',[_vm._v(\"三种“都不能”呢？\")]),_c('p',[_vm._v(\"最终答案是：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/(?!^[0-9]{6,12}$)(?!^[a-z]{6,12}$)(?!^[A-Z]{6,12}$)^[0-9A-Za-z]{6,12}$/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"1234567\\\"\")]),_vm._v(\") ); \"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// false 全是数字\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"abcdef\\\"\")]),_vm._v(\") ); \"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// false 全是小写字母\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"ABCDEFGH\\\"\")]),_vm._v(\") ); \"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// false 全是大写字母\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"ab23C\\\"\")]),_vm._v(\") ); \"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// false 不足6位\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"ABCDEF234\\\"\")]),_vm._v(\") ); \"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// true 大写字母和数字\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"abcdEF234\\\"\")]),_vm._v(\") ); \"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// true 三者都有\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"小结 重点掌握匹配位置的这 6 个锚，给我们的解决正则问题工具箱内添加了新工具。\")]),_c('h2',[_vm._v(\"3. 第三章 正则表达式括号的作用\")]),_c('p',[_vm._v(\"不管哪门语言中都有括号。正则表达式也是一门语言，而括号的存在使这门语言更为强大。\")]),_c('p',[_vm._v(\"对括号的使用是否得心应手，是衡量对正则的掌握水平的一个侧面标准。\")]),_c('p',[_vm._v(\"括号的作用，其实三言两语就能说明白，括号提供了分组，便于我们引用它。\")]),_c('p',[_vm._v(\"引用某个分组，会有两种情形：在 JavaScript 里引用它，在正则表达式里引用它。\")]),_c('p',[_vm._v(\"内容包括：\")]),_c('p',[_c('strong',[_vm._v(\"分组和分支结构\")])]),_c('p',[_c('strong',[_vm._v(\"分组引用\")])]),_c('p',[_c('strong',[_vm._v(\"反向引用\")])]),_c('p',[_c('strong',[_vm._v(\"非捕获括号\")])]),_c('p',[_c('strong',[_vm._v(\"相关案例\")])]),_c('h3',[_vm._v(\"3.1. 分组和分支结构\")]),_c('p',[_vm._v(\"这二者是括号最直觉的作用，也是最原始的功能，强调括号内的正则是一个整体，即提供子表达式。\")]),_c('h4',[_vm._v(\"3.1.1. 分组\")]),_c('p',[_vm._v(\"我们知道 \"),_c('code',[_vm._v(\"/a+/\")]),_vm._v(\" 匹配连续出现的 \"),_c('code',[_vm._v(\"\\\"a\\\"\")]),_vm._v(\"，而要匹配连续出现的 \"),_c('code',[_vm._v(\"\\\"ab\\\"\")]),_vm._v(\" 时，需要使用 \"),_c('code',[_vm._v(\"/(ab)+/\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"其中括号是提供\"),_c('strong',[_vm._v(\"分组功能\")]),_vm._v(\"，使量词 \"),_c('code',[_vm._v(\"+\")]),_vm._v(\" 作用于 \"),_c('code',[_vm._v(\"\\\"ab\\\"\")]),_vm._v(\" 这个整体，测试如下：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/(ab)+/g\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"ababa abbb ababab\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"match\")]),_vm._v(\"(regex) );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"abab\\\", \\\"ab\\\", \\\"ababab\\\"]\")]),_vm._v(\"\\n\")])]),_c('h4',[_vm._v(\"3.1.2. 分支结构\")]),_c('p',[_vm._v(\"而在多选分支结构 \"),_c('code',[_vm._v(\"(p1|p2)\")]),_vm._v(\" 中，此处括号的作用也是不言而喻的，提供了分支表达式的所有可能。\")]),_c('p',[_vm._v(\"比如，要匹配如下的字符串：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_vm._v(\"I love \"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"JavaScript\")]),_vm._v(\"\\nI love \"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"Regular\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"Expression\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"可以使用正则：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/^I love (JavaScript|Regular Expression)$/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"I love JavaScript\\\"\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"I love Regular Expression\\\"\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => true\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => true\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"如果去掉正则中的括号，即：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_vm._v(\"/^I love \"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"JavaScript\")]),_vm._v(\"|\"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"Regular\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"Expression\")]),_vm._v(\"$/，\\n\")])]),_c('p',[_vm._v(\"匹配字符串是 \"),_c('code',[_vm._v(\"\\\"I love JavaScript\\\" \")]),_vm._v(\"和 \"),_c('code',[_vm._v(\"\\\"Regular Expression\\\"\")]),_vm._v(\"，当然这不是我们想要的。\")]),_c('h3',[_vm._v(\"3.2. 分组引用\")]),_c('p',[_vm._v(\"这是括号一个重要的作用，有了它，我们就可以进行数据提取，以及更强大的替换操作。\")]),_c('p',[_vm._v(\"而要使用它带来的好处，必须配合使用实现环境的 \"),_c('code',[_vm._v(\"API。\")])]),_c('p',[_vm._v(\"以日期为例。假设格式是 \"),_c('code',[_vm._v(\"yyyy-mm-dd\")]),_vm._v(\" 的，我们可以先写一个简单的正则：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/\\\\d{4}-\\\\d{2}-\\\\d{2}/\")]),_vm._v(\";\\n\")])]),_c('p',[_vm._v(\"然后再修改成括号版的：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/(\\\\d{4})-(\\\\d{2})-(\\\\d{2})/\")]),_vm._v(\";\\n\")])]),_c('img',{staticStyle:{\"display\":\"flex\",\"margin\":\"auto\",\"width\":\"80%\"},attrs:{\"src\":require(\"../../assets/微信截图_20211219101110.png\")}}),_c('p',[_vm._v(\"对比这两个可视化图片，我们发现，与前者相比，后者多了分组编号，如 \"),_c('code',[_vm._v(\"Group #1\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"其实正则引擎也是这么做的，在匹配过程中，给每一个分组都开辟一个空间，用来存储每一个分组匹配到的数据。\")]),_c('p',[_vm._v(\"既然分组可以捕获数据，那么我们就可以使用它们。\")]),_c('h4',[_vm._v(\"3.2.1. 提取数据\")]),_c('p',[_vm._v(\"比如提取出年、月、日，可以这么做：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/(\\\\d{4})-(\\\\d{2})-(\\\\d{2})/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"2017-06-12\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"match\")]),_vm._v(\"(regex) );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"2017-06-12\\\", \\\"2017\\\", \\\"06\\\", \\\"12\\\", index: 0, input: \\\"2017-06-12\\\"]\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"NOTE\")]),_c('p',[_c('code',[_vm._v(\"match\")]),_vm._v(\" 返回的一个数组，第一个元素是整体匹配结果，然后是各个分组（括号里）匹配的内容，然后是匹配下标，最后是输入的文本。另外，正则表达式是否有修饰符 \"),_c('code',[_vm._v(\"g，match\")]),_vm._v(\"返回的数组格式是不一样的。\")]),_c('p',[_vm._v(\"另外也可以使用正则实例对象的 \"),_c('code',[_vm._v(\"exec\")]),_vm._v(\" 方法：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/(\\\\d{4})-(\\\\d{2})-(\\\\d{2})/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"2017-06-12\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"exec\")]),_vm._v(\"(string) );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"2017-06-12\\\", \\\"2017\\\", \\\"06\\\", \\\"12\\\", index: 0, input: \\\"2017-06-12\\\"]\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"同时，也可以使用构造函数的全局属性 \"),_c('code',[_vm._v(\"$1\")]),_vm._v(\" 至 \"),_c('code',[_vm._v(\"$9\")]),_vm._v(\" 来获取：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/(\\\\d{4})-(\\\\d{2})-(\\\\d{2})/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"2017-06-12\\\"\")]),_vm._v(\";\\nregex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(string); \"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// 正则操作即可，例如\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"//regex.exec(string);\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"//string.match(regex);\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"RegExp\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"$1\")]),_vm._v(\"); \"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// \\\"2017\\\"\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"RegExp\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"$2\")]),_vm._v(\"); \"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// \\\"06\\\"\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"RegExp\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"$3\")]),_vm._v(\"); \"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// \\\"12\\\"\")]),_vm._v(\"\\n\")])]),_c('h4',[_vm._v(\"3.2.2. 替换\")]),_c('p',[_vm._v(\"比如，想把 \"),_c('code',[_vm._v(\"yyyy-mm-dd\")]),_vm._v(\" 格式，替换成 \"),_c('code',[_vm._v(\"mm/dd/yyyy\")]),_vm._v(\" 怎么做？\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/(\\\\d{4})-(\\\\d{2})-(\\\\d{2})/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"2017-06-12\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" result = string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"replace\")]),_vm._v(\"(regex, \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"$2/$3/$1\\\"\")]),_vm._v(\");\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"(result);\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => \\\"06/12/2017\\\"\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"其中 \"),_c('code',[_vm._v(\"replace\")]),_vm._v(\" 中的，第二个参数里用 \"),_c('code',[_vm._v(\"$1、$2、$3\")]),_vm._v(\" 指代相应的分组。等价于如下的形式：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/(\\\\d{4})-(\\\\d{2})-(\\\\d{2})/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"2017-06-12\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" result = string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"replace\")]),_vm._v(\"(regex, \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"function\")]),_vm._v(\" (\"),_c('span',{staticClass:\"hljs-params\"}),_vm._v(\") {\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"return\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"RegExp\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"$2\")]),_vm._v(\" + \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"/\\\"\")]),_vm._v(\" + \"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"RegExp\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"$3\")]),_vm._v(\" + \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"/\\\"\")]),_vm._v(\" + \"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"RegExp\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"$1\")]),_vm._v(\";\\n});\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"(result);\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => \\\"06/12/2017\\\"\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"也等价于：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/(\\\\d{4})-(\\\\d{2})-(\\\\d{2})/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"2017-06-12\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" result = string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"replace\")]),_vm._v(\"(regex, \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"function\")]),_vm._v(\" (\"),_c('span',{staticClass:\"hljs-params\"},[_vm._v(\"match, year, month, day\")]),_vm._v(\") {\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"return\")]),_vm._v(\" month + \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"/\\\"\")]),_vm._v(\" + day + \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"/\\\"\")]),_vm._v(\" + year;\\n});\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"(result);\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => \\\"06/12/2017\\\"\")]),_vm._v(\"\\n\")])]),_c('h3',[_vm._v(\"3.3. 反向引用\")]),_c('p',[_vm._v(\"除了使用相应 \"),_c('code',[_vm._v(\"API\")]),_vm._v(\" 来引用分组，也可以在正则本身里引用分组。但只能引用之前出现的分组，即反向引用。\")]),_c('p',[_vm._v(\"还是以日期为例。\")]),_c('p',[_vm._v(\"比如要写一个正则支持匹配如下三种格式：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2016\")]),_vm._v(\"-\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"06\")]),_vm._v(\"-\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"12\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2016\")]),_vm._v(\"/\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"06\")]),_vm._v(\"/\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"12\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2016.06\")]),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\".12\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"最先可能想到的正则是:\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/\\\\d{4}(-|\\\\/|\\\\.)\\\\d{2}(-|\\\\/|\\\\.)\\\\d{2}/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string1 = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"2017-06-12\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string2 = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"2017/06/12\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string3 = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"2017.06.12\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string4 = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"2016-06/12\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(string1) ); \"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// true\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(string2) ); \"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// true\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(string3) ); \"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// true\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(string4) ); \"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// true\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"其中 \"),_c('code',[_vm._v(\"/\")]),_vm._v(\" 和 \"),_c('code',[_vm._v(\".\")]),_vm._v(\" 需要转义。虽然匹配了要求的情况，但也匹配 \"),_c('code',[_vm._v(\"\\\"2016-06/12\\\"\")]),_vm._v(\" 这样的数据。\")]),_c('p',[_vm._v(\"假设我们想要求分割符前后一致怎么办？此时需要使用反向引用：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/\\\\d{4}(-|\\\\/|\\\\.)\\\\d{2}\\\\1\\\\d{2}/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string1 = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"2017-06-12\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string2 = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"2017/06/12\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string3 = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"2017.06.12\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string4 = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"2016-06/12\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(string1) ); \"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// true\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(string2) ); \"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// true\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(string3) ); \"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// true\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(string4) ); \"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// false\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"注意里面的 \"),_c('code',[_vm._v(\"\\\\1\")]),_vm._v(\"，表示的引用之前的那个分组 \"),_c('code',[_vm._v(\"(-|\\\\/|\\\\.)\")]),_vm._v(\"。不管它匹配到什么\"),_c('code',[_vm._v(\"（比如 -）\")]),_vm._v(\"，\"),_c('code',[_vm._v(\"\\\\1\")]),_vm._v(\" 都匹配那个同 样的具体某个字符。\")]),_c('p',[_vm._v(\"我们知道了 \"),_c('code',[_vm._v(\"\\\\1\")]),_vm._v(\" 的含义后，那么 \"),_c('code',[_vm._v(\"\\\\2\")]),_vm._v(\" 和 \"),_c('code',[_vm._v(\"\\\\3\")]),_vm._v(\" 的概念也就理解了，即分别指代第二个和第三个分组。\")]),_c('p',[_vm._v(\"看到这里，此时，恐怕你会有几个问题。\")]),_c('h4',[_vm._v(\"3.3.1. 括号嵌套怎么办？\")]),_c('p',[_vm._v(\"以左括号（开括号）为准。比如：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/^((\\\\d)(\\\\d(\\\\d)))\\\\1\\\\2\\\\3\\\\4$/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"1231231233\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(string) ); \"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// true\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( \"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"RegExp\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"$1\")]),_vm._v(\" ); \"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// 123\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( \"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"RegExp\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"$2\")]),_vm._v(\" ); \"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// 1\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( \"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"RegExp\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"$3\")]),_vm._v(\" ); \"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// 23\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( \"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"RegExp\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"$4\")]),_vm._v(\" ); \"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// 3\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"我们可以看看这个正则匹配模式：\")]),_c('p',[_vm._v(\"第一个字符是数字，比如说 \"),_c('code',[_vm._v(\"\\\"1\\\"\")]),_vm._v(\"，\")]),_c('p',[_vm._v(\"第二个字符是数字，比如说 \"),_c('code',[_vm._v(\"\\\"2\\\"\")]),_vm._v(\"，\")]),_c('p',[_vm._v(\"第三个字符是数字，比如说 \"),_c('code',[_vm._v(\"\\\"3\\\"\")]),_vm._v(\"，\")]),_c('p',[_vm._v(\"接下来的是 \"),_c('code',[_vm._v(\"\\\\1\")]),_vm._v(\"，是第一个分组内容，那么看第一个开括号对应的分组是什么，是 \"),_c('code',[_vm._v(\"\\\"123\\\"\")]),_vm._v(\"，\")]),_c('p',[_vm._v(\"接下来的是 \"),_c('code',[_vm._v(\"\\\\2\")]),_vm._v(\"，找到第2个开括号，对应的分组，匹配的内容是 \"),_c('code',[_vm._v(\"\\\"1\\\"\")]),_vm._v(\"，\")]),_c('p',[_vm._v(\"接下来的是 \"),_c('code',[_vm._v(\"\\\\3\")]),_vm._v(\"，找到第3个开括号，对应的分组，匹配的内容是 \"),_c('code',[_vm._v(\"\\\"23\\\"\")]),_vm._v(\"，\")]),_c('p',[_vm._v(\"最后的是 \"),_c('code',[_vm._v(\"\\\\4\")]),_vm._v(\"，找到第3个开括号，对应的分组，匹配的内容是 \"),_c('code',[_vm._v(\"\\\"3\\\"\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"我们可以看看这个正则匹配模式：\")]),_c('p',[_vm._v(\"第一个字符是数字，比如说 \"),_c('code',[_vm._v(\"\\\"1\\\"\")]),_vm._v(\"，\")]),_c('p',[_vm._v(\"第二个字符是数字，比如说 \"),_c('code',[_vm._v(\"\\\"2\\\"\")]),_vm._v(\"，\")]),_c('p',[_vm._v(\"第三个字符是数字，比如说 \"),_c('code',[_vm._v(\"\\\"3\\\"\")]),_vm._v(\"，\")]),_c('p',[_vm._v(\"接下来的是 \"),_c('code',[_vm._v(\"\\\\1\")]),_vm._v(\"，是第一个分组内容，那么看第一个开括号对应的分组是什么，是 \"),_c('code',[_vm._v(\"\\\"123\\\"，\")])]),_c('p',[_vm._v(\"接下来的是 \"),_c('code',[_vm._v(\"\\\\2\")]),_vm._v(\"，找到第2个开括号，对应的分组，匹配的内容是 \"),_c('code',[_vm._v(\"\\\"1\\\"\")]),_vm._v(\"，\")]),_c('p',[_vm._v(\"接下来的是 \"),_c('code',[_vm._v(\"\\\\3\")]),_vm._v(\"，找到第3个开括号，对应的分组，匹配的内容是 \"),_c('code',[_vm._v(\"\\\"23\\\"\")]),_vm._v(\"，\")]),_c('p',[_vm._v(\"最后的是 \"),_c('code',[_vm._v(\"\\\\4\")]),_vm._v(\"，找到第3个开括号，对应的分组，匹配的内容是 \"),_c('code',[_vm._v(\"\\\"3\\\"\")]),_vm._v(\"。\")]),_c('h4',[_vm._v(\"3.3.2. \"),_c('code',[_vm._v(\"\\\\10\")]),_vm._v(\" 表示什么呢？\")]),_c('p',[_vm._v(\"另外一个疑问可能是，即 \"),_c('code',[_vm._v(\"\\\\10\")]),_vm._v(\" 是表示第 \"),_c('code',[_vm._v(\"10\")]),_vm._v(\" 个分组，还是 \"),_c('code',[_vm._v(\"\\\\1\")]),_vm._v(\" 和 \"),_c('code',[_vm._v(\"0\")]),_vm._v(\" 呢？\")]),_c('p',[_vm._v(\"答案是前者，虽然一个正则里出现 \"),_c('code',[_vm._v(\"\\\\10\")]),_vm._v(\" 比较罕见。测试如下：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/(1)(2)(3)(4)(5)(6)(7)(8)(9)(#) \\\\10+/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"123456789# ######\\\"\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(string) );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => true\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"TIP 如果真要匹配 \"),_c('code',[_vm._v(\"\\\\1\")]),_vm._v(\" 和 \"),_c('code',[_vm._v(\"0\")]),_vm._v(\" 的话，请使用 \"),_c('code',[_vm._v(\"(?:\\\\1)0\")]),_vm._v(\" 或者 \"),_c('code',[_vm._v(\"\\\\1(?:0)\")]),_vm._v(\"。\")]),_c('h4',[_vm._v(\"3.3.3. 引用不存在的分组会怎样？\")]),_c('p',[_vm._v(\"因为反向引用，是引用前面的分组，但我们在正则里引用了不存在的分组时，此时正则不会报错，只是匹配反向引用的字符本身。例如 \"),_c('code',[_vm._v(\"\\\\2\")]),_vm._v(\"，就匹配 \"),_c('code',[_vm._v(\"\\\"\\\\2\\\"\")]),_vm._v(\"。注意 \"),_c('code',[_vm._v(\"\\\"\\\\2\\\"\")]),_vm._v(\" 表示对 \"),_c('code',[_vm._v(\"\\\"2\\\"\")]),_vm._v(\" 进行了转义。\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/\\\\1\\\\2\\\\3\\\\4\\\\5\\\\6\\\\7\\\\8\\\\9/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"\\\\1\\\\2\\\\3\\\\4\\\\5\\\\6\\\\7\\\\8\\\\9\\\"\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"\\\\1\\\\2\\\\3\\\\4\\\\5\\\\6\\\\7\\\\8\\\\9\\\"\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"split\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"\\\"\")]),_vm._v(\") );\\n\")])]),_c('p',[_c('code',[_vm._v(\"Chrome\")]),_vm._v(\" 浏览器打印的结果（不同的浏览器和版本，打印的结果可能不一样）：\")]),_c('img',{staticStyle:{\"display\":\"flex\",\"margin\":\"auto\",\"width\":\"80%\"},attrs:{\"src\":require(\"../../assets/微信截图_20211219140323.png\")}}),_c('h4',[_vm._v(\"3.3.4. 分组后面有量词会怎样？\")]),_c('p',[_vm._v(\"分组后面有量词的话，分组最终捕获到的数据是最后一次的匹配。比如如下的测试案例：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/(\\\\d)+/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"12345\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"match\")]),_vm._v(\"(regex) );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"12345\\\", \\\"5\\\", index: 0, input: \\\"12345\\\"]\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"从上面看出，分组 \"),_c('code',[_vm._v(\"(\\\\d)\")]),_vm._v(\" 捕获的数据是 \"),_c('code',[_vm._v(\"\\\"5\\\"\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"同理对于反向引用，也是这样的。测试如下：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/(\\\\d)+ \\\\1/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"12345 1\\\"\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => false\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"12345 5\\\"\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => true\")]),_vm._v(\"\\n\")])]),_c('h3',[_vm._v(\"3.4. 非捕获括号\")]),_c('p',[_vm._v(\"之前文中出现的括号，都会捕获它们匹配到的数据，以便后续引用，因此也称它们是\"),_c('strong',[_vm._v(\"捕获型分组\")]),_vm._v(\"和\"),_c('strong',[_vm._v(\"捕获型分支\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"如果只想要括号最原始的功能，但不会引用它，即，既不在 \"),_c('code',[_vm._v(\"API\")]),_vm._v(\" 里引用，也不在正则里反向引用。\")]),_c('p',[_vm._v(\"此时可以使用非捕获括号 \"),_c('code',[_vm._v(\"(?:p)\")]),_vm._v(\" 和 \"),_c('code',[_vm._v(\"(?:p1|p2|p3)\")]),_vm._v(\"，例如本章第一个例子可以修改为：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/(?:ab)+/g\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"ababa abbb ababab\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"match\")]),_vm._v(\"(regex) );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"abab\\\", \\\"ab\\\", \\\"ababab\\\"]\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"同理，第二例子可以修改为：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/^I love (?:JavaScript|Regular Expression)$/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"I love JavaScript\\\"\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"I love Regular Expression\\\"\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => true\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => true\")]),_vm._v(\"\\n\")])]),_c('h3',[_vm._v(\"3.5. 相关案例\")]),_c('p',[_vm._v(\"至此括号的作用已经讲完了，总结一句话，就是提供了可供我们使用的分组，如何用就看我们的了。\")]),_c('h4',[_vm._v(\"3.5.1. 字符串 \"),_c('code',[_vm._v(\"trim\")]),_vm._v(\" 方法模拟\")]),_c('p',[_c('code',[_vm._v(\"trim\")]),_vm._v(\" 方法是去掉字符串的开头和结尾的空白符。有两种思路去做。\")]),_c('p',[_vm._v(\"第一种，匹配到开头和结尾的空白符，然后替换成空字符。如：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"function\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"trim\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-params\"},[_vm._v(\"str\")]),_vm._v(\") {\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"return\")]),_vm._v(\" str.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"replace\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/^\\\\s+|\\\\s+$/g\")]),_vm._v(\", \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"''\")]),_vm._v(\"); }\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( \"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"trim\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\" foobar \\\"\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => \\\"foobar\\\"\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"第二种，匹配整个字符串，然后用引用来提取出相应的数据：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"function\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"trim\")]),_vm._v(\" (str) {\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"return\")]),_vm._v(\" str.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"replace\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/^\\\\s*(.*?)\\\\s*$/g\")]),_vm._v(\", \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"$1\\\"\")]),_vm._v(\"); }\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( \"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"trim\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\" foobar \\\"\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => \\\"foobar\\\"\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"这里使用了惰性匹配 \"),_c('code',[_vm._v(\"*?\")]),_vm._v(\"，不然也会匹配最后一个空格之前的所有空格的。\")]),_c('p',[_vm._v(\"当然，前者效率高。\")]),_c('h4',[_vm._v(\"3.5.2. 将每个单词的首字母转换为大写\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"function\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"titleize\")]),_vm._v(\" (str) {\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"return\")]),_vm._v(\" str.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"toLowerCase\")]),_vm._v(\"().\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"replace\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/(?:^|\\\\s)\\\\w/g\")]),_vm._v(\", \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"function\")]),_vm._v(\" (\"),_c('span',{staticClass:\"hljs-params\"},[_vm._v(\"c\")]),_vm._v(\") {\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"return\")]),_vm._v(\" c.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"toUpperCase\")]),_vm._v(\"();\\n  }); }\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( \"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"titleize\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'my name is epeli'\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => \\\"My Name Is Epeli\\\"\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"思路是找到每个单词的首字母，当然这里不使用非捕获匹配也是可以的。\")]),_c('h4',[_vm._v(\"3.5.3. 驼峰化\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"function\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"camelize\")]),_vm._v(\" (str) {\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"return\")]),_vm._v(\" str.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"replace\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/[-_\\\\s]+(.)?/g\")]),_vm._v(\", \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"function\")]),_vm._v(\" (\"),_c('span',{staticClass:\"hljs-params\"},[_vm._v(\"match, c\")]),_vm._v(\") {\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"return\")]),_vm._v(\" c ? c.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"toUpperCase\")]),_vm._v(\"() : \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"''\")]),_vm._v(\";\\n  }); }\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( \"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"camelize\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'-moz-transform'\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => \\\"MozTransform\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"驼峰化的逆过程。\")]),_c('h4',[_vm._v(\"3.5.5. \"),_c('code',[_vm._v(\"HTML\")]),_vm._v(\" 转义和反转义\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// 将HTML特殊字符转换成等值的实体\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"function\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"escapeHTML\")]),_vm._v(\" (str) {\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" escapeChars = {\\n  \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'<'\")]),_vm._v(\" : \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'lt'\")]),_vm._v(\",\\n  \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'>'\")]),_vm._v(\" : \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'gt'\")]),_vm._v(\",\\n  \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'\\\"'\")]),_vm._v(\" : \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'quot'\")]),_vm._v(\",\\n  \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'&'\")]),_vm._v(\" : \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'amp'\")]),_vm._v(\",\\n  \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'\\\\''\")]),_vm._v(\" : \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'#39'\")]),_vm._v(\"\\n  };\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"return\")]),_vm._v(\" str.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"replace\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"RegExp\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'['\")]),_vm._v(\" + \"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"Object\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"keys\")]),_vm._v(\"(escapeChars).\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"join\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"''\")]),_vm._v(\") +\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"']'\")]),_vm._v(\", \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'g'\")]),_vm._v(\"),\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"function\")]),_vm._v(\" (\"),_c('span',{staticClass:\"hljs-params\"},[_vm._v(\"match\")]),_vm._v(\") {\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"return\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'&'\")]),_vm._v(\" + escapeChars[match] + \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"';'\")]),_vm._v(\";\\n  }); }\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( escapeHTML(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'<div>Blah blah blah</div>'\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => \\\"&lt;div&gt;Blah blah blah&lt;/div&gt\\\";\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"其中使用了用构造函数生成的正则，然后替换相应的格式就行了，这个跟本章没多大关系。\")]),_c('p',[_vm._v(\"倒是它的逆过程，使用了括号，以便提供引用，也很简单，如下：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// 实体字符转换为等值的HTML。\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"function\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"unescapeHTML\")]),_vm._v(\" (str) {\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" htmlEntities = {\\n  \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"nbsp\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"' '\")]),_vm._v(\",\\n  \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"lt\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'<'\")]),_vm._v(\",\\n  \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"gt\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'>'\")]),_vm._v(\",\\n  \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"quot\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'\\\"'\")]),_vm._v(\",\\n  \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"amp\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'&'\")]),_vm._v(\",\\n  \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"apos\")]),_vm._v(\": \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'\\\\''\")]),_vm._v(\"\\n  };\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"return\")]),_vm._v(\" str.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"replace\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/\\\\&([^;]+);/g\")]),_vm._v(\", \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"function\")]),_vm._v(\" (\"),_c('span',{staticClass:\"hljs-params\"},[_vm._v(\"match, key\")]),_vm._v(\") {\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"if\")]),_vm._v(\" (key \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"in\")]),_vm._v(\" htmlEntities) {\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"return\")]),_vm._v(\" htmlEntities[key];\\n  }\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"return\")]),_vm._v(\" match;\\n  }); }\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( unescapeHTML(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'&lt;div&gt;Blah blah blah&lt;/div&gt;'\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => \\\"<div>Blah blah blah</div>\\\"\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"通过 \"),_c('code',[_vm._v(\"key\")]),_vm._v(\" 获取相应的分组引用，然后作为对象的键。\")]),_c('h4',[_vm._v(\"3.5.6. 匹配成对标签\")]),_c('p',[_vm._v(\"要求匹配：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_vm._v(\"<title>regular expression</title>\\n\"),_c('span',{staticClass:\"language-xml\"},[_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"<\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"p\")]),_vm._v(\">\")]),_vm._v(\"laoyao bye bye\"),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"</\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"p\")]),_vm._v(\">\")])]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"不匹配：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_vm._v(\"<title>wrong!</p>\\n\")])]),_c('p',[_vm._v(\"匹配一个开标签，可以使用正则 \"),_c('code',[_vm._v(\"<[^>]+>\")]),_vm._v(\"，\")]),_c('p',[_vm._v(\"匹配一个闭标签，可以使用 \"),_c('code',[_vm._v(\"<\\\\/[^>]+>\")]),_vm._v(\"，\")]),_c('p',[_vm._v(\"但是要求匹配成对标签，那就需要使用反向引用，如：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/<([^>]+)>[\\\\d\\\\D]*<\\\\/\\\\1>/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string1 = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"<title>regular expression</title>\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string2 = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"<p>laoyao bye bye</p>\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string3 = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"<title>wrong!</p>\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(string1) ); \"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// true\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(string2) ); \"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// true\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(string3) ); \"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// false\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"其中开标签 \"),_c('code',[_vm._v(\"<[\\\\^>]+>\")]),_vm._v(\" 改成 \"),_c('code',[_vm._v(\"<([^>]+)>\")]),_vm._v(\"，使用括号的目的是为了后面使用\"),_c('strong',[_vm._v(\"反向引用\")]),_vm._v(\"，而提供分组。\")]),_c('p',[_vm._v(\"闭标签使用了反向引用，\"),_c('code',[_vm._v(\"<\\\\/\\\\1>\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"另外，\"),_c('code',[_vm._v(\"[\\\\d\\\\D]\")]),_vm._v(\"的意思是，这个字符是\"),_c('strong',[_vm._v(\"数字或者不是数字\")]),_vm._v(\"，因此，也就是匹配任意字符的意思。\")]),_c('h3',[_vm._v(\"3.6 本章小结\")]),_c('p',[_vm._v(\"重点理解括号可以提供分组，我们可以提取数据，应该就可以了。\")]),_c('h2',[_vm._v(\"4. 第四章 正则表达式回溯法原理\")]),_c('p',[_vm._v(\"学习正则表达式，是需要懂点儿匹配原理的。\")]),_c('p',[_vm._v(\"而研究匹配原理时，有两个字出现的频率比较高：“回溯”。\")]),_c('p',[_vm._v(\"听起来挺高大上，事实上却是一个比较容易理解的概念。\")]),_c('p',[_vm._v(\"因此，本章就简单扼要地说清楚回溯到底是什么东西。\")]),_c('p',[_vm._v(\"内容包括：\")]),_c('p',[_c('strong',[_vm._v(\"没有回溯的匹配\")])]),_c('p',[_c('strong',[_vm._v(\"有回溯的匹配\")])]),_c('p',[_c('strong',[_vm._v(\"常见的回溯形式\")])]),_c('h3',[_vm._v(\"4.1. 没有回溯的匹配\")]),_c('p',[_vm._v(\"假设我们的正则是 \"),_c('code',[_vm._v(\"/ab{1,3}c/\")]),_vm._v(\"，其可视化形式是：\")]),_c('img',{staticStyle:{\"display\":\"flex\",\"margin\":\"auto\",\"width\":\"60%\"},attrs:{\"src\":require(\"../../assets/微信截图_20211219152846.png\")}}),_c('p',[_vm._v(\"而当目标字符串是 \"),_c('code',[_vm._v(\"\\\"abbbc\\\"\")]),_vm._v(\" 时，就没有所谓的“回溯”。其匹配过程是：\")]),_c('img',{staticStyle:{\"display\":\"flex\",\"margin\":\"auto\",\"width\":\"60%\"},attrs:{\"src\":require(\"../../assets/微信截图_20211219153236.png\")}}),_c('p',[_vm._v(\"其中子表达式 \"),_c('code',[_vm._v(\"b{1,3}\")]),_vm._v(\" 表示 \"),_c('code',[_vm._v(\"\\\"b\\\"\")]),_vm._v(\" 字符连续出现 \"),_c('code',[_vm._v(\"1\")]),_vm._v(\" 到 \"),_c('code',[_vm._v(\"3\")]),_vm._v(\" 次。\")]),_c('h3',[_vm._v(\"4.2. 有回溯的匹配\")]),_c('p',[_vm._v(\"如果目标字符串是\"),_c('code',[_vm._v(\"\\\"abbc\\\"\")]),_vm._v(\"，中间就有回溯。\")]),_c('img',{staticStyle:{\"display\":\"flex\",\"margin\":\"auto\",\"width\":\"60%\"},attrs:{\"src\":require(\"../../assets/微信截图_20211219154202.png\")}}),_c('p',[_vm._v(\"图中第 \"),_c('code',[_vm._v(\"5\")]),_vm._v(\" 步有红颜色，表示匹配不成功。此时 \"),_c('code',[_vm._v(\"b{1,3}\")]),_vm._v(\" 已经匹配到了 \"),_c('code',[_vm._v(\"2\")]),_vm._v(\" 个字符 \"),_c('code',[_vm._v(\"\\\"b\\\"\")]),_vm._v(\"，准备尝试第三个时，\")]),_c('p',[_vm._v(\"结果发现接下来的字符是 \"),_c('code',[_vm._v(\"\\\"c\\\"\")]),_vm._v(\"。那么就认为 \"),_c('code',[_vm._v(\"b{1,3}\")]),_vm._v(\" 就已经匹配完毕。然后状态又回到之前的状态（即 第 \"),_c('code',[_vm._v(\"6\")]),_vm._v(\" 步与第 \"),_c('code',[_vm._v(\"4\")]),_vm._v(\" 步一样），\")]),_c('p',[_vm._v(\"最后再用子表达式 \"),_c('code',[_vm._v(\"c\")]),_vm._v(\"，去匹配字符 \"),_c('code',[_vm._v(\"\\\"c\\\"\")]),_vm._v(\"。当然，此时整个表达式匹配成功了。\")]),_c('p',[_vm._v(\"图中的第 \"),_c('code',[_vm._v(\"6\")]),_vm._v(\" 步，就是\"),_c('code',[_vm._v(\"“回溯”\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"你可能对此没有感觉，这里我们再举一个例子。正则是：\")]),_c('img',{staticStyle:{\"display\":\"flex\",\"margin\":\"auto\",\"width\":\"60%\"},attrs:{\"src\":require(\"../../assets/微信截图_20211219154447.png\")}}),_c('p',[_vm._v(\"目标字符串是\"),_c('code',[_vm._v(\"\\\"abbbc\\\"\")]),_vm._v(\"，匹配过程是：\")]),_c('img',{staticStyle:{\"display\":\"flex\",\"margin\":\"auto\",\"width\":\"60%\"},attrs:{\"src\":require(\"../../assets/微信截图_20211219154628.png\")}}),_c('p',[_vm._v(\"其中第 \"),_c('code',[_vm._v(\"7\")]),_vm._v(\" 步和第 \"),_c('code',[_vm._v(\"10\")]),_vm._v(\" 步是回溯。第 \"),_c('code',[_vm._v(\"7\")]),_vm._v(\" 步与第 \"),_c('code',[_vm._v(\"4\")]),_vm._v(\" 步一样，此时 \"),_c('code',[_vm._v(\"b{1,3}\")]),_vm._v(\" 匹配了两个 \"),_c('code',[_vm._v(\"\\\"b\\\"\")]),_vm._v(\"，\")]),_c('p',[_vm._v(\"而第 \"),_c('code',[_vm._v(\"10\")]),_vm._v(\" 步与 第 \"),_c('code',[_vm._v(\"3\")]),_vm._v(\" 步一样，此时 \"),_c('code',[_vm._v(\"b{1,3}\")]),_vm._v(\" 只匹配了一个 \"),_c('code',[_vm._v(\"\\\"b\\\"\")]),_vm._v(\"，这也是 \"),_c('code',[_vm._v(\"b{1,3}\")]),_vm._v(\" 的最终匹配结果。\")]),_c('p',[_vm._v(\"这里再看一个清晰的回溯，正则是：\")]),_c('img',{staticStyle:{\"display\":\"flex\",\"margin\":\"auto\",\"width\":\"60%\"},attrs:{\"src\":require(\"../../assets/微信截图_20211219155731.png\")}}),_c('p',[_vm._v(\"目标字符串是：\"),_c('code',[_vm._v(\"\\\"abc\\\"de\")]),_vm._v(\"，匹配过程是：\")]),_c('img',{staticStyle:{\"display\":\"flex\",\"margin\":\"auto\",\"width\":\"60%\"},attrs:{\"src\":require(\"../../assets/微信截图_20211219155900.png\")}}),_c('p',[_vm._v(\"图中省略了尝试匹配双引号失败的过程。可以看出 \"),_c('code',[_vm._v(\".*\")]),_vm._v(\" 是非常影响效率的。\")]),_c('p',[_vm._v(\"为了减少一些不必要的回溯，可以把正则修改为 \"),_c('code',[_vm._v(\"/\\\"[^\\\"]*\\\"/。\")])]),_c('h3',[_vm._v(\"4.3. 常见的回溯形式\")]),_c('p',[_vm._v(\"正则表达式匹配字符串的这种方式，有个学名，叫\"),_c('strong',[_vm._v(\"回溯法\")]),_vm._v(\"。\")]),_c('blockquote',[_c('p',[_vm._v(\"回溯法也称试探法，它的基本思想是：从问题的某一种状态（初始状态）出发，搜索从这种状态出发所能达到的所有“状态”，当一条路走到“尽头”的时候（不能再前进），再后退一步或若干步，从另一种可能“状态”出发，继续搜索，直到所有的“路径”（状态）都试探过。这种不断“前进”、 不断“回溯”寻找解的方法，就称作“回溯法”。 — 百度百科\")])]),_c('p',[_vm._v(\"本质上就是\"),_c('strong',[_vm._v(\"深度优先搜索算法\")]),_vm._v(\"。其中退到之前的某一步这一过程，我们称为\"),_c('code',[_vm._v(\"“回溯”\")]),_vm._v(\"。从上面的描述过程中，可以看出，路走不通时，就会发生“回溯”。即，尝试匹配失败时，接下来的一步通常就是回溯。\")]),_c('p',[_vm._v(\"道理，我们是懂了。那么 \"),_c('code',[_vm._v(\"JavaScript\")]),_vm._v(\" 中正则表达式会产生回溯的地方都有哪些呢？\")]),_c('h4',[_vm._v(\"4.3.1 贪婪量词\")]),_c('p',[_vm._v(\"之前的例子都是贪婪量词相关的。比如 \"),_c('code',[_vm._v(\"b{1,3}\")]),_vm._v(\"，因为其是贪婪的，尝试可能的顺序是从多往少的方向去尝 试。\")]),_c('p',[_vm._v(\"首先会尝试 \"),_c('code',[_vm._v(\"\\\"bbb\\\"\")]),_vm._v(\"，然后再看整个正则是否能匹配。不能匹配时，吐出一个 \"),_c('code',[_vm._v(\"\\\"b\\\"\")]),_vm._v(\"，即在 \"),_c('code',[_vm._v(\"\\\"bb\\\"\")]),_vm._v(\" 的基础上，再继续尝试。\")]),_c('p',[_vm._v(\"如果还不行，再吐出一个，再试。如果还不行呢？只能说明匹配失败了。\")]),_c('p',[_vm._v(\"虽然局部匹配是贪婪的，但也要满足整体能正确匹配。否则，皮之不存，毛将焉附？\")]),_c('p',[_vm._v(\"此时我们不禁会问，如果当多个贪婪量词挨着存在，并相互有冲突时，此时会是怎样？\")]),_c('p',[_vm._v(\"答案是，先下手为强！因为深度优先搜索。测试如下：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"12345\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/(\\\\d{1,3})(\\\\d{1,3})/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"match\")]),_vm._v(\"(regex) );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"12345\\\", \\\"123\\\", \\\"45\\\", index: 0, input: \\\"12345\\\"]\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"其中，前面的 \"),_c('code',[_vm._v(\"\\\\d{1,3}\")]),_vm._v(\" 匹配的是 \"),_c('code',[_vm._v(\"\\\"123\\\"\")]),_vm._v(\"，后面的 \"),_c('code',[_vm._v(\"\\\\d{1,3}\")]),_vm._v(\" 匹配的是 \"),_c('code',[_vm._v(\"\\\"45\\\"\")]),_vm._v(\"。\")]),_c('h4',[_vm._v(\"4.3.2 惰性量词\")]),_c('p',[_vm._v(\"惰性量词就是在贪婪量词后面加个问号。表示\"),_c('strong',[_vm._v(\"尽可能少的匹配\")]),_vm._v(\"，比如：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"12345\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/(\\\\d{1,3}?)(\\\\d{1,3})/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"match\")]),_vm._v(\"(regex) );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"1234\\\", \\\"1\\\", \\\"234\\\", index: 0, input: \\\"12345\\\"]\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"其中 \"),_c('code',[_vm._v(\"\\\\d{1,3}?\")]),_vm._v(\" 只匹配到一个字符 \"),_c('code',[_vm._v(\"\\\"1\\\"\")]),_vm._v(\"，而后面的 \"),_c('code',[_vm._v(\"\\\\d{1,3}\")]),_vm._v(\" 匹配了 \"),_c('code',[_vm._v(\"\\\"234\\\"\")]),_vm._v(\"。\")]),_c('p',[_c('strong',[_vm._v(\"虽然惰性量词不贪，但也会有回溯的现象\")]),_vm._v(\"。比如正则是：\")]),_c('img',{staticStyle:{\"display\":\"flex\",\"margin\":\"auto\",\"width\":\"60%\"},attrs:{\"src\":require(\"../../assets/微信截图_20211219173819.png\")}}),_c('p',[_vm._v(\"目标字符串是 \"),_c('code',[_vm._v(\"\\\"12345\\\"\")]),_vm._v(\"，匹配过程是：\")]),_c('img',{staticStyle:{\"display\":\"flex\",\"margin\":\"auto\",\"width\":\"60%\"},attrs:{\"src\":require(\"../../assets/微信截图_20211219174005.png\")}}),_c('p',[_vm._v(\"知道你不贪、很知足，但是为了整体匹配成，没办法，也只能给你多塞点了。因此最后 \"),_c('code',[_vm._v(\"\\\\d{1,3}?\")]),_vm._v(\" 匹配的字 符是 \"),_c('code',[_vm._v(\"\\\"12\\\"\")]),_vm._v(\"，是两个数字，而不是一个。\")]),_c('h4',[_vm._v(\"4.3.3 分支结构\")]),_c('p',[_vm._v(\"我们知道分支也是惰性的，比如 \"),_c('code',[_vm._v(\"/can|candy/\")]),_vm._v(\"，去匹配字符串 \"),_c('code',[_vm._v(\"\\\"candy\\\"\")]),_vm._v(\"，得到的结果是 \"),_c('code',[_vm._v(\"\\\"can\\\"\")]),_vm._v(\"，因为分支会一个一个尝试，如果前面的满足了，后面就不会再试验了。\")]),_c('p',[_c('strong',[_vm._v(\"分支结构\")]),_vm._v(\"，可能前面的\"),_c('strong',[_vm._v(\"子模式\")]),_vm._v(\"会形成了\"),_c('strong',[_vm._v(\"局部匹配\")]),_vm._v(\"，如果接下来表达式整体不匹配时，仍会继续尝试剩下的分支。这种尝试也可以看成一种回溯。\")]),_c('p',[_vm._v(\"比如正则：\")]),_c('img',{staticStyle:{\"display\":\"flex\",\"margin\":\"auto\",\"width\":\"60%\"},attrs:{\"src\":require(\"../../assets/微信截图_20211219174935.png\")}}),_c('p',[_vm._v(\"目标字符串是 \"),_c('code',[_vm._v(\"\\\"candy\\\"\")]),_vm._v(\"，匹配过程：\")]),_c('img',{staticStyle:{\"display\":\"flex\",\"margin\":\"auto\",\"width\":\"60%\"},attrs:{\"src\":require(\"../../assets/微信截图_20211219175244.png\")}}),_c('p',[_vm._v(\"上面第 \"),_c('code',[_vm._v(\"5\")]),_vm._v(\" 步，虽然没有回到之前的状态，但仍然回到了分支结构，尝试下一种可能。所以，可以认为它是 一种回溯的。\")]),_c('h3',[_vm._v(\"4.4. 本章小结\")]),_c('p',[_vm._v(\"其实回溯法，很容易掌握的。\")]),_c('p',[_vm._v(\"简单总结就是，正因为有多种可能，所以要一个一个试。直到，要么到某一步时，整体匹配成功了；要么最 后都试完后，发现整体匹配不成功。\")]),_c('p',[_vm._v(\"贪婪量词“试”的策略是：\"),_c('strong',[_vm._v(\"买衣服砍价\")]),_vm._v(\"。价钱太高了，便宜点，不行，再便宜点。\")]),_c('p',[_vm._v(\"惰性量词“试”的策略是：\"),_c('strong',[_vm._v(\"卖东西加价\")]),_vm._v(\"。给少了，再多给点行不，还有点少啊，再给点。\")]),_c('p',[_vm._v(\"分支结构“试”的策略是：\"),_c('strong',[_vm._v(\"货比三家\")]),_vm._v(\"。这家不行，换一家吧，还不行，再换。\")]),_c('p',[_vm._v(\"既然有\"),_c('strong',[_vm._v(\"回溯\")]),_vm._v(\"的过程，那么\"),_c('strong',[_vm._v(\"匹配效率肯定低一些\")]),_vm._v(\"。相对谁呢？相对那些 \"),_c('code',[_vm._v(\"DFA\")]),_vm._v(\" 引擎, \"),_c('code',[_vm._v(\"DFA\")]),_vm._v(\" 是“确定型有限自动 机”的简写。\")]),_c('p',[_vm._v(\"而 \"),_c('code',[_vm._v(\"JavaScript\")]),_vm._v(\" 的正则引擎是 \"),_c('code',[_vm._v(\"NFA，NFA\")]),_vm._v(\" 是“非确定型有限自动机”的简写。\")]),_c('p',[_vm._v(\"大部分语言中的正则都是 \"),_c('code',[_vm._v(\"NFA\")]),_vm._v(\"，为啥它这么流行呢？\")]),_c('p',[_vm._v(\"答：你别看我匹配慢，但是我编译快啊，而且我还有趣哦。\")]),_c('h2',[_vm._v(\"5. 第五章 正则表达式的拆分\")]),_c('p',[_vm._v(\"对于一门语言的掌握程度怎么样，可以有两个角度来衡量：读和写。\")]),_c('p',[_vm._v(\"不仅要求自己能解决问题，还要看懂别人的解决方案。代码是这样，正则表达式也是这样。\")]),_c('p',[_vm._v(\"正则这门语言跟其他语言有一点不同，它通常就是一大堆字符，而没有所谓“语句”的概念。\")]),_c('p',[_vm._v(\"如何能正确地把一大串正则拆分成一块一块的，成为了破解“天书”的关键。\")]),_c('p',[_vm._v(\"本章就解决这一问题，内容包括：\")]),_c('p',[_vm._v(\"结构和操作符\")]),_c('p',[_vm._v(\"注意要点\")]),_c('p',[_vm._v(\"案例分析\")]),_c('h3',[_vm._v(\"5.1. 结构和操作符\")]),_c('p',[_vm._v(\"编程语言一般都有操作符。只要有操作符，就会出现一个问题。当一大堆操作在一起时，先操作谁，又后操作谁呢？为了不产生歧义，就需要语言本身定义好操作顺序，即所谓的优先级。\")]),_c('p',[_vm._v(\"而在正则表达式中，操作符都体现在结构中，即由\"),_c('strong',[_vm._v(\"特殊字符\")]),_vm._v(\"和\"),_c('strong',[_vm._v(\"普通字符\")]),_vm._v(\"所代表的一个个特殊整体。\")]),_c('p',[_c('code',[_vm._v(\"JavaScript\")]),_vm._v(\" 正则表达式中，都有哪些结构呢？\")]),_c('p',[_c('strong',[_vm._v(\"字符字面量\")]),_vm._v(\"、\"),_c('strong',[_vm._v(\"字符组\")]),_vm._v(\"、\"),_c('strong',[_vm._v(\"量词\")]),_vm._v(\"、\"),_c('strong',[_vm._v(\"锚\")]),_vm._v(\"、\"),_c('strong',[_vm._v(\"分组\")]),_vm._v(\"、\"),_c('strong',[_vm._v(\"选择分支\")]),_vm._v(\"、\"),_c('strong',[_vm._v(\"反向引用\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"具体含义简要回顾如下：\")]),_c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"结构\")]),_c('th',[_vm._v(\"说明\")])])]),_c('tbody',[_c('tr',[_c('td',[_vm._v(\"字面量\")]),_c('td',[_vm._v(\"匹配一个具体字符，包括\"),_c('strong',[_vm._v(\"不用转义的和需要转义\")]),_vm._v(\"的。比如 \"),_c('code',[_vm._v(\"a\")]),_vm._v(\" 匹配字符 \"),_c('code',[_vm._v(\"\\\"a\\\"\")]),_vm._v(\"， 又比如 \"),_c('code',[_vm._v(\"\\\\n\")]),_vm._v(\" 匹配\"),_c('strong',[_vm._v(\"换行符\")]),_vm._v(\"，又比如 \"),_c('code',[_vm._v(\"\\\\.\")]),_vm._v(\" 匹配\"),_c('strong',[_vm._v(\"小数点\")]),_vm._v(\"。\")])]),_c('tr',[_c('td',[_vm._v(\"字符组\")]),_c('td',[_vm._v(\"匹配一个字符，可以是多种可能之一，比如 \"),_c('code',[_vm._v(\"[0-9]\")]),_vm._v(\"，表示\"),_c('strong',[_vm._v(\"匹配一个数字\")]),_vm._v(\"。也有 \"),_c('code',[_vm._v(\"\\\\d\")]),_vm._v(\" 的简写形式。另外还有\"),_c('strong',[_vm._v(\"反义字符组\")]),_vm._v(\"，表示可以是除了特定字符之外任何一个字符，比如 \"),_c('code',[_vm._v(\"[^0-9]\")]),_vm._v(\"， 表示一个\"),_c('strong',[_vm._v(\"非数字字符\")]),_vm._v(\"，也有 \"),_c('code',[_vm._v(\"\\\\D\")]),_vm._v(\" 的简写形式。\")])]),_c('tr',[_c('td',[_vm._v(\"量词\")]),_c('td',[_vm._v(\"表示一个字符连续出现，比如 \"),_c('code',[_vm._v(\"a{1,3}\")]),_vm._v(\" 表示 \"),_c('code',[_vm._v(\"\\\"a\\\"\")]),_vm._v(\" 字符连续出现 \"),_c('code',[_vm._v(\"3\")]),_vm._v(\" 次。另外还有常见的简写形式，比如 \"),_c('code',[_vm._v(\"a+\")]),_vm._v(\" 表示 \"),_c('code',[_vm._v(\"\\\"a\\\"\")]),_vm._v(\" 字符连续出现至少一次。\")])]),_c('tr',[_c('td',[_vm._v(\"锚\")]),_c('td',[_vm._v(\"匹配一个位置，\"),_c('strong',[_vm._v(\"而不是字符\")]),_vm._v(\"。比如 \"),_c('code',[_vm._v(\"^\")]),_vm._v(\" 匹配字符串的开头，又比如 \"),_c('code',[_vm._v(\"\\\\b\")]),_vm._v(\" 匹配\"),_c('strong',[_vm._v(\"单词边界\")]),_vm._v(\"， 又比如 \"),_c('code',[_vm._v(\"(?=\\\\d)\")]),_vm._v(\" 表示\"),_c('strong',[_vm._v(\"数字前面的位置\")]),_vm._v(\"。\")])]),_c('tr',[_c('td',[_vm._v(\"分组\")]),_c('td',[_vm._v(\"用括号表示一个整体，比如 \"),_c('code',[_vm._v(\"(ab)+\")]),_vm._v(\"，表示 \"),_c('code',[_vm._v(\"\\\"ab\\\"\")]),_vm._v(\" 两个字符连续出现多次，也可以使用非捕获分组 \"),_c('code',[_vm._v(\"(?:ab)+\")]),_vm._v(\"。\")])]),_c('tr',[_c('td',[_vm._v(\"分支\")]),_c('td',[_vm._v(\"多个子表达式多选一，比如 \"),_c('code',[_vm._v(\"abc|bcd\")]),_vm._v(\"，表达式匹配 \"),_c('code',[_vm._v(\"\\\"abc\\\" \")]),_vm._v(\"或者 \"),_c('code',[_vm._v(\"\\\"bcd\\\"\")]),_vm._v(\" 字符子串。 \"),_c('strong',[_vm._v(\"反向引用\")]),_vm._v(\"，比如 \"),_c('code',[_vm._v(\"\\\\2\")]),_vm._v(\"，表示引用第 \"),_c('code',[_vm._v(\"2\")]),_vm._v(\" 个分组。\")])])])]),_c('p',[_vm._v(\"其中涉及到的操作符有：\")]),_c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"操作符描述\")]),_c('th',[_vm._v(\"操作符\")]),_c('th',[_vm._v(\"优先级\")])])]),_c('tbody',[_c('tr',[_c('td',[_c('strong',[_vm._v(\"转义符\")])]),_c('td',[_c('code',[_vm._v(\"\\\\\")])]),_c('td',[_c('code',[_vm._v(\"1\")])])]),_c('tr',[_c('td',[_c('strong',[_vm._v(\"括号和方括号\")])]),_c('td',[_c('code',[_vm._v(\"(…)、(?:…)、(?=…)、(?!…)、[…]\")])]),_c('td',[_c('code',[_vm._v(\"2\")])])]),_c('tr',[_c('td',[_c('strong',[_vm._v(\"量词限定符\")])]),_c('td',[_c('code',[_vm._v(\" {m}、{m,n}、{m,}、?、*、+\")])]),_c('td',[_c('code',[_vm._v(\"3\")])])]),_c('tr',[_c('td',[_c('strong',[_vm._v(\"位置和序列\")])]),_c('td',[_c('code',[_vm._v(\"^、$、\\\\元字符、一般字符\")])]),_c('td',[_c('code',[_vm._v(\"4\")])])]),_c('tr',[_c('td',[_c('strong',[_vm._v(\"管道符（竖杠）\")])]),_c('td',[_c('code',[_vm._v(\"|\")])]),_c('td',[_c('code',[_vm._v(\"5\")])])])])]),_c('p',[_vm._v(\"上面操作符的优先级从上至下，由高到低。\")]),_c('p',[_vm._v(\"这里，我们来分析一个正则：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_vm._v(\"/ab?(c|de*)+|fg/\\n\")])]),_c('p',[_vm._v(\"由于括号的存在，所以，\"),_c('code',[_vm._v(\"(c|de*)\")]),_vm._v(\" 是一个整体结构。\")]),_c('p',[_vm._v(\"在 \"),_c('code',[_vm._v(\"(c|de*)\")]),_vm._v(\" 中，注意其中的量词 ，因此 \"),_c('code',[_vm._v(\"e\")]),_vm._v(\" 是一个整体结构。\")]),_c('p',[_vm._v(\"又因为分支结构 \"),_c('code',[_vm._v(\"|\")]),_vm._v(\" 优先级最低，因此 \"),_c('code',[_vm._v(\"c\")]),_vm._v(\" 是一个整体、而 \"),_c('code',[_vm._v(\"de*\")]),_vm._v(\" 是另一个整体。\")]),_c('p',[_vm._v(\"同理，整个正则分成了 \"),_c('code',[_vm._v(\"a、b?、(…)+、f、g\")]),_vm._v(\"。而由于分支的原因， 又可以分成 \"),_c('code',[_vm._v(\"ab?(c|de*)+\")]),_vm._v(\" 和 \"),_c('code',[_vm._v(\"fg\")]),_vm._v(\" 这两部分。\")]),_c('p',[_vm._v(\"希望你没被我绕晕，上面的分析可用其可视化形式描述如下：\")]),_c('img',{staticStyle:{\"display\":\"flex\",\"margin\":\"auto\",\"width\":\"80%\"},attrs:{\"src\":require(\"../../assets/微信截图_20211219225240.png\")}}),_c('h3',[_vm._v(\"5.2. 注意要点\")]),_c('p',[_vm._v(\"关于结构和操作符，还是有几点需要强调：\")]),_c('h4',[_vm._v(\"5.2.1 匹配字符串整体问题\")]),_c('p',[_vm._v(\"因为是要匹配整个字符串，我们经常会在正则前后中加上锚 \"),_c('code',[_vm._v(\"^\")]),_vm._v(\" 和 \"),_c('code',[_vm._v(\"$\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"比如要匹配目标字符串 \"),_c('code',[_vm._v(\"\\\"abc\\\"\")]),_vm._v(\" 或者 \"),_c('code',[_vm._v(\"\\\"bcd\\\"\")]),_vm._v(\" 时，如果一不小心，就会写成 \"),_c('code',[_vm._v(\"/^abc|bcd$/\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"而位置字符和字符序列优先级要比竖杠高，故其匹配的结构是：\")]),_c('img',{staticStyle:{\"display\":\"flex\",\"margin\":\"auto\",\"width\":\"50%\"},attrs:{\"src\":require(\"../../assets/微信截图_20211219230752.png\")}}),_c('h4',[_vm._v(\"5.2.2 量词连缀问题\")]),_c('p',[_vm._v(\"假设，要匹配这样的字符串：\")]),_c('ol',[_c('li',[_vm._v(\"每个字符为 \"),_c('code',[_vm._v(\"\\\"a、\\\"b\\\"、\\\"c\\\"\")]),_vm._v(\" 任选其一，\")]),_c('li',[_vm._v(\"字符串的长度是 \"),_c('code',[_vm._v(\"3\")]),_vm._v(\" 的倍数。\")])]),_c('p',[_vm._v(\"此时正则不能想当然地写成 \"),_c('code',[_vm._v(\"/^[abc]{3}+$/\")]),_vm._v(\"，这样会报错，说 \"),_c('code',[_vm._v(\"+\")]),_vm._v(\" 前面没什么可重复的：\")]),_c('img',{staticStyle:{\"display\":\"flex\",\"margin\":\"auto\",\"width\":\"80%\"},attrs:{\"src\":require(\"../../assets/微信截图_20211220000031.png\")}}),_c('p',[_vm._v(\"此时要修改成：\")]),_c('img',{staticStyle:{\"display\":\"flex\",\"margin\":\"auto\",\"width\":\"50%\"},attrs:{\"src\":require(\"../../assets/微信截图_20211220000110.png\")}}),_c('h4',[_vm._v(\"5.2.3 元字符转义问题\")]),_c('p',[_vm._v(\"所谓元字符，就是正则中有特殊含义的字符。\")]),_c('p',[_vm._v(\"所有结构里，用到的元字符总结如下：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_vm._v(\"^、$、.、*、+、?、|、\\\\、/、(、)、[、]、{、}、=、!、:、- ,\\n\")])]),_c('p',[_vm._v(\"当匹配上面的字符本身时，可以一律转义：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"^$.*+?|\\\\\\\\/[]{}=!:-,\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/\\\\^\\\\$\\\\.\\\\*\\\\+\\\\?\\\\|\\\\\\\\\\\\/\\\\[\\\\]\\\\{\\\\}\\\\=\\\\!\\\\:\\\\-\\\\,/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(string) );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => true\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"其中 \"),_c('code',[_vm._v(\"string\")]),_vm._v(\" 中的 \"),_c('code',[_vm._v(\"\\\\\")]),_vm._v(\" 字符也要转义的。\")]),_c('p',[_vm._v(\"另外，在 \"),_c('code',[_vm._v(\"string\")]),_vm._v(\" 中，也可以把每个字符转义，当然，转义后的结果仍是本身：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"^$.*+?|\\\\\\\\/[]{}=!:-,\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string2 = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"\\\\^\\\\$\\\\.\\\\*\\\\+\\\\?\\\\|\\\\\\\\\\\\/\\\\[\\\\]\\\\{\\\\}\\\\=\\\\!\\\\:\\\\-\\\\,\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( string == string2 );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => true\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"现在的问题是，是不是每个字符都需要转义呢？否，看情况。\")]),_c('h5',[_vm._v(\"5.2.3.1. 字符组中的元字符\")]),_c('p',[_vm._v(\"跟字符组相关的元字符有 \"),_c('code',[_vm._v(\"[、]、^、-\")]),_vm._v(\"。因此在会引起歧义的地方进行转义。例如开头的 \"),_c('code',[_vm._v(\"^\")]),_vm._v(\" 必须转义，不然会把整个字符组，看成反义字符组。\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"^$.*+?|\\\\\\\\/[]{}=!:-,\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/[\\\\^$.*+?|\\\\\\\\/\\\\[\\\\]{}=!:\\\\-,]/g\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"match\")]),_vm._v(\"(regex) );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"^\\\", \\\"$\\\", \\\".\\\", \\\"*\\\", \\\"+\\\", \\\"?\\\", \\\"|\\\", \\\"\\\\\\\", \\\"/\\\", \\\"[\\\", \\\"]\\\", \\\"{\\\", \\\"}\\\", \\\"=\\\", \\\"!\\\", \\\":\\\",\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"-\\\"\")]),_vm._v(\", \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\",\\\"\")]),_vm._v(\"]\\n\")])]),_c('h5',[_vm._v(\"5.2.3.2. 匹配 \"),_c('code',[_vm._v(\"\\\"[abc]\\\"\")]),_vm._v(\" 和 \"),_c('code',[_vm._v(\"\\\"{3,5}\\\"\")])]),_c('p',[_vm._v(\"我们知道 \"),_c('code',[_vm._v(\"[abc]\")]),_vm._v(\"，是个字符组。如果要匹配字符串 \\\"[abc]\\\" 时，该怎么办？\")]),_c('p',[_vm._v(\"可以写成 \"),_c('code',[_vm._v(\"/\\\\[abc\\\\]/\")]),_vm._v(\"，也可以写成 \"),_c('code',[_vm._v(\"/\\\\[abc]/\")]),_vm._v(\"，测试如下：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"[abc]\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/\\\\[abc]/g\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"match\")]),_vm._v(\"(regex)[\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\"] );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => \\\"[abc]\\\"\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"只需要在第一个方括号转义即可，因为后面的方括号构不成字符组，正则不会引发歧义，自然不需要转义。\")]),_c('p',[_vm._v(\"同理，要匹配字符串 \"),_c('code',[_vm._v(\"\\\"{3,5}\\\"\")]),_vm._v(\"，只需要把正则写成 \"),_c('code',[_vm._v(\"/\\\\{3,5}/\")]),_vm._v(\" 即可。\")]),_c('p',[_vm._v(\"另外，我们知道量词有简写形式 \"),_c('code',[_vm._v(\"{m,}\")]),_vm._v(\"，却没有 \"),_c('code',[_vm._v(\"{,n}\")]),_vm._v(\" 的情况。虽然后者不构成量词的形式，但此时并不会报 错。当然，匹配的字符串也是 \"),_c('code',[_vm._v(\"\\\"{,n}\\\"\")]),_vm._v(\"，测试如下：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"{,3}\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/{,3}/g\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"match\")]),_vm._v(\"(regex)[\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\"] );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => \\\"{,3}\\\"\")]),_vm._v(\"\\n\")])]),_c('h5',[_vm._v(\"5.2.3.3. 其余情况\")]),_c('p',[_vm._v(\"比如 \"),_c('code',[_vm._v(\"=、!、:、-、,\")]),_vm._v(\" 等符号，只要不在特殊结构中，并不需要转义。\")]),_c('p',[_vm._v(\"但是，括号需要前后都转义的，如 \"),_c('code',[_vm._v(\"/\\\\(123\\\\)/\")]),_vm._v(\"。 至于剩下的 \"),_c('code',[_vm._v(\"^、$、.、*、+、?、|、\\\\、/\")]),_vm._v(\" 等字符，只要不在字符组内，都需要转义的。\")]),_c('h3',[_vm._v(\"5.3. 案例分析\")]),_c('p',[_vm._v(\"接下来分析两个例子，一个简单的，一个复杂的。\")]),_c('h4',[_vm._v(\"5.3.1 身份证\")]),_c('p',[_vm._v(\"正则表达式是：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_vm._v(\"/^(\\\\d{\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"15\")]),_vm._v(\"}|\\\\d{\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"17\")]),_vm._v(\"}[\\\\dxX])$/\\n\")])]),_c('p',[_vm._v(\"因为竖杠 \"),_c('code',[_vm._v(\"|\")]),_vm._v(\" 的优先级最低，所以正则分成了两部分 \"),_c('code',[_vm._v(\"\\\\d{15} 和 \\\\d{17}[\\\\dxX]。\")])]),_c('p',[_c('code',[_vm._v(\"\\\\d{15}\")]),_vm._v(\" 表示 \"),_c('code',[_vm._v(\"15\")]),_vm._v(\" 位连续数字。\")]),_c('p',[_c('code',[_vm._v(\"\\\\d{17}[\\\\dxX]\")]),_vm._v(\" 表示 \"),_c('code',[_vm._v(\"17\")]),_vm._v(\" 位连续数字，最后一位可以是数字，可以大小写字母 \"),_c('code',[_vm._v(\"\\\"x\\\"。\")])]),_c('p',[_vm._v(\"可视化如下：\")]),_c('img',{staticStyle:{\"display\":\"flex\",\"margin\":\"auto\",\"width\":\"60%\"},attrs:{\"src\":require(\"../../assets/微信截图_20211220005321.png\")}}),_c('h4',[_vm._v(\"5.3.2 IPV4 地址\")]),_c('p',[_vm._v(\"正则表达式是：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_vm._v(\"/^((\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\"{\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\",\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2\")]),_vm._v(\"}\\\\d|\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\"?\\\\d{\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2\")]),_vm._v(\"}|\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1\")]),_vm._v(\"\\\\d{\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2\")]),_vm._v(\"}|\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2\")]),_vm._v(\"[\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\"-\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"4\")]),_vm._v(\"]\\\\d|\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"25\")]),_vm._v(\"[\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\"-\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"5\")]),_vm._v(\"])\\\\.){\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"3\")]),_vm._v(\"}(\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\"{\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\",\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2\")]),_vm._v(\"}\\\\d|\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\"?\\\\d{\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2\")]),_vm._v(\"}|\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1\")]),_vm._v(\"\\\\d{\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2\")]),_vm._v(\"}|\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2\")]),_vm._v(\"[\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\"-\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"4\")]),_vm._v(\"]\\\\d|\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"25\")]),_vm._v(\"[\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\"-\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"5\")]),_vm._v(\"])$/\\n\")])]),_c('p',[_vm._v(\"这个正则，看起来非常吓人。但是熟悉优先级后，会立马得出如下的结构：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_vm._v(\"((…)\\\\.){\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"3\")]),_vm._v(\"}(…)\\n\")])]),_c('p',[_vm._v(\"其中，两个 \"),_c('code',[_vm._v(\"(…)\")]),_vm._v(\" 是一样的结构。表示匹配的是 \"),_c('code',[_vm._v(\"3\")]),_vm._v(\" 位数字。因此整个结构是\")]),_c('p',[_vm._v(\"3位数.3位数.3位数.3位数\")]),_c('p',[_vm._v(\"然后再来分析 \"),_c('code',[_vm._v(\"(…)：\")])]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_vm._v(\"(\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\"{\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\",\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2\")]),_vm._v(\"}\\\\d|\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\"?\\\\d{\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2\")]),_vm._v(\"}|\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1\")]),_vm._v(\"\\\\d{\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2\")]),_vm._v(\"}|\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2\")]),_vm._v(\"[\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\"-\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"4\")]),_vm._v(\"]\\\\d|\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"25\")]),_vm._v(\"[\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\"-\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"5\")]),_vm._v(\"])\\n\")])]),_c('p',[_vm._v(\"它是一个多选结构，分成\"),_c('code',[_vm._v(\"5\")]),_vm._v(\"个部分：\")]),_c('p',[_c('code',[_vm._v(\"0{0,2}\\\\d\")]),_vm._v(\"，匹配一位数，包括 \"),_c('code',[_vm._v(\"\\\"0\\\"\")]),_vm._v(\" 补齐的。比如，\"),_c('code',[_vm._v(\"\\\"9\\\"、\\\"09\\\"、\\\"009\\\"；\")])]),_c('p',[_c('code',[_vm._v(\"0?\\\\d{2}\")]),_vm._v(\"，匹配两位数，包括 \"),_c('code',[_vm._v(\"\\\"0\\\"\")]),_vm._v(\" 补齐的，也包括一位数；\")]),_c('p',[_c('code',[_vm._v(\"1\\\\d{2}\")]),_vm._v(\"，匹配 \"),_c('code',[_vm._v(\"\\\"100\\\" 到 \\\"199\\\";\")])]),_c('p',[_c('code',[_vm._v(\"2[0-4]\\\\d\")]),_vm._v(\"，匹配 \"),_c('code',[_vm._v(\"\\\"200\\\" 到 \\\"249\\\"；\")])]),_c('p',[_c('code',[_vm._v(\"25[0-5]\")]),_vm._v(\"，匹配 \"),_c('code',[_vm._v(\"\\\"250\\\" 到 \\\"255\\\"。\")])]),_c('p',[_vm._v(\"最后来看一下其可视化形式：\")]),_c('img',{staticStyle:{\"display\":\"flex\",\"margin\":\"auto\",\"width\":\"80%\"},attrs:{\"src\":require(\"../../assets/微信截图_20211220005910.png\")}}),_c('h3',[_vm._v(\"5.4. 本章小结\")]),_c('p',[_vm._v(\"掌握正则表达式中的优先级后，再看任何正则应该都有信心分析下去了。\")]),_c('p',[_vm._v(\"至于例子，不一而足，没有写太多。\")]),_c('p',[_vm._v(\"这里稍微总结一下，竖杠的优先级最低，即最后运算。 只要知道这一点，就能读懂大部分正则。\")]),_c('p',[_vm._v(\"另外关于元字符转义问题，当自己不确定与否时，尽管去转义，总之是不会错的。\")]),_c('h2',[_vm._v(\"6. 第六章 正则表达式的构建\")]),_c('p',[_vm._v(\"对于一门语言的掌握程度怎么样，可以有两个角度来衡量：读和写。\")]),_c('p',[_vm._v(\"不仅要看懂别人的解决方案，也要能独立地解决问题。代码是这样，正则表达式也是这样。 与“读”相比，“写”往往更为重要，这个道理是不言而喻的。\")]),_c('p',[_vm._v(\"对正则的运用，首重就是：如何针对问题，构建一个合适的正则表达式？\")]),_c('p',[_vm._v(\"本章就解决该问题，内容包括：\")]),_c('p',[_c('strong',[_vm._v(\"平衡法则\")])]),_c('p',[_c('strong',[_vm._v(\"构建正则前提\")])]),_c('p',[_c('strong',[_vm._v(\"准确性\")])]),_c('p',[_c('strong',[_vm._v(\"效率\")])]),_c('h3',[_vm._v(\"6.1. 平衡法则\")]),_c('p',[_vm._v(\"构建正则有一点非常重要，需要做到下面几点的平衡：\")]),_c('p',[_c('strong',[_vm._v(\"匹配预期的字符串\")])]),_c('p',[_c('strong',[_vm._v(\"不匹配非预期的字符串\")])]),_c('p',[_c('strong',[_vm._v(\"可读性和可维护性\")])]),_c('p',[_c('strong',[_vm._v(\"效率\")])]),_c('h3',[_vm._v(\"6.2. 构建正则前提\")]),_c('h4',[_vm._v(\"6.2.1. 是否能使用正则？\")]),_c('p',[_vm._v(\"正则太强大了，以至于我们随便遇到一个操作字符串问题时，都会下意识地去想，用正则该怎么做。但我们始终要提醒自己，正则虽然强大，但不是万能的，很多看似很简单的事情，还是做不到的。\")]),_c('p',[_vm._v(\"比如匹配这样的字符串：\"),_c('code',[_vm._v(\"1010010001…。\")])]),_c('p',[_vm._v(\"虽然很有规律，但是只靠正则就是无能为力。\")]),_c('h4',[_vm._v(\"6.2.2. 是否有必要使用正则？\")]),_c('p',[_vm._v(\"要认识到正则的局限，不要去研究根本无法完成的任务。同时，也不能走入另一个极端：无所不用正则。能用字符串 \"),_c('code',[_vm._v(\"API\")]),_vm._v(\" 解决的简单问题，就不该正则出马。\")]),_c('p',[_vm._v(\"比如，从日期中提取出年月日，虽然可以使用正则：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"2017-07-01\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/^(\\\\d{4})-(\\\\d{2})-(\\\\d{2})/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"match\")]),_vm._v(\"(regex) );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"2017-07-01\\\", \\\"2017\\\", \\\"07\\\", \\\"01\\\", index: 0, input: \\\"2017-07-01\\\"]\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"其实，可以使用字符串的 \"),_c('code',[_vm._v(\"split\")]),_vm._v(\" 方法来做，即可：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"2017-07-01\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" result = string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"split\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"-\\\"\")]),_vm._v(\");\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( result );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"2017\\\", \\\"07\\\", \\\"01\\\"]\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"比如，判断是否有问号，虽然可以使用：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"?id=xx&act=search\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"search\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/\\\\?/\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => 0\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"其实，可以使用字符串的 \"),_c('code',[_vm._v(\"indexOf\")]),_vm._v(\" 方法：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"?id=xx&act=search\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"indexOf\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"?\\\"\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => 0\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"比如获取子串，虽然可以使用正则：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"JavaScript\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"match\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/.{4}(.+)/\")]),_vm._v(\")[\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1\")]),_vm._v(\"] );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => Script\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"其实，可以直接使用字符串的 \"),_c('code',[_vm._v(\"substring\")]),_vm._v(\" 或 \"),_c('code',[_vm._v(\"substr\")]),_vm._v(\" 方法来做：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"JavaScript\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"substring\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"4\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => Script\")]),_vm._v(\"\\n\")])]),_c('h4',[_vm._v(\"6.2.3. 是否有必要构建一个复杂的正则？\")]),_c('p',[_vm._v(\"比如密码匹配问题，要求密码长度 \"),_c('code',[_vm._v(\"6-12\")]),_vm._v(\" 位，由数字、小写字符和大写字母组成，但必须至少包括 2 种字符。\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_vm._v(\"/(?!^[\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\"-\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"9\")]),_vm._v(\"]{\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"6\")]),_vm._v(\",\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"12\")]),_vm._v(\"}$)(?!^[a-z]{\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"6\")]),_vm._v(\",\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"12\")]),_vm._v(\"}$)(?!^[A-Z]{\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"6\")]),_vm._v(\",\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"12\")]),_vm._v(\"}$)^[\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\"-9A-\"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"Za\")]),_vm._v(\"-z]{\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"6\")]),_vm._v(\",\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"12\")]),_vm._v(\"}$/\\n\")])]),_c('p',[_vm._v(\"其实可以使用多个小正则来做：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex1 = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/^[0-9A-Za-z]{6,12}$/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex2 = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/^[0-9]{6,12}$/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex3 = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/^[A-Z]{6,12}$/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex4 = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/^[a-z]{6,12}$/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"function\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"checkPassword\")]),_vm._v(\" (string) {\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"if\")]),_vm._v(\" (!regex1.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(string)) \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"return\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-literal\"},[_vm._v(\"false\")]),_vm._v(\";\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"if\")]),_vm._v(\" (regex2.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(string)) \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"return\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-literal\"},[_vm._v(\"false\")]),_vm._v(\";\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"if\")]),_vm._v(\" (regex3.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(string)) \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"return\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-literal\"},[_vm._v(\"false\")]),_vm._v(\";\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"if\")]),_vm._v(\" (regex4.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(string)) \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"return\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-literal\"},[_vm._v(\"false\")]),_vm._v(\";\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"return\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-literal\"},[_vm._v(\"true\")]),_vm._v(\"; }\\n\")])]),_c('h3',[_vm._v(\"6.3. 准确性\")]),_c('p',[_vm._v(\"所谓准确性，就是能匹配预期的目标，并且不匹配非预期的目标。\")]),_c('p',[_vm._v(\"这里提到了“预期”二字，那么我们就需要知道目标的组成规则。\")]),_c('p',[_vm._v(\"不然没法界定什么样的目标字符串是符合预期的，什么样的又不是符合预期的。\")]),_c('p',[_vm._v(\"下面将举例说明，当目标字符串构成比较复杂时，该如何构建正则，并考虑到哪些平衡。\")]),_c('h4',[_vm._v(\"6.3.1. 匹配固定电话\")]),_c('p',[_vm._v(\"比如要匹配如下格式的固定电话号码：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"055188888888\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0551\")]),_vm._v(\"-\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"88888888\")]),_vm._v(\"\\n(\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0551\")]),_vm._v(\")\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"88888888\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"第一步，了解各部分的模式规则。\")]),_c('p',[_vm._v(\"上面的电话，总体上分为\"),_c('strong',[_vm._v(\"区号\")]),_vm._v(\"和\"),_c('strong',[_vm._v(\"号码\")]),_vm._v(\"两部分（不考虑分机号和 \"),_c('code',[_vm._v(\"\\\"+86\\\"\")]),_vm._v(\" 的情形）。\")]),_c('p',[_vm._v(\"区号是 \"),_c('code',[_vm._v(\"\\\"0\\\"\")]),_vm._v(\" 开头的 \"),_c('code',[_vm._v(\"3\")]),_vm._v(\" 到 \"),_c('code',[_vm._v(\"4\")]),_vm._v(\" 位数字，对应的正则是：\"),_c('code',[_vm._v(\"0\\\\d{2,3}\")]),_vm._v(\"，\")]),_c('p',[_vm._v(\"号码是非 \"),_c('code',[_vm._v(\"\\\"0\\\"\")]),_vm._v(\" 开头的 \"),_c('code',[_vm._v(\"7\")]),_vm._v(\" 到 \"),_c('code',[_vm._v(\"8\")]),_vm._v(\" 位数字，对应的正则是：\"),_c('code',[_vm._v(\"[1-9]\\\\d{6,7}，\")])]),_c('p',[_vm._v(\"因此，匹配 \"),_c('code',[_vm._v(\"\\\"055188888888\\\"\")]),_vm._v(\" 的正则是：\"),_c('code',[_vm._v(\"/^0\\\\d{2,3}[1-9]\\\\d{6,7}$/，\")])]),_c('p',[_vm._v(\"匹配 \"),_c('code',[_vm._v(\"\\\"0551-88888888\\\"\")]),_vm._v(\" 的正则是：\"),_c('code',[_vm._v(\"/^0\\\\d{2,3}-[1-9]\\\\d{6,7}$/，\")])]),_c('p',[_vm._v(\"匹配 \"),_c('code',[_vm._v(\"\\\"(0551)88888888\\\"\")]),_vm._v(\" 的正则是：\"),_c('code',[_vm._v(\"/^\\\\(0\\\\d{2,3}\\\\)[1-9]\\\\d{6,7}$/。\")])]),_c('p',[_vm._v(\"第二步，明确形式关系。\")]),_c('p',[_vm._v(\"这三者情形是或的关系，可以构建分支：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_vm._v(\"/^\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\"\\\\d{\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2\")]),_vm._v(\",\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"3\")]),_vm._v(\"}[\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1\")]),_vm._v(\"-\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"9\")]),_vm._v(\"]\\\\d{\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"6\")]),_vm._v(\",\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"7\")]),_vm._v(\"}$|^\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\"\\\\d{\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2\")]),_vm._v(\",\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"3\")]),_vm._v(\"}-[\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1\")]),_vm._v(\"-\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"9\")]),_vm._v(\"]\\\\d{\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"6\")]),_vm._v(\",\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"7\")]),_vm._v(\"}$|^\\\\(\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\"\\\\d{\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2\")]),_vm._v(\",\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"3\")]),_vm._v(\"}\\\\)[\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1\")]),_vm._v(\"-\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"9\")]),_vm._v(\"]\\\\d{\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"6\")]),_vm._v(\",\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"7\")]),_vm._v(\"}$/\\n\")])]),_c('p',[_vm._v(\"提取公共部分：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_vm._v(\"/^(\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\"\\\\d{\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2\")]),_vm._v(\",\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"3\")]),_vm._v(\"}|\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\"\\\\d{\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2\")]),_vm._v(\",\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"3\")]),_vm._v(\"}-|\\\\(\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\"\\\\d{\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2\")]),_vm._v(\",\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"3\")]),_vm._v(\"}\\\\))[\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1\")]),_vm._v(\"-\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"9\")]),_vm._v(\"]\\\\d{\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"6\")]),_vm._v(\",\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"7\")]),_vm._v(\"}$/\\n\")])]),_c('p',[_vm._v(\"进一步简写：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_vm._v(\"/^(\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\"\\\\d{\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2\")]),_vm._v(\",\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"3\")]),_vm._v(\"}-?|\\\\(\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\"\\\\d{\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2\")]),_vm._v(\",\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"3\")]),_vm._v(\"}\\\\))[\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1\")]),_vm._v(\"-\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"9\")]),_vm._v(\"]\\\\d{\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"6\")]),_vm._v(\",\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"7\")]),_vm._v(\"}$/\\n\")])]),_c('p',[_vm._v(\"其可视化形式：\")]),_c('img',{staticStyle:{\"display\":\"flex\",\"margin\":\"auto\",\"width\":\"80%\"},attrs:{\"src\":require(\"../../assets/微信截图_20211220013239.png\")}}),_c('p',[_vm._v(\"上面的正则构建过程略显罗嗦，但是这样做，能保证正则是准确的。\")]),_c('p',[_vm._v(\"上述三种情形是或的关系，这一点很重要，不然很容易按字符是否出现的情形把正则写成：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_vm._v(\"/^\\\\(?\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\"\\\\d{\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2\")]),_vm._v(\",\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"3\")]),_vm._v(\"}\\\\)?-?[\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1\")]),_vm._v(\"-\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"9\")]),_vm._v(\"]\\\\d{\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"6\")]),_vm._v(\",\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"7\")]),_vm._v(\"}$/\\n\")])]),_c('p',[_vm._v(\"虽然也能匹配上述目标字符串，但也会匹配 \"),_c('code',[_vm._v(\"\\\"(0551-88888888\\\"\")]),_vm._v(\" 这样的字符串。当然，这不是我们想要的。\")]),_c('p',[_vm._v(\"其实这个正则也不是完美的，因为现实中，并不是每个 3 位数和 4 位数都是一个真实的区号。\")]),_c('p',[_vm._v(\"这就是一个平衡取舍问题，一般够用就行。\")]),_c('h4',[_vm._v(\"6.3.2. 匹配浮点数\")]),_c('p',[_vm._v(\"要求匹配如下的格式：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1.23\")]),_vm._v(\"、+\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1.23\")]),_vm._v(\"、-\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1.23\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"10\")]),_vm._v(\"、+\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"10\")]),_vm._v(\"、-\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"10\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\".2\")]),_vm._v(\"、+\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\".2\")]),_vm._v(\"、-\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\".2\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"可以看出正则分为三部分。\")]),_c('p',[_vm._v(\"符号部分：\"),_c('code',[_vm._v(\"[+-]\")]),_vm._v(\"，\")]),_c('p',[_vm._v(\"整数部分：\"),_c('code',[_vm._v(\"\\\\d+\")]),_vm._v(\"，\")]),_c('p',[_vm._v(\"小数部分：\"),_c('code',[_vm._v(\"\\\\.\\\\d+\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"上述三个部分，并不是全部都出现。如果此时很容易写出如下的正则：\")]),_c('p',[_c('code',[_vm._v(\"/^[+-]?(\\\\d+)?(\\\\.\\\\d+)?$/\")])]),_c('p',[_vm._v(\"此正则看似没问题，但这个正则也会匹配空字符 \"),_c('code',[_vm._v(\"\\\"\\\"\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"因为目标字符串的形式关系不是要求每部分都是可选的。\")]),_c('p',[_vm._v(\"要匹配 \"),_c('code',[_vm._v(\"\\\"1.23\\\"、\\\"+1.23\\\"、\\\"-1.23\\\"\")]),_vm._v(\"，可以用\"),_c('code',[_vm._v(\"/^[+-]?\\\\d+\\\\.\\\\d+$/\")]),_vm._v(\"，\")]),_c('p',[_vm._v(\"要匹配 \"),_c('code',[_vm._v(\"\\\"10\\\"、\\\"+10\\\"、\\\"-10\\\"\")]),_vm._v(\"，可以用\"),_c('code',[_vm._v(\"/^[+-]?\\\\d+$/\")]),_vm._v(\"，\")]),_c('p',[_vm._v(\"要匹配 \"),_c('code',[_vm._v(\"\\\".2\\\"、\\\"+.2\\\"、\\\"-.2\\\"\")]),_vm._v(\"，可以用\"),_c('code',[_vm._v(\"/^[+-]?\\\\.\\\\d+$/\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"因此整个正则是这三者的或的关系，提取公众部分后是：\")]),_c('p',[_c('code',[_vm._v(\"/^[+-]?(\\\\d+\\\\.\\\\d+|\\\\d+|\\\\.\\\\d+)$/\")])]),_c('p',[_vm._v(\"其可视化形式是：\")]),_c('img',{staticStyle:{\"display\":\"flex\",\"margin\":\"auto\",\"width\":\"60%\"},attrs:{\"src\":require(\"../../assets/微信截图_20211221204927.png\")}}),_c('p',[_vm._v(\"如果要求不匹配 \"),_c('code',[_vm._v(\"\\\"+.2\\\"\")]),_vm._v(\" 和 \"),_c('code',[_vm._v(\"\\\"-.2\\\"\")]),_vm._v(\"，此时正则变成：\")]),_c('img',{staticStyle:{\"display\":\"flex\",\"margin\":\"auto\",\"width\":\"60%\"},attrs:{\"src\":require(\"../../assets/微信截图_20211221205246.png\")}}),_c('p',[_vm._v(\"当然，\"),_c('code',[_vm._v(\"/^[+-]?(\\\\d+\\\\.\\\\d+|\\\\d+|\\\\.\\\\d+)$/\")]),_vm._v(\" 也不是完美的，我们也是做了些取舍，比如：\")]),_c('p',[_vm._v(\"它也会匹配 \"),_c('code',[_vm._v(\"\\\"012\\\"\")]),_vm._v(\" 这样以 \"),_c('code',[_vm._v(\"\\\"0\\\"\")]),_vm._v(\" 开头的整数。如果要求不匹配的话，需要修改整数部分的正则。一般进行验 证操作之前，都要经过 trim 和判空。那样的话，也许那个错误正则也就够用了。也可以进一步改写成： \"),_c('code',[_vm._v(\"/^[+-]?(\\\\d+)?(\\\\.)?\\\\d+$/\")]),_vm._v(\"，这样我们就需要考虑可读性和可维护性了。\")]),_c('h3',[_vm._v(\"6.4. 效率\")]),_c('p',[_vm._v(\"保证了准确性后，才需要是否要考虑要优化。大多数情形是不需要优化的，除非运行的非常慢。什么情形正 则表达式运行才慢呢？我们需要考察正则表达式的运行过程（原理）。\")]),_c('p',[_vm._v(\"正则表达式的运行分为如下的阶段：\")]),_c('ol',[_c('li',[_vm._v(\"编译；\")]),_c('li',[_vm._v(\"设定起始位置；\")]),_c('li',[_vm._v(\"尝试匹配；\")]),_c('li',[_vm._v(\"匹配失败的话，从下一位开始继续第 3 步；\")]),_c('li',[_vm._v(\"最终结果：匹配成功或失败。\")])]),_c('p',[_vm._v(\"下面以代码为例，来看看这几个阶段都做了什么：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/\\\\d+/g\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"lastIndex\")]),_vm._v(\", regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"exec\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"123abc34def\\\"\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"lastIndex\")]),_vm._v(\", regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"exec\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"123abc34def\\\"\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"lastIndex\")]),_vm._v(\", regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"exec\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"123abc34def\\\"\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"lastIndex\")]),_vm._v(\", regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"exec\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"123abc34def\\\"\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => 0 [\\\"123\\\", index: 0, input: \\\"123abc34def\\\"]\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => 3 [\\\"34\\\", index: 6, input: \\\"123abc34def\\\"]\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => 8 null\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => 0 [\\\"123\\\", index: 0, input: \\\"123abc34def\\\"]\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"具体分析如下：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/\\\\d+/g\")]),_vm._v(\";\\n\")])]),_c('p',[_vm._v(\"当生成一个正则时，引擎会对其进行编译。报错与否出现这这个阶段。\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_vm._v(\"regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"exec\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"123abc34def\\\"\")]),_vm._v(\")\\n\")])]),_c('p',[_vm._v(\"当尝试匹配时，需要确定从哪一位置开始匹配。一般情形都是字符串的开头，即第 0 位。\")]),_c('p',[_vm._v(\"但当使用 \"),_c('code',[_vm._v(\"test\")]),_vm._v(\" 和 \"),_c('code',[_vm._v(\"exec\")]),_vm._v(\" 方法，且正则有 g 时，起始位置是从正则对象的 \"),_c('code',[_vm._v(\"lastIndex\")]),_vm._v(\" 属性开始。 因此第一次 \"),_c('code',[_vm._v(\"exec\")]),_vm._v(\" 是从第 0 位开始，而第二次是从 3 开始的。\")]),_c('p',[_vm._v(\"设定好起始位置后，就开始尝试匹配了。\")]),_c('p',[_vm._v(\"比如第一次 \"),_c('code',[_vm._v(\"exec\")]),_vm._v(\"，从 0 开始，去尝试匹配，并且成功地匹配到 3 个数字。此时结束时的下标是 2，因此下一次的起始位置是 3。 而第二次，起始下标是 3，但第 3 个字符是 \"),_c('code',[_vm._v(\"\\\"a\\\"\")]),_vm._v(\"，并不是数字。但此时并不会直接报匹配失败，而是移动到下一位置，即从第 4 位开始继续尝试匹配，但该字符是 \"),_c('code',[_vm._v(\"\\\"b\\\"\")]),_vm._v(\"，也不是数字。再移动到下一位，是 \"),_c('code',[_vm._v(\"\\\"c\\\"\")]),_vm._v(\" 仍不行，再移动一位是数字 \"),_c('code',[_vm._v(\"\\\"3\\\"\")]),_vm._v(\"，此时匹配到了两位数字 \"),_c('code',[_vm._v(\"\\\"34\\\"\")]),_vm._v(\"。此时，下一次匹配的位置是 \"),_c('code',[_vm._v(\"\\\"d\\\"\")]),_vm._v(\" 的位置，即第8 位。\")]),_c('p',[_vm._v(\"第三次，是从第 8 位开始匹配，直到试到最后一位，也没发现匹配的，因此匹配失败，返回 \"),_c('code',[_vm._v(\"null\")]),_vm._v(\"。同时设置 \"),_c('code',[_vm._v(\"lastIndex\")]),_vm._v(\" 为 0，即，如要再尝试匹配的话，需从头开始。\")]),_c('p',[_vm._v(\"从上面可以看出，匹配会出现效率问题，主要出现在上面的第 3 阶段和第 4 阶段。 因此，主要优化手法也是针对这两阶段的\")]),_c('h4',[_vm._v(\"6.4.1. 使用具体型字符组来代替通配符，来消除回溯\")]),_c('p',[_vm._v(\"而在第三阶段，最大的问题就是回溯。 例如，匹配双引用号之间的字符。如，匹配字符串 \"),_c('code',[_vm._v(\"123\\\"abc\\\"456\")]),_vm._v(\" 中的 \"),_c('code',[_vm._v(\"\\\"abc\\\"\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"如果正则用的是：\"),_c('code',[_vm._v(\"/\\\".*\\\"/\")]),_vm._v(\"，会在第 \"),_c('code',[_vm._v(\"3\")]),_vm._v(\" 阶段产生 \"),_c('code',[_vm._v(\"4\")]),_vm._v(\" 次回溯（粉色表示 \"),_c('code',[_vm._v(\".*\")]),_vm._v(\" 匹配的内容）：\")]),_c('img',{staticStyle:{\"display\":\"flex\",\"margin\":\"auto\",\"width\":\"60%\"},attrs:{\"src\":require(\"../../assets/微信截图_20211221221651.png\")}}),_c('p',[_vm._v(\"如果正则用的是：\"),_c('code',[_vm._v(\"/\\\".*?\\\"/\")]),_vm._v(\"，会产生 2 次回溯（粉色表示 \"),_c('code',[_vm._v(\".*?\")]),_vm._v(\" 匹配的内容）\")]),_c('img',{staticStyle:{\"display\":\"flex\",\"margin\":\"auto\",\"width\":\"60%\"},attrs:{\"src\":require(\"../../assets/微信截图_20211221230642.png\")}}),_c('p',[_vm._v(\"因为回溯的存在，需要引擎保存多种可能中未尝试过的状态，以便后续回溯时使用。注定要占用一定的内存。\")]),_c('p',[_vm._v(\"此时要使用具体化的字符组，来代替通配符\"),_c('code',[_vm._v(\".\")]),_vm._v(\"，以便消除不必要的字符，此时使用正则 \"),_c('code',[_vm._v(\"/\\\"[^\\\"]*\\\"/\")]),_vm._v(\"，即可。\")]),_c('h4',[_vm._v(\"6.4.2. 使用非捕获型分组\")]),_c('p',[_vm._v(\"因为括号的作用之一是，可以捕获分组和分支里的数据。那么就需要内存来保存它们。\")]),_c('p',[_vm._v(\"当我们不需要使用分组引用和反向引用时，此时可以使用非捕获分组。\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_vm._v(\"例如，/^[-]?(\\\\d\\\\.\\\\d+|\\\\d+|\\\\.\\\\d+)$/ 可以修改成：/^[-]?(?:\\\\d\\\\.\\\\d+|\\\\d+|\\\\.\\\\d+)$/。\\n\")])]),_c('h4',[_vm._v(\"6.4.3. 独立出确定字符\")]),_c('p',[_vm._v(\"例如，\"),_c('code',[_vm._v(\"/a+/\")]),_vm._v(\" 可以修改成 \"),_c('code',[_vm._v(\"/aa*/\")]),_vm._v(\"。 因为后者能比前者多确定了字符 \"),_c('code',[_vm._v(\"\\\"a\\\"\")]),_vm._v(\"。这样会在第四步中，加快判断是否匹配失败，进而加快移位的速度。\")]),_c('h4',[_vm._v(\"6.4.4. 提取分支公共部分\")]),_c('p',[_vm._v(\"比如，\"),_c('code',[_vm._v(\"/^abc|^def/\")]),_vm._v(\" 修改成 \"),_c('code',[_vm._v(\"/^(?:abc|def)/\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"又比如， \"),_c('code',[_vm._v(\"/this|that/\")]),_vm._v(\"修改成 \"),_c('code',[_vm._v(\"/th(?:is|at)/\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"这样做，可以减少匹配过程中可消除的重复。\")]),_c('h4',[_vm._v(\"6.4.5. 减少分支的数量，缩小它们的范围\")]),_c('p',[_c('code',[_vm._v(\"/red|read/\")]),_vm._v(\" 可以修改成 \"),_c('code',[_vm._v(\"/rea?d/\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"此时分支和量词产生的回溯的成本是不一样的。但这样优化后，可读性会降低的。\")]),_c('h3',[_vm._v(\"6.5. 本章小结\")]),_c('p',[_vm._v(\"本章涉及的内容并不多。\")]),_c('p',[_vm._v(\"一般情况下，针对某问题能写出一个满足需求的正则，基本上就可以了。\")]),_c('p',[_vm._v(\"至于准确性和效率方面的追求，纯属看个人要求了。我觉得够用就行了。\")]),_c('p',[_vm._v(\"关于准确性，本章关心的是最常用的解决思路： 针对每种情形，分别写出正则，然用分支把它们合并在一起，再提取分支公共部分，就能得到准确的正则。\")]),_c('p',[_vm._v(\"至于优化，本章没有为了凑数，去写一大堆。了解了匹配原理，常见的优化手法也就这么几种\")]),_c('h2',[_vm._v(\"7. 第七章 正则表达式编程\")]),_c('p',[_vm._v(\"什么叫知识，能指导我们实践的东西才叫知识。\")]),_c('p',[_vm._v(\"学习一样东西，如果不能使用，最多只能算作纸上谈兵。正则表达式的学习，也不例外。\")]),_c('p',[_vm._v(\"掌握了正则表达式的语法后，下一步，也是关键的一步，就是在真实世界中使用它。\")]),_c('p',[_vm._v(\"那么如何使用正则表达式呢？有哪些关键的点呢？本章就解决这个问题。\")]),_c('p',[_vm._v(\"内容包括：\")]),_c('p',[_c('strong',[_vm._v(\"正则表达式的四种操作\")])]),_c('p',[_c('strong',[_vm._v(\"相关API注意要点\")])]),_c('p',[_c('strong',[_vm._v(\"真实案例\")])]),_c('h3',[_vm._v(\"7.1. 正则表达式的四种操作\")]),_c('p',[_vm._v(\"正则表达式是匹配模式，不管如何使用正则表达式，万变不离其宗，都需要先“匹配”。\")]),_c('p',[_vm._v(\"有了匹配这一基本操作后，才有其他的操作：\"),_c('strong',[_vm._v(\"验证、切分、提取、替换\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"进行任何相关操作，也需要宿主引擎相关 \"),_c('code',[_vm._v(\"API\")]),_vm._v(\" 的配合使用。当然，在 \"),_c('code',[_vm._v(\"JavaScript\")]),_vm._v(\" 中，相关 \"),_c('code',[_vm._v(\"API\")]),_vm._v(\" 也不多。\")]),_c('h4',[_vm._v(\"7.1.1. 验证\")]),_c('p',[_vm._v(\"验证是正则表达式最直接的应用，比如表单验证。\")]),_c('p',[_vm._v(\"在说验证之前，先要说清楚匹配是什么概念。\")]),_c('p',[_vm._v(\"所谓匹配，就是看目标字符串里是否有满足匹配的子串。因此，“匹配”的本质就是“查找”。\")]),_c('p',[_vm._v(\"有没有匹配，是不是匹配上，判断是否的操作，即称为“验证”。\")]),_c('p',[_vm._v(\"这里举一个例子，来看看如何使用相关 \"),_c('code',[_vm._v(\"API\")]),_vm._v(\" 进行验证操作的。\")]),_c('p',[_vm._v(\"比如，判断一个字符串中是否有数字。\")]),_c('p',[_vm._v(\"使用 \"),_c('code',[_vm._v(\"search：\")])]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/\\\\d/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"abc123\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( !!~string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"search\")]),_vm._v(\"(regex) );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => true\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"使用 \"),_c('code',[_vm._v(\"test：\")])]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/\\\\d/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"abc123\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(string) );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => true\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"使用 \"),_c('code',[_vm._v(\"match：\")])]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/\\\\d/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"abc123\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( !!string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"match\")]),_vm._v(\"(regex) );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => true\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"使用 \"),_c('code',[_vm._v(\"exec：\")])]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/\\\\d/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"abc123\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( !!regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"exec\")]),_vm._v(\"(string) );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => true\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"其中，最常用的是 \"),_c('code',[_vm._v(\"test。\")])]),_c('h4',[_vm._v(\"7.1.2. 切分\")]),_c('p',[_vm._v(\"匹配上了，我们就可以进行一些操作，比如切分。\")]),_c('p',[_vm._v(\"所谓“切分”，就是把目标字符串，切成一段一段的。在 \"),_c('code',[_vm._v(\"JavaScript\")]),_vm._v(\" 中使用的是 \"),_c('code',[_vm._v(\"split。\")])]),_c('p',[_vm._v(\"比如，目标字符串是 \"),_c('code',[_vm._v(\"\\\"html,css,javascript\\\"\")]),_vm._v(\"，按逗号来切分：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/,/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"html,css,javascript\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"split\")]),_vm._v(\"(regex) );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"html\\\", \\\"css\\\", \\\"javascript\\\"]\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"又比如，如下的日期格式：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2017\")]),_vm._v(\"/\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"06\")]),_vm._v(\"/\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"26\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2017.06\")]),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\".26\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2017\")]),_vm._v(\"-\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"06\")]),_vm._v(\"-\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"26\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"可以使用 \"),_c('code',[_vm._v(\"split\")]),_vm._v(\" “切出”年月日：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/\\\\D/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"2017/06/26\\\"\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"split\")]),_vm._v(\"(regex) );\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"2017.06.26\\\"\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"split\")]),_vm._v(\"(regex) );\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"2017-06-26\\\"\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"split\")]),_vm._v(\"(regex) );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"2017\\\", \\\"06\\\", \\\"26\\\"]\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"2017\\\", \\\"06\\\", \\\"26\\\"]\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"2017\\\", \\\"06\\\", \\\"26\\\"]\")]),_vm._v(\"\\n\")])]),_c('h4',[_vm._v(\"7.1.3. 提取\")]),_c('p',[_vm._v(\"虽然整体匹配上了，但有时需要提取部分匹配的数据。\")]),_c('p',[_vm._v(\"此时正则通常要使用分组引用（分组捕获）功能，还需要配合使用相关 \"),_c('code',[_vm._v(\"API。\")])]),_c('p',[_vm._v(\"这里，还是以日期为例，提取出年月日。注意下面正则中的括号：\")]),_c('p',[_vm._v(\"使用 \"),_c('code',[_vm._v(\"match：\")])]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/^(\\\\d{4})\\\\D(\\\\d{2})\\\\D(\\\\d{2})$/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"2017-06-26\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"match\")]),_vm._v(\"(regex) );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// =>[\\\"2017-06-26\\\", \\\"2017\\\", \\\"06\\\", \\\"26\\\", index: 0, input: \\\"2017-06-26\\\"]\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"使用 \"),_c('code',[_vm._v(\"exec：\")])]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/^(\\\\d{4})\\\\D(\\\\d{2})\\\\D(\\\\d{2})$/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"2017-06-26\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"exec\")]),_vm._v(\"(string) );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// =>[\\\"2017-06-26\\\", \\\"2017\\\", \\\"06\\\", \\\"26\\\", index: 0, input: \\\"2017-06-26\\\"]\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"使用 \"),_c('code',[_vm._v(\"test：\")])]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_vm._v(\"var regex = /^(\\\\d{4})\\\\D(\\\\d{2})\\\\D(\\\\d{2})$/;\\nvar string = \\\"2017-06-26\\\";\\nregex.test(string);\\nconsole.log( RegExp.$1, RegExp.$2, RegExp.$3 );\\n// => \\\"2017\\\" \\\"06\\\" \\\"26\\\"\\n\")])]),_c('p',[_vm._v(\"使用 \"),_c('code',[_vm._v(\"search：\")])]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/^(\\\\d{4})\\\\D(\\\\d{2})\\\\D(\\\\d{2})$/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"2017-06-26\\\"\")]),_vm._v(\";\\nstring.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"search\")]),_vm._v(\"(regex);\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( \"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"RegExp\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"$1\")]),_vm._v(\", \"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"RegExp\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"$2\")]),_vm._v(\", \"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"RegExp\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"$3\")]),_vm._v(\" );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => \\\"2017\\\" \\\"06\\\" \\\"26\\\"\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"使用 \"),_c('code',[_vm._v(\"replace：\")])]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/^(\\\\d{4})\\\\D(\\\\d{2})\\\\D(\\\\d{2})$/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"2017-06-26\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" date = [];\\nstring.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"replace\")]),_vm._v(\"(regex, \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"function\")]),_vm._v(\" (\"),_c('span',{staticClass:\"hljs-params\"},[_vm._v(\"match, year, month, day\")]),_vm._v(\") {\\n  date.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"push\")]),_vm._v(\"(year, month, day);\\n});\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"(date);\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"2017\\\", \\\"06\\\", \\\"26\\\"]\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"其中，最常用的是 \"),_c('code',[_vm._v(\"match。\")])]),_c('h4',[_vm._v(\"7.1.4. 替换\")]),_c('p',[_vm._v(\"找，往往不是目的，通常下一步是为了替换。在 \"),_c('code',[_vm._v(\"JavaScript\")]),_vm._v(\" 中，使用 \"),_c('code',[_vm._v(\"replace\")]),_vm._v(\" 进行替换。\")]),_c('p',[_vm._v(\"比如把日期格式，从 \"),_c('code',[_vm._v(\"yyyy-mm-dd\")]),_vm._v(\" 替换成 \"),_c('code',[_vm._v(\"yyyy/mm/dd：\")])]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"2017-06-26\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" today = \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"Date\")]),_vm._v(\"( string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"replace\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/-/g\")]),_vm._v(\", \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"/\\\"\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( today );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => Mon Jun 26 2017 00:00:00 GMT+0800 (中国标准时间)\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"这里只是简单地应用了一下 \"),_c('code',[_vm._v(\"replace\")]),_vm._v(\"。但，\"),_c('code',[_vm._v(\"replace\")]),_vm._v(\" 方法很是强大的，是需要重点掌握的。\")]),_c('h3',[_vm._v(\"7.2. 相关 API 注意要点\")]),_c('p',[_vm._v(\"从上面可以看出用于正则操作的方法，共有 6 个，字符串实例 4 个，正则实例 2 个：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"String\")]),_vm._v(\"#search\\n\"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"String\")]),_vm._v(\"#split\\n\"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"String\")]),_vm._v(\"#match\\n\"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"String\")]),_vm._v(\"#replace\\n\"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"RegExp\")]),_vm._v(\"#test\\n\"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"RegExp\")]),_vm._v(\"#exec\\n\")])]),_c('h4',[_vm._v(\"7.2.1. \"),_c('code',[_vm._v(\"search\")]),_vm._v(\" 和 \"),_c('code',[_vm._v(\"match\")]),_vm._v(\" 的参数问题\")]),_c('p',[_vm._v(\"我们知道字符串实例的那 4 个方法参数都支持正则和字符串。\")]),_c('p',[_vm._v(\"但 \"),_c('code',[_vm._v(\"search\")]),_vm._v(\" 和 \"),_c('code',[_vm._v(\"match\")]),_vm._v(\"，会把字符串转换为正则的。\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"2017.06.27\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"search\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\".\\\"\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => 0\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"//需要修改成下列形式之一\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"search\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"\\\\\\\\.\\\"\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"search\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/\\\\./\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => 4\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => 4\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"match\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\".\\\"\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"2\\\", index: 0, input: \\\"2017.06.27\\\"]\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"//需要修改成下列形式之一\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"match\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"\\\\\\\\.\\\"\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"match\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/\\\\./\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\".\\\", index: 4, input: \\\"2017.06.27\\\"]\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\".\\\", index: 4, input: \\\"2017.06.27\\\"]\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"split\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\".\\\"\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"2017\\\", \\\"06\\\", \\\"27\\\"]\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"replace\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\".\\\"\")]),_vm._v(\", \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"/\\\"\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => \\\"2017/06.27\\\"\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"7.2.2. \"),_c('code',[_vm._v(\"match\")]),_vm._v(\" 返回结果的格式问题\")]),_c('p',[_c('code',[_vm._v(\"match\")]),_vm._v(\" 返回结果的格式，与正则对象是否有修饰符 \"),_c('code',[_vm._v(\"g\")]),_vm._v(\" 有关。\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"2017.06.27\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex1 = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/\\\\b(\\\\d+)\\\\b/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex2 = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/\\\\b(\\\\d+)\\\\b/g\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"match\")]),_vm._v(\"(regex1) );\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"match\")]),_vm._v(\"(regex2) );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"2017\\\", \\\"2017\\\", index: 0, input: \\\"2017.06.27\\\"]\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"2017\\\", \\\"06\\\", \\\"27\\\"]\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"没有 \"),_c('code',[_vm._v(\"g\")]),_vm._v(\"，返回的是标准匹配格式，即，数组的第一个元素是整体匹配的内容，接下来是分组捕获的内容，然后是整体匹配的第一个下标，最后是输入的目标字符串。\")]),_c('p',[_vm._v(\"有 \"),_c('code',[_vm._v(\"g\")]),_vm._v(\"，返回的是所有匹配的内容。\")]),_c('p',[_vm._v(\"当没有匹配时，不管有无 \"),_c('code',[_vm._v(\"g\")]),_vm._v(\"，都返回 \"),_c('code',[_vm._v(\"null。\")])]),_c('h4',[_vm._v(\"7.2.3. \"),_c('code',[_vm._v(\"exec\")]),_vm._v(\" 比 \"),_c('code',[_vm._v(\"match\")]),_vm._v(\" 更强大\")]),_c('p',[_vm._v(\"当正则没有 \"),_c('code',[_vm._v(\"g\")]),_vm._v(\" 时，使用 \"),_c('code',[_vm._v(\"match\")]),_vm._v(\" 返回的信息比较多。但是有 \"),_c('code',[_vm._v(\"g\")]),_vm._v(\" 后，就没有关键的信息 \"),_c('code',[_vm._v(\"index\")]),_vm._v(\" 了。\")]),_c('p',[_vm._v(\"而 \"),_c('code',[_vm._v(\"exec\")]),_vm._v(\" 方法就能解决这个问题，它能接着上一次匹配后继续匹配：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"2017.06.27\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex2 = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/\\\\b(\\\\d+)\\\\b/g\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex2.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"exec\")]),_vm._v(\"(string) );\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex2.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"lastIndex\")]),_vm._v(\");\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex2.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"exec\")]),_vm._v(\"(string) );\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex2.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"lastIndex\")]),_vm._v(\");\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex2.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"exec\")]),_vm._v(\"(string) );\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex2.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"lastIndex\")]),_vm._v(\");\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex2.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"exec\")]),_vm._v(\"(string) );\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex2.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"lastIndex\")]),_vm._v(\");\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"2017\\\", \\\"2017\\\", index: 0, input: \\\"2017.06.27\\\"]\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => 4\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"06\\\", \\\"06\\\", index: 5, input: \\\"2017.06.27\\\"]\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => 7\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"27\\\", \\\"27\\\", index: 8, input: \\\"2017.06.27\\\"]\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => 10\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => null\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => 0\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"其中正则实例 \"),_c('code',[_vm._v(\"lastIndex\")]),_vm._v(\" 属性，表示下一次匹配开始的位置。\")]),_c('p',[_vm._v(\"比如第一次匹配了 \"),_c('code',[_vm._v(\"\\\"2017\\\"\")]),_vm._v(\"，开始下标是 \"),_c('code',[_vm._v(\"0\")]),_vm._v(\"，共 \"),_c('code',[_vm._v(\"4\")]),_vm._v(\" 个字符，因此这次匹配结束的位置是 \"),_c('code',[_vm._v(\"3\")]),_vm._v(\"，下一次开始匹配的位置是 \"),_c('code',[_vm._v(\"4\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"从上述代码看出，在使用 \"),_c('code',[_vm._v(\"exec\")]),_vm._v(\" 时，经常需要配合使用 \"),_c('code',[_vm._v(\"while\")]),_vm._v(\" 循环：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"2017.06.27\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex2 = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/\\\\b(\\\\d+)\\\\b/g\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" result;\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"while\")]),_vm._v(\" ( result = regex2.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"exec\")]),_vm._v(\"(string) ) {\\n  \"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( result, regex2.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"lastIndex\")]),_vm._v(\" ); }\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"2017\\\", \\\"2017\\\", index: 0, input: \\\"2017.06.27\\\"] 4\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"06\\\", \\\"06\\\", index: 5, input: \\\"2017.06.27\\\"] 7\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"27\\\", \\\"27\\\", index: 8, input: \\\"2017.06.27\\\"] 10\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"其中正则实例 \"),_c('code',[_vm._v(\"lastIndex\")]),_vm._v(\" 属性，表示下一次匹配开始的位置。\")]),_c('p',[_vm._v(\"比如第一次匹配了 \"),_c('code',[_vm._v(\"\\\"2017\\\"\")]),_vm._v(\"，开始下标是 0，共 4 个字符，因此这次匹配结束的位置是 3，下一次开始匹配的位置是 4。\")]),_c('p',[_vm._v(\"从上述代码看出，在使用 \"),_c('code',[_vm._v(\"exec\")]),_vm._v(\" 时，经常需要配合使用 \"),_c('code',[_vm._v(\"while\")]),_vm._v(\" 循环：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"2017.06.27\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex2 = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/\\\\b(\\\\d+)\\\\b/g\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" result;\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"while\")]),_vm._v(\" ( result = regex2.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"exec\")]),_vm._v(\"(string) ) {\\n  \"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( result, regex2.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"lastIndex\")]),_vm._v(\" ); }\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"2017\\\", \\\"2017\\\", index: 0, input: \\\"2017.06.27\\\"] 4\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"06\\\", \\\"06\\\", index: 5, input: \\\"2017.06.27\\\"] 7\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"27\\\", \\\"27\\\", index: 8, input: \\\"2017.06.27\\\"] 10\")]),_vm._v(\"\\n\")])]),_c('h4',[_vm._v(\"7.2.4. 修饰符 \"),_c('code',[_vm._v(\"g\")]),_vm._v(\"，对 \"),_c('code',[_vm._v(\"exex\")]),_vm._v(\" 和 \"),_c('code',[_vm._v(\"test\")]),_vm._v(\" 的影响\")]),_c('p',[_vm._v(\"上面提到了正则实例的 \"),_c('code',[_vm._v(\"lastIndex\")]),_vm._v(\" 属性，表示尝试匹配时，从字符串的 \"),_c('code',[_vm._v(\"lastIndex\")]),_vm._v(\" 位开始去匹配。\")]),_c('p',[_vm._v(\"字符串的四个方法，每次匹配时，都是从 \"),_c('code',[_vm._v(\"0\")]),_vm._v(\" 开始的，即 \"),_c('code',[_vm._v(\"lastIndex\")]),_vm._v(\" 属性始终不变。\")]),_c('p',[_vm._v(\"而正则实例的两个方法 \"),_c('code',[_vm._v(\"exec、test\")]),_vm._v(\"，当正则是全局匹配时，每一次匹配完成后，都会修改 \"),_c('code',[_vm._v(\"lastIndex\")]),_vm._v(\"。下面让我们以 \"),_c('code',[_vm._v(\"test\")]),_vm._v(\" 为例，看看你是否会迷糊：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/a/g\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"a\\\"\")]),_vm._v(\"), regex.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"lastIndex\")]),_vm._v(\" );\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"aba\\\"\")]),_vm._v(\"), regex.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"lastIndex\")]),_vm._v(\" );\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"ababc\\\"\")]),_vm._v(\"), regex.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"lastIndex\")]),_vm._v(\" );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => true 1\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => true 3\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => false 0\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"注意上面代码中的第三次调用 \"),_c('code',[_vm._v(\"test\")]),_vm._v(\"，因为这一次尝试匹配，开始从下标 \"),_c('code',[_vm._v(\"lastIndex\")]),_vm._v(\"，即 3 位置处开始查 找，自然就找不到了。\")]),_c('p',[_vm._v(\"如果没有 \"),_c('code',[_vm._v(\"g\")]),_vm._v(\"，自然都是从字符串第 \"),_c('code',[_vm._v(\"0\")]),_vm._v(\" 个字符处开始尝试匹配：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/a/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"a\\\"\")]),_vm._v(\"), regex.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"lastIndex\")]),_vm._v(\" );\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"aba\\\"\")]),_vm._v(\"), regex.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"lastIndex\")]),_vm._v(\" );\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"ababc\\\"\")]),_vm._v(\"), regex.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"lastIndex\")]),_vm._v(\" );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => true 0\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => true 0\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => true 0\")]),_vm._v(\"\\n\")])]),_c('h4',[_vm._v(\"7.2.5. \"),_c('code',[_vm._v(\"test\")]),_vm._v(\" 整体匹配时需要使用 \"),_c('code',[_vm._v(\"^\")]),_vm._v(\" 和 \"),_c('code',[_vm._v(\"$\")])]),_c('p',[_vm._v(\"这个相对容易理解，因为 \"),_c('code',[_vm._v(\"test\")]),_vm._v(\" 是看目标字符串中是否有子串匹配正则，即有部分匹配即可。\")]),_c('p',[_vm._v(\"如果，要整体匹配，正则前后需要添加开头和结尾：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/123/\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"a123b\\\"\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => true\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/^123$/\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"a123b\\\"\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => false\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/^123$/\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"123\\\"\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => true\")]),_vm._v(\"\\n\")])]),_c('h4',[_vm._v(\"7.2.6. \"),_c('code',[_vm._v(\"split\")]),_vm._v(\" 相关注意事项\")]),_c('p',[_c('code',[_vm._v(\"split\")]),_vm._v(\" 方法看起来不起眼，但要注意的地方有两个的。\")]),_c('p',[_vm._v(\"第一，它可以有第二个参数，表示结果数组的最大长度：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"html,css,javascript\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"split\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/,/\")]),_vm._v(\", \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// =>[\\\"html\\\", \\\"css\\\"]\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"第二，正则使用分组时，结果数组中是包含分隔符的：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"html,css,javascript\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"split\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/(,)/\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// =>[\\\"html\\\", \\\",\\\", \\\"css\\\", \\\",\\\", \\\"javascript\\\"]\")]),_vm._v(\"\\n\")])]),_c('h4',[_vm._v(\"7.2.7. replace 是很强大的\")]),_c('p',[_vm._v(\"总体来说 \"),_c('code',[_vm._v(\"replace\")]),_vm._v(\" 有两种使用形式，这是因为它的第二个参数，可以是\"),_c('strong',[_vm._v(\"字符串\")]),_vm._v(\"，也可以是\"),_c('strong',[_vm._v(\"函数\")]),_vm._v(\"。\")]),_c('p',[_vm._v(\"当第二个参数是字符串时，如下的字符有特殊的含义：\")]),_c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"属性\")]),_c('th',[_vm._v(\"描述\")])])]),_c('tbody',[_c('tr',[_c('td',[_c('code',[_vm._v(\"$1,$2,…,$99\")])]),_c('td',[_vm._v(\"匹配第 \"),_c('code',[_vm._v(\"1-99\")]),_vm._v(\" 个 分组里捕获的文本\")])]),_c('tr',[_c('td',[_c('code',[_vm._v(\"$&\")])]),_c('td',[_vm._v(\"匹配到的子串文本\")])]),_c('tr',[_c('td',[_c('code',[_vm._v(\" $\")]),_vm._v(\" `\")]),_c('td',[_vm._v(\"匹配到的子串的左边文本\")])]),_c('tr',[_c('td',[_c('code',[_vm._v(\"$'\")])]),_c('td',[_vm._v(\"匹配到的子串的右边文本\")])]),_c('tr',[_c('td',[_c('code',[_vm._v(\"$$\")])]),_c('td',[_vm._v(\"美元符号\")])])])]),_c('p',[_vm._v(\"例如，把 \"),_c('code',[_vm._v(\"\\\"2,3,5\\\"\")]),_vm._v(\"，变成 \"),_c('code',[_vm._v(\"\\\"5=2+3\\\"\")]),_vm._v(\"：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" result = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"2,3,5\\\"\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"replace\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/(\\\\d+),(\\\\d+),(\\\\d+)/\")]),_vm._v(\", \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"$3=$1+$2\\\"\")]),_vm._v(\");\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"(result);\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => \\\"5=2+3\\\"\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"又例如，把 \"),_c('code',[_vm._v(\"\\\"2,3,5\\\"\")]),_vm._v(\"，变成 \"),_c('code',[_vm._v(\"\\\"222,333,555\\\"\")]),_vm._v(\":\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" result = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"2,3,5\\\"\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"replace\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/(\\\\d+)/g\")]),_vm._v(\", \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"$&$&$&\\\"\")]),_vm._v(\");\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"(result);\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => \\\"222,333,555\\\"\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"再例如，把 \"),_c('code',[_vm._v(\"\\\"2+3=5\\\"\")]),_vm._v(\"，变成 \"),_c('code',[_vm._v(\"\\\"2+3=2+3=5=5\\\"\")]),_vm._v(\":\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" result = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"2+3=5\\\"\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"replace\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/=/\")]),_vm._v(\", \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"$&$`$&$'$&\\\"\")]),_vm._v(\");\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"(result);\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => \\\"2+3=2+3=5=5\\\"\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"我们对最后这个进行一下说明。要把 \"),_c('code',[_vm._v(\"\\\"2+3=5\\\"\")]),_vm._v(\"，变成 \"),_c('code',[_vm._v(\"\\\"2+3=2+3=5=5\\\"\")]),_vm._v(\"，其实就是想办法把 \"),_c('code',[_vm._v(\"=\")]),_vm._v(\" 替换成 \"),_c('code',[_vm._v(\"=2+3=5=\")]),_vm._v(\"，其中，\"),_c('code',[_vm._v(\"$&\")]),_vm._v(\" 匹配的是 \"),_c('code',[_vm._v(\"=\")]),_vm._v(\"，\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_vm._v(\"$` 匹配的是 2+3，\\n\")])]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_vm._v(\"$' 匹配的是 5。\\n\")])]),_c('p',[_vm._v(\"因此使用\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_vm._v(\"\\\"$&$`$&$'$&\\\"\\n\")])]),_c('p',[_vm._v(\"便达成了目的。\")]),_c('p',[_vm._v(\"当第二个参数是函数时，我们需要注意该回调函数的参数具体是什么：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"1234 2345 3456\\\"\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"replace\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/(\\\\d)\\\\d{2}(\\\\d)/g\")]),_vm._v(\", \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"function\")]),_vm._v(\" (\"),_c('span',{staticClass:\"hljs-params\"},[_vm._v(\"match, $\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1\")]),_vm._v(\", $\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2\")]),_vm._v(\", index, input\")]),_vm._v(\") {\\n  \"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"([match, $\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1\")]),_vm._v(\", $\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2\")]),_vm._v(\", index, input]);\\n});\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"1234\\\", \\\"1\\\", \\\"4\\\", 0, \\\"1234 2345 3456\\\"]\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"2345\\\", \\\"2\\\", \\\"5\\\", 5, \\\"1234 2345 3456\\\"]\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"3456\\\", \\\"3\\\", \\\"6\\\", 10, \\\"1234 2345 3456\\\"]\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"此时我们可以看到 \"),_c('code',[_vm._v(\"replace\")]),_vm._v(\" 拿到的信息，并不比 \"),_c('code',[_vm._v(\"exec\")]),_vm._v(\" 少\")]),_c('h4',[_vm._v(\"7.2.8. 使用构造函数需要注意的问题\")]),_c('p',[_vm._v(\"一般不推荐使用构造函数生成正则，而应该优先使用字面量。因为用构造函数会多写很多 \"),_c('code',[_vm._v(\"\\\\\")]),_vm._v(\"。\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"2017-06-27 2017.06.27 2017/06/27\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/\\\\d{4}(-|\\\\.|\\\\/)\\\\d{2}\\\\1\\\\d{2}/g\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"match\")]),_vm._v(\"(regex) );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"2017-06-27\\\", \\\"2017.06.27\\\", \\\"2017/06/27\\\"]\")]),_vm._v(\"\\nregex = \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"RegExp\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"\\\\\\\\d{4}(-|\\\\\\\\.|\\\\\\\\/)\\\\\\\\d{2}\\\\\\\\1\\\\\\\\d{2}\\\"\")]),_vm._v(\", \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"g\\\"\")]),_vm._v(\");\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( string.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"match\")]),_vm._v(\"(regex) );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => [\\\"2017-06-27\\\", \\\"2017.06.27\\\", \\\"2017/06/27\\\"]\")]),_vm._v(\"\\n\")])]),_c('h4',[_vm._v(\"7.2.9. 修饰符\")]),_c('p',[_vm._v(\"ES5 中修饰符，共 3 个：\")]),_c('table',[_c('thead',[_c('tr',[_c('th',[_vm._v(\"修饰符\")]),_c('th',[_vm._v(\"描述\")])])]),_c('tbody',[_c('tr',[_c('td',[_c('code',[_vm._v(\"g\")])]),_c('td',[_vm._v(\"全局匹配，即找到所有匹配的，单词是 \"),_c('code',[_vm._v(\"global。\")])])]),_c('tr',[_c('td',[_c('code',[_vm._v(\"i\")])]),_c('td',[_vm._v(\"忽略字母大小写，单词是 \"),_c('code',[_vm._v(\"ingoreCase。\")])])]),_c('tr',[_c('td',[_c('code',[_vm._v(\"m\")])]),_c('td',[_vm._v(\"多行匹配，只影响 \"),_c('code',[_vm._v(\"^\")]),_vm._v(\" 和 \"),_c('code',[_vm._v(\"$\")]),_vm._v(\"，二者变成行的概念，即行开头和行结尾。单词是 \"),_c('code',[_vm._v(\"multiline。\")])])])])]),_c('p',[_vm._v(\"当然正则对象也有相应的只读属性：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/\\\\w/img\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"global\")]),_vm._v(\" );\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"ignoreCase\")]),_vm._v(\" );\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"multiline\")]),_vm._v(\" );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => true\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => true\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => true\")]),_vm._v(\"\\n\")])]),_c('h4',[_vm._v(\"7.2.10. source 属性\")]),_c('p',[_vm._v(\"正则实例对象属性，除了 \"),_c('code',[_vm._v(\"global、ingnoreCase、multiline、lastIndex\")]),_vm._v(\" 属性之外，还有一个 \"),_c('code',[_vm._v(\"source\")]),_vm._v(\"属性。\")]),_c('p',[_vm._v(\"它什么时候有用呢？\")]),_c('p',[_vm._v(\"比如，在构建动态的正则表达式时，可以通过查看该属性，来确认构建出的正则到底是什么：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" className = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"high\\\"\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"RegExp\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"(^|\\\\\\\\s)\\\"\")]),_vm._v(\" + className + \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"(\\\\\\\\s|$)\\\"\")]),_vm._v(\");\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( regex.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"source\")]),_vm._v(\" )\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => (^|\\\\s)high(\\\\s|$) 即字符串\\\"(^|\\\\\\\\s)high(\\\\\\\\s|$)\\\"\")]),_vm._v(\"\\n\")])]),_c('h4',[_vm._v(\"7.2.11. 构造函数属性\")]),_c('p',[_vm._v(\"构造函数的静态属性基于所执行的最近一次正则操作而变化。除了是 \"),_c('code',[_vm._v(\"$1,…,$9\")]),_vm._v(\" 之外，还有几个不太常用的属性（有兼容性问题）：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_vm._v(\"| 静态属性              | 描述                            | 简写形式     |\\n| --------------------- | ------------------------------- | ------------ |\\n| \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"`RegExp.input`\")]),_vm._v(\"        | 最近一次目标字符串              | \"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"RegExp\")]),_vm._v(\"[\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"$_\\\"\")]),_vm._v(\"] |\\n| \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"`RegExp.lastMatch`\")]),_vm._v(\"    | 最近一次匹配的文本              | \"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"RegExp\")]),_vm._v(\"[\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"$&\\\"\")]),_vm._v(\"] |\\n| \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"`RegExp.lastParen`\")]),_vm._v(\"    | 最近一次捕获的文本              | \"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"RegExp\")]),_vm._v(\"[\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"$+\\\"\")]),_vm._v(\"] |\\n| \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"`RegExp.leftContext`\")]),_vm._v(\"  | 目标字符串中lastMatch之前的文本 | \"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"RegExp\")]),_vm._v(\"[\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"$`\\\"\")]),_vm._v(\"] |\\n| \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"`RegExp.rightContext`\")]),_vm._v(\" | 目标字符串中lastMatch之后的文本 | \"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"RegExp\")]),_vm._v(\"[\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"$'\\\"\")]),_vm._v(\"] |\\n\")])]),_c('p',[_vm._v(\"测试代码如下：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/([abc])(\\\\d)/g\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" string = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"a1b2c3d4e5\\\"\")]),_vm._v(\";\\nstring.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"match\")]),_vm._v(\"(regex);\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( \"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"RegExp\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"input\")]),_vm._v(\" );\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( \"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"RegExp\")]),_vm._v(\"[\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"$_\\\"\")]),_vm._v(\"]);\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => \\\"a1b2c3d4e5\\\"\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( \"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"RegExp\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"lastMatch\")]),_vm._v(\" );\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( \"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"RegExp\")]),_vm._v(\"[\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"$&\\\"\")]),_vm._v(\"] );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => \\\"c3\\\"\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( \"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"RegExp\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"lastParen\")]),_vm._v(\" );\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( \"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"RegExp\")]),_vm._v(\"[\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"$+\\\"\")]),_vm._v(\"] );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => \\\"3\\\"\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( \"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"RegExp\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"leftContext\")]),_vm._v(\" );\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( \"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"RegExp\")]),_vm._v(\"[\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"$`\\\"\")]),_vm._v(\"] );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => \\\"a1b2\\\"\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( \"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"RegExp\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"rightContext\")]),_vm._v(\" );\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( \"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"RegExp\")]),_vm._v(\"[\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"$'\\\"\")]),_vm._v(\"] );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => \\\"d4e5\\\"\")]),_vm._v(\"\\n\")])]),_c('h3',[_vm._v(\"7.3. 真实案例\")]),_c('h4',[_vm._v(\"7.3.1. 使用构造函数生成正则表达式\")]),_c('p',[_vm._v(\"我们知道要优先使用字面量来创建正则，但有时正则表达式的主体是不确定的，此时可以使用构造函数来创建。\")]),_c('p',[_vm._v(\"模拟 \"),_c('code',[_vm._v(\"getElementsByClassName\")]),_vm._v(\" 方法，就是很能说明该问题的一个例子。\")]),_c('p',[_vm._v(\"这里 \"),_c('code',[_vm._v(\"getElementsByClassName\")]),_vm._v(\" 函数的实现思路是：\")]),_c('p',[_vm._v(\"比如要获取 \"),_c('code',[_vm._v(\"className\")]),_vm._v(\" 为 \"),_c('code',[_vm._v(\"\\\"high\\\"\")]),_vm._v(\" 的 \"),_c('code',[_vm._v(\"dom\")]),_vm._v(\" 元素；\")]),_c('p',[_vm._v(\"首先生成一个正则：\"),_c('code',[_vm._v(\"/(^|\\\\s)high(\\\\s|$)/\")]),_vm._v(\",\")]),_c('p',[_vm._v(\"然后再用其逐一验证页面上的所有\"),_c('code',[_vm._v(\"dom\")]),_vm._v(\"元素的类名，拿到满足匹配的元素即可。\")]),_c('p',[_vm._v(\"代码如下(可以直接复制到本地查看运行效果)\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_vm._v(\"<p \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"class\")]),_vm._v(\"=\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"high\\\"\")]),_vm._v(\">\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1111\")]),_vm._v(\"</p>\\n\"),_c('span',{staticClass:\"language-xml\"},[_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"<\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"p\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"class\")]),_vm._v(\"=\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"high\\\"\")]),_vm._v(\">\")]),_vm._v(\"2222\"),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"</\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"p\")]),_vm._v(\">\")])]),_vm._v(\"\\n\"),_c('span',{staticClass:\"language-xml\"},[_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"<\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"p\")]),_vm._v(\">\")]),_vm._v(\"3333\"),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"</\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"p\")]),_vm._v(\">\")])]),_vm._v(\"\\n\"),_c('span',{staticClass:\"language-xml\"},[_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"<\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"script\")]),_vm._v(\">\")]),_c('span',{staticClass:\"language-javascript\"},[_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"function\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"getElementsByClassName\")]),_vm._v(\" (className) {\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" elements = \"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"document\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"getElementsByTagName\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"*\\\"\")]),_vm._v(\");\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"RegExp\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"(^|\\\\\\\\s)\\\"\")]),_vm._v(\" + className + \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"(\\\\\\\\s|$)\\\"\")]),_vm._v(\");\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" result = [];\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"for\")]),_vm._v(\" (\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" i = \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\"; i < elements.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"length\")]),_vm._v(\"; i++) {\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" element = elements[i];\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"if\")]),_vm._v(\" (regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(element.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"className\")]),_vm._v(\")) {\\n  result.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"push\")]),_vm._v(\"(element)\\n  }\\n  }\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"return\")]),_vm._v(\" result; }\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" highs = \"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"getElementsByClassName\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'high'\")]),_vm._v(\");\\nhighs.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"forEach\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"function\")]),_vm._v(\" (\"),_c('span',{staticClass:\"hljs-params\"},[_vm._v(\"item\")]),_vm._v(\") {\\n  item.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"style\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"color\")]),_vm._v(\" = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'red'\")]),_vm._v(\";\\n});\\n\")]),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"</\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"script\")]),_vm._v(\">\")])]),_vm._v(\"\\n\")])]),_c('h4',[_vm._v(\"7.3.2. 使用字符串保存数据\")]),_c('p',[_vm._v(\"一般情况下，我们都愿意使用数组来保存数据。但我看到有的框架中，使用的却是字符串。\")]),_c('p',[_vm._v(\"使用时，仍需要把字符串切分成数组。虽然不一定用到正则，但总感觉酷酷的，这里分享如下：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" utils = {}; \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"Boolean|Number|String|Function|Array|Date|RegExp|Object|Error\\\"\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"split\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"|\\\"\")]),_vm._v(\").\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"forEach\")]),_vm._v(\"(fun\\nction (item) {\\n  utils[\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"is\\\"\")]),_vm._v(\" + item] = \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"function\")]),_vm._v(\" (\"),_c('span',{staticClass:\"hljs-params\"},[_vm._v(\"obj\")]),_vm._v(\") {\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"return\")]),_vm._v(\" {}.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"toString\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"call\")]),_vm._v(\"(obj) == \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"[object \\\"\")]),_vm._v(\" + item + \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"]\\\"\")]),_vm._v(\";\\n  };\\n});\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( utils.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"isArray\")]),_vm._v(\"([\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1\")]),_vm._v(\", \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2\")]),_vm._v(\", \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"3\")]),_vm._v(\"]) );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => true\")]),_vm._v(\"\\n\")])]),_c('h4',[_vm._v(\"7.3.3. \"),_c('code',[_vm._v(\"if\")]),_vm._v(\" 语句中使用正则替代 \"),_c('code',[_vm._v(\"&&\")])]),_c('p',[_vm._v(\"比如，模拟 \"),_c('code',[_vm._v(\"ready\")]),_vm._v(\" 函数，即加载完毕后再执行回调（不兼容 \"),_c('code',[_vm._v(\"IE\")]),_vm._v(\" 的）：\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" readyRE = \"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/complete|loaded|interactive/\")]),_vm._v(\";\\n\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"function\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"ready\")]),_vm._v(\" (callback) {\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"if\")]),_vm._v(\" (readyRE.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"test\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"document\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"readyState\")]),_vm._v(\") && \"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"document\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"body\")]),_vm._v(\") {\\n  \"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"callback\")]),_vm._v(\"()\\n  }\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"else\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"document\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"addEventListener\")]),_vm._v(\"(\\n  \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'DOMContentLoaded'\")]),_vm._v(\",\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"function\")]),_vm._v(\" (\"),_c('span',{staticClass:\"hljs-params\"}),_vm._v(\") {\\n  \"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"callback\")]),_vm._v(\"()\\n  },\\n  \"),_c('span',{staticClass:\"hljs-literal\"},[_vm._v(\"false\")]),_vm._v(\"\\n  );\\n  } };\\n\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"ready\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"function\")]),_vm._v(\" (\"),_c('span',{staticClass:\"hljs-params\"}),_vm._v(\") {\\n  \"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"alert\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"加载完毕！\\\"\")]),_vm._v(\")\\n});\\n\")])]),_c('h4',[_vm._v(\"7.3.4. 使用强大的 \"),_c('code',[_vm._v(\"replace\")])]),_c('p',[_vm._v(\"因为 \"),_c('code',[_vm._v(\"replace\")]),_vm._v(\" 方法比较强大，有时用它根本不是为了替换，只是拿其匹配到的信息来做文章。\")]),_c('p',[_vm._v(\"这里以查询字符串（\"),_c('code',[_vm._v(\"querystring\")]),_vm._v(\"）压缩技术为例，注意下面 \"),_c('code',[_vm._v(\"replace\")]),_vm._v(\" 方法中，回调函数根本没有返回任何东西。\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"function\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"compress\")]),_vm._v(\" (source) {\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" keys = {};\\n  source.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"replace\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-regexp\"},[_vm._v(\"/([^=&]+)=([^&]*)/g\")]),_vm._v(\", \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"function\")]),_vm._v(\" (\"),_c('span',{staticClass:\"hljs-params\"},[_vm._v(\"full, key, value\")]),_vm._v(\") {\\n  keys[key] = (keys[key] ? keys[key] + \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"','\")]),_vm._v(\" : \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"''\")]),_vm._v(\") + value;\\n  });\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" result = [];\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"for\")]),_vm._v(\" (\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" key \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"in\")]),_vm._v(\" keys) {\\n  result.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"push\")]),_vm._v(\"(key + \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'='\")]),_vm._v(\" + keys[key]);\\n  }\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"return\")]),_vm._v(\" result.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"join\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'&'\")]),_vm._v(\"); }\\n\"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"console\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"log\")]),_vm._v(\"( \"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"compress\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"a=1&b=2&a=3&b=4\\\"\")]),_vm._v(\") );\\n\"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// => \\\"a=1,3&b=2,4\\\"\")]),_vm._v(\"\\n\")])]),_c('h4',[_vm._v(\"7.3.5. 综合运用\")]),_c('p',[_vm._v(\"最后这里再做个简单实用的正则测试器\")]),_c('pre',{staticClass:\"hljs\"},[_c('code',[_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"<\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"section\")]),_vm._v(\">\")]),_vm._v(\"\\n  \"),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"<\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"div\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"id\")]),_vm._v(\"=\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"err\\\"\")]),_vm._v(\">\")]),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"</\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"div\")]),_vm._v(\">\")]),_vm._v(\"\\n  \"),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"<\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"input\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"id\")]),_vm._v(\"=\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"regex\\\"\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"placeholder\")]),_vm._v(\"=\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"请输入正则表达式\\\"\")]),_vm._v(\">\")]),_vm._v(\"\\n  \"),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"<\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"input\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"id\")]),_vm._v(\"=\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"text\\\"\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"placeholder\")]),_vm._v(\"=\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"请输入测试文本\\\"\")]),_vm._v(\">\")]),_vm._v(\"\\n  \"),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"<\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"button\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"id\")]),_vm._v(\"=\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"run\\\"\")]),_vm._v(\">\")]),_vm._v(\"测试一下\"),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"</\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"button\")]),_vm._v(\">\")]),_vm._v(\"\\n  \"),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"<\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"div\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-attr\"},[_vm._v(\"id\")]),_vm._v(\"=\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"result\\\"\")]),_vm._v(\">\")]),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"</\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"div\")]),_vm._v(\">\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"</\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"section\")]),_vm._v(\">\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"<\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"style\")]),_vm._v(\">\")]),_c('span',{staticClass:\"language-css\"},[_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-selector-tag\"},[_vm._v(\"section\")]),_vm._v(\"{\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"display\")]),_vm._v(\":flex;\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"flex-direction\")]),_vm._v(\":column;\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"justify-content\")]),_vm._v(\":space-around;\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"height\")]),_vm._v(\":\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"300px\")]),_vm._v(\";\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"padding\")]),_vm._v(\":\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"200px\")]),_vm._v(\"; }\\n\"),_c('span',{staticClass:\"hljs-selector-tag\"},[_vm._v(\"section\")]),_vm._v(\" *{\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"min-height\")]),_vm._v(\":\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"30px\")]),_vm._v(\"; }\\n\"),_c('span',{staticClass:\"hljs-selector-id\"},[_vm._v(\"#err\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"color\")]),_vm._v(\":red;\\n}\\n\"),_c('span',{staticClass:\"hljs-selector-id\"},[_vm._v(\"#result\")]),_vm._v(\"{\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"line-height\")]),_vm._v(\":\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"30px\")]),_vm._v(\"; }\\n\"),_c('span',{staticClass:\"hljs-selector-class\"},[_vm._v(\".info\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"background\")]),_vm._v(\":\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"#00c5ff\")]),_vm._v(\";\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"padding\")]),_vm._v(\":\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2px\")]),_vm._v(\";\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"margin\")]),_vm._v(\":\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"2px\")]),_vm._v(\";\\n  \"),_c('span',{staticClass:\"hljs-attribute\"},[_vm._v(\"display\")]),_vm._v(\":inline-block; }\\n\")]),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"</\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"style\")]),_vm._v(\">\")]),_vm._v(\"\\n\"),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"<\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"script\")]),_vm._v(\">\")]),_c('span',{staticClass:\"language-javascript\"},[_vm._v(\"\\n(\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"function\")]),_vm._v(\" (\"),_c('span',{staticClass:\"hljs-params\"}),_vm._v(\") {\\n  \"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// 获取相应dom元素\")]),_vm._v(\"\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regexInput = \"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"document\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"getElementById\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"regex\\\"\")]),_vm._v(\");\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" textInput = \"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"document\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"getElementById\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"text\\\"\")]),_vm._v(\");\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" runBtn = \"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"document\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"getElementById\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"run\\\"\")]),_vm._v(\");\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" errBox = \"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"document\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"getElementById\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"err\\\"\")]),_vm._v(\");\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" resultBox = \"),_c('span',{staticClass:\"hljs-variable language_\"},[_vm._v(\"document\")]),_vm._v(\".\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"getElementById\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"result\\\"\")]),_vm._v(\");\\n  \"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// 绑定点击事件\")]),_vm._v(\"\\n  runBtn.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"onclick\")]),_vm._v(\" = \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"function\")]),_vm._v(\" (\"),_c('span',{staticClass:\"hljs-params\"}),_vm._v(\") {\\n  \"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// 清除错误和结果\")]),_vm._v(\"\\n  errBox.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"innerHTML\")]),_vm._v(\" = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"\\\"\")]),_vm._v(\";\\n  resultBox.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"innerHTML\")]),_vm._v(\" = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"\\\"\")]),_vm._v(\";\\n  \"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// 获取正则和文本\")]),_vm._v(\"\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" text = textInput.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"value\")]),_vm._v(\";\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" regex = regexInput.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"value\")]),_vm._v(\";\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"if\")]),_vm._v(\" (regex == \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"\\\"\")]),_vm._v(\") {\\n  errBox.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"innerHTML\")]),_vm._v(\" = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"请输入正则表达式\\\"\")]),_vm._v(\";\\n  } \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"else\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"if\")]),_vm._v(\" (text == \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"\\\"\")]),_vm._v(\") {\\n  errBox.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"innerHTML\")]),_vm._v(\" = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"请输入测试文本\\\"\")]),_vm._v(\";\\n  } \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"else\")]),_vm._v(\" {\\n  regex = \"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"createRegex\")]),_vm._v(\"(regex);\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"if\")]),_vm._v(\" (!regex) \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"return\")]),_vm._v(\";\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" result, results = [];\\n  \"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// 没有修饰符g的话，会死循环\")]),_vm._v(\"\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"if\")]),_vm._v(\" (regex.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"global\")]),_vm._v(\") {\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"while\")]),_vm._v(\"(result = regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"exec\")]),_vm._v(\"(text)) {\\n  results.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"push\")]),_vm._v(\"(result);\\n  }\\n  } \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"else\")]),_vm._v(\" {\\n  results.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"push\")]),_vm._v(\"(regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"exec\")]),_vm._v(\"(text));\\n  }\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"if\")]),_vm._v(\" (results[\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\"] == \"),_c('span',{staticClass:\"hljs-literal\"},[_vm._v(\"null\")]),_vm._v(\") {\\n  resultBox.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"innerHTML\")]),_vm._v(\" = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"匹配到0个结果\\\"\")]),_vm._v(\";\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"return\")]),_vm._v(\";\\n  }\\n  \"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// 倒序是有必要的\")]),_vm._v(\"\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"for\")]),_vm._v(\" (\"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" i = results.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"length\")]),_vm._v(\" - \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"1\")]),_vm._v(\"; i >= \"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\"; i--) {\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" result = results[i];\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" match = result[\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\"];\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" prefix = text.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"substr\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\", result.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"index\")]),_vm._v(\");\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" suffix = text.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"substr\")]),_vm._v(\"(result.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"index\")]),_vm._v(\" + match.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"length\")]),_vm._v(\");\\n  text = prefix\\n  + \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'<span class=\\\"info\\\">'\")]),_vm._v(\"\\n  + match\\n  + \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"'</span>'\")]),_vm._v(\"\\n  + suffix;\\n  }\\n  resultBox.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"innerHTML\")]),_vm._v(\" = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"匹配到\\\"\")]),_vm._v(\" + results.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"length\")]),_vm._v(\" + \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"个结果:<br>\\\"\")]),_vm._v(\" + text;\\n  }\\n  };\\n  \"),_c('span',{staticClass:\"hljs-comment\"},[_vm._v(\"// 生成正则表达式，核心函数\")]),_vm._v(\"\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"function\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"createRegex\")]),_vm._v(\" (regex) {\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"try\")]),_vm._v(\" {\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"if\")]),_vm._v(\" (regex[\"),_c('span',{staticClass:\"hljs-number\"},[_vm._v(\"0\")]),_vm._v(\"] == \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"/\\\"\")]),_vm._v(\") {\\n  regex = regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"split\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"/\\\"\")]),_vm._v(\");\\n  regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"shift\")]),_vm._v(\"();\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"var\")]),_vm._v(\" flags = regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"pop\")]),_vm._v(\"();\\n  regex = regex.\"),_c('span',{staticClass:\"hljs-title function_\"},[_vm._v(\"join\")]),_vm._v(\"(\"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"/\\\"\")]),_vm._v(\");\\n  regex = \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"RegExp\")]),_vm._v(\"(regex, flags);\\n  } \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"else\")]),_vm._v(\" {\\n  regex = \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-title class_\"},[_vm._v(\"RegExp\")]),_vm._v(\"(regex, \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"g\\\"\")]),_vm._v(\");\\n  }\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"return\")]),_vm._v(\" regex;\\n  } \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"catch\")]),_vm._v(\"(e) {\\n  errBox.\"),_c('span',{staticClass:\"hljs-property\"},[_vm._v(\"innerHTML\")]),_vm._v(\" = \"),_c('span',{staticClass:\"hljs-string\"},[_vm._v(\"\\\"无效的正则表达式\\\"\")]),_vm._v(\";\\n  \"),_c('span',{staticClass:\"hljs-keyword\"},[_vm._v(\"return\")]),_vm._v(\" \"),_c('span',{staticClass:\"hljs-literal\"},[_vm._v(\"false\")]),_vm._v(\";\\n  }\\n  }\\n})();\\n\")]),_c('span',{staticClass:\"hljs-tag\"},[_vm._v(\"</\"),_c('span',{staticClass:\"hljs-name\"},[_vm._v(\"script\")]),_vm._v(\">\")]),_vm._v(\"\\n\")])]),_c('p',[_vm._v(\"完！！！\")])])}]\n\nexport { render, staticRenderFns }","\n        <template>\n          <div class=\"vc-snippet-doc\">\n            <h1>JavaScript 正则表达式迷你书</h1>\n<p><code>javascript-regular-expressions-mini-book</code></p>\n<p>笔记：感谢这本📕的作者</p>\n<p>正则表达式是<strong>匹配模式</strong>，要么<strong>匹配字符</strong>，要么<strong>匹配位置</strong></p>\n<p>对于位置的理解，我们可以理解成<strong>空字符</strong></p>\n<p>第一章 正则表达式<strong>字符匹配</strong>攻略</p>\n<p>第二章 正则表达式<strong>位置匹配</strong>攻略</p>\n<p>第三章 正则表达式<strong>括号的作用</strong></p>\n<p>第四章 正则表达式<strong>回溯法原理</strong></p>\n<p>第五章 正则表达式的<strong>拆分</strong></p>\n<p>第六章 正则表达式的<strong>构建</strong></p>\n<p>第七章 正则表达式<strong>编程</strong></p>\n<h3>每一章都讨论了什么？</h3>\n<blockquote>\n<p>正则是<strong>匹配模式</strong>，要么<strong>匹配字符</strong>，要么<strong>匹配位置</strong>。</p>\n</blockquote>\n<p>第一章和第二章以这个角度去讲解了正则表达式的基础。</p>\n<blockquote>\n<p>在正则可以<strong>使用括号捕获数据</strong>，要么在 <code>API</code> 中进行<strong>分组引用</strong>，要么在正则里进行<strong>反向引用</strong>。</p>\n</blockquote>\n<p>第三章的主题，讲解了正则表达式中<strong>括号的作用</strong>。</p>\n<blockquote>\n<p>学习正则，是需要了解其匹配原理的。</p>\n</blockquote>\n<p>第四章，讲解了正则表达式的<strong>回溯法原理</strong>。</p>\n<p>第五章，是从读的角度，去<strong>拆分一个正则表达式</strong>，而第六章是从写的角度，去<strong>构建一个正则表达式</strong>。</p>\n<p>第七章讲解了<strong>正则的用法</strong>，和相关 <code>API</code> 需要注意的地方。</p>\n<h2>第一章 正则表达式<strong>字符匹配</strong>攻略</h2>\n<blockquote>\n<p>正则表达式是<strong>匹配模式</strong>，要么<strong>匹配字符</strong>，要么<strong>匹配位置</strong>。</p>\n</blockquote>\n<p>元字符太多了，看起来没有系统性，不好记。</p>\n<p>内容包括：</p>\n<p><strong>两种模糊匹配</strong></p>\n<p><strong>字符组</strong></p>\n<p><strong>量词</strong></p>\n<p><strong>分支结构</strong></p>\n<p><strong>案例分析</strong></p>\n<h3>1.1. 两种模糊匹配</h3>\n<p>如果正则只有精确匹配是没多大意义的，比如 <code>/hello/</code>，也只能匹配字符串中的 <code>&quot;hello&quot;</code> 这个子串。</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/hello/</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;hello&quot;</span>) );\n<span class=\"hljs-comment\">// =&gt; true</span>\n</code></pre>\n<p>正则表达式之所以强大，是因为其能实现模糊匹配。 而模糊匹配，有两个方向上的“模糊”：横向模糊和纵向模糊。</p>\n<h4>1.1.1. 横向模糊匹配</h4>\n<p>横向模糊指的是，一个正则可匹配的字符串的长度不是固定的，可以是多种情况的。</p>\n<p>其实现的方式是<strong>使用量词</strong>。譬如 <code>{m,n}</code>，表示连续出现最少 <code>m</code> 次，最多 <code>n</code> 次。</p>\n<p>比如正则 <code>/ab{2,5}c/</code> 表示匹配这样一个字符串：第一个字符是 &quot;<code>a</code>&quot;，接下来是 <code>2</code> 到 <code>5</code> 个字符 &quot;<code>b</code>&quot;，最后\n是字符 &quot;<code>c</code>&quot;。</p>\n<p>测试如下：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/ab{2,5}c/g</span>;\n<span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;abc abbc abbbc abbbbc abbbbbc abbbbbbc&quot;</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( string.<span class=\"hljs-title function_\">match</span>(regex) );\n<span class=\"hljs-comment\">// =&gt; [&quot;abbc&quot;, &quot;abbbc&quot;, &quot;abbbbc&quot;, &quot;abbbbbc&quot;]</span>\n</code></pre>\n<blockquote>\n<p>NOTE</p>\n</blockquote>\n<div class=\"tip\">\n<p>案例中用的正则是 <code>/ab{2,5}c/g</code>，其中 <code>g</code> 是正则的一个修饰符。表示全局匹配，即，在目 标字符串中按顺序找到满足匹配模式的所有子串，强调的是“所有”，而不只是“第一个” <code>。g</code> 是单词 <code>global</code> 的首字母。</p>\n</div>\n<h4>1.1.2. 纵向模糊匹配</h4>\n<p>纵向模糊指的是，一个正则匹配的字符串，具体到某一位字符时，它可以不是某个确定的字符，可以有多种可能。</p>\n<div class=\"warning\">\n<p>其实现的方式是使用<strong>字符组</strong>。</p>\n</div>\n<p>譬如 <code>[abc]</code>，表示该字符是可以字符 <code>&quot;a&quot;、&quot;b&quot;、&quot;c&quot;</code> 中的任何一个。\n比如 <code>/a[123]b/</code> 可以匹配如下三种字符串： <code>&quot;a1b&quot;、&quot;a2b&quot;、&quot;a3b&quot;</code></p>\n<p>测试如下：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/a[123]b/g</span>;\n<span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;a0b a1b a2b a3b a4b&quot;</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( string.<span class=\"hljs-title function_\">match</span>(regex) );\n<span class=\"hljs-comment\">// =&gt; [&quot;a1b&quot;, &quot;a2b&quot;, &quot;a3b&quot;]</span>\n</code></pre>\n<p>以上就是本章讲的主体内容，只要掌握横向和纵向模糊匹配，就能解决很大部分正则匹配问题。</p>\n<h3>1.2. 字符组</h3>\n<p>需要强调的是，虽叫<strong>字符组</strong>（字符类），但只是其中一个字符。 例如 <code>[abc]</code>，表示匹配一个字符，它可以是 <code>&quot;a&quot;、&quot;b&quot;、&quot;c&quot;</code> 之一。</p>\n<h4>1.2.1. 范围表示法</h4>\n<p>如果字符组里的字符特别多的话，怎么办？可以使用范围表示法。</p>\n<p>比如 <code>[123456abcdefGHIJKLM]</code>，可以写成 <code>[1-6a-fG-M]</code>。用连字符 - 来省略和简写。</p>\n<p>因为连字符有特殊用途，那么要匹配 <code>&quot;a&quot;、&quot;-&quot;、&quot;z&quot;</code> 这三者中任意一个字符，该怎么做呢？</p>\n<p>不能写成 <code>[a-z]</code>，因为其表示小写字符中的任何一个字符。</p>\n<p>可以写成如下的方式：<code>[-az]</code> 或 <code>[az-] 或 [a\\-z]</code>。 即要么放在开头，要么放在结尾，要么转义。总之不会让引擎认为是范围表示法就行了。</p>\n<h4>1.2.2. 排除字符组</h4>\n<p>纵向模糊匹配，还有一种情形就是，某位字符可以是任何东西，但就不能是 <code>&quot;a&quot;、&quot;b&quot;、&quot;c&quot;</code>。</p>\n<p>此时就是<strong>排除字符组</strong>（反义字符组）的概念。例如 <code>[^abc]</code>，表示是一个除 <code>&quot;a&quot;、&quot;b&quot;、&quot;c&quot;</code>之外的任意一个字 符。字符组的第一位放 <code>^</code>（<strong>脱字符</strong>），表示求反的概念。</p>\n<p>当然，也有相应的范围表示法。</p>\n<h4>1.2.3. 常见的简写形式</h4>\n<p>有了字符组的概念后，一些常见的符号我们也就理解了。因为它们都是系统自带的简写形式。</p>\n<table>\n<thead>\n<tr>\n<th>字符组</th>\n<th>具体含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>\\d</code></td>\n<td>表示 <code>[0-9]</code>。表示是<strong>一位数字</strong>。 记忆方式：其英文是 <code>digit（数字）。</code></td>\n</tr>\n<tr>\n<td><code>\\D</code></td>\n<td>表示 <code>[^0-9]</code>。表示<strong>除数字外的任意字</strong>符。</td>\n</tr>\n<tr>\n<td><code>\\w</code></td>\n<td>表示 <code>[0-9a-zA-Z_]</code>。表示<strong>数字、大小写字母和下划线</strong>。 记忆方式：<code>w</code> 是 <code>word</code> 的简写，也称<strong>单词字符</strong>。</td>\n</tr>\n<tr>\n<td><code>\\W</code></td>\n<td>表示 <code>[^0-9a-zA-Z_]</code>。<strong>非单词字符</strong>。</td>\n</tr>\n<tr>\n<td><code>\\s</code></td>\n<td>表示 <code>[ \\t\\v\\n\\r\\f]</code>。表示<strong>空白符</strong>，包括<strong>空格、水平制表符、垂直制表符、换行符、回车符、换页符</strong>。记忆方式：<code>s</code> 是 <code>space</code> 的首字母，空白符的单词是 <code>white space</code>。</td>\n</tr>\n<tr>\n<td><code>\\S</code></td>\n<td>表示 <code>[^ \\t\\v\\n\\r\\f]</code>。 <strong>非空白符</strong>。</td>\n</tr>\n<tr>\n<td><code>.</code></td>\n<td>表示 <code>[^\\n\\r\\u2028\\u2029]</code>。通配符，表示几乎任意字符。<strong>换行符、回车符、行分隔符和段分隔符除外</strong>。 记忆方式：想想省略号 <code>…</code> 中的每个点，都可以理解成占位符，表示任何类似的东西。</td>\n</tr>\n</tbody>\n</table>\n<p>如果要匹配任意字符怎么办？可以使用 <code>[\\d\\D]、[\\w\\W]、[\\s\\S] 和 [^]</code> 中任何的一个。</p>\n<h3>1.3. 量词</h3>\n<p>量词也称重复。掌握 <code>{m,n}</code> 的准确含义后，只需要记住一些简写形式。</p>\n<h4>1.3.1. 简写形式</h4>\n<table>\n<thead>\n<tr>\n<th>量词</th>\n<th>具体含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>{m,}</code></td>\n<td>表示至少出现 <code>m</code> 次。</td>\n</tr>\n<tr>\n<td><code>{m}</code></td>\n<td>等价于 <code>{m,m}</code>，表示出现 <code>m</code> 次。</td>\n</tr>\n<tr>\n<td><code>?</code></td>\n<td>等价于 <code>{0,1}</code>，表示<strong>出现或者不出现</strong>。记忆方式：问号的意思表示，有吗？</td>\n</tr>\n<tr>\n<td><code>+</code></td>\n<td>等价于 <code>{1,}</code>，表示<strong>出现至少一次</strong>。 记忆方式：加号是追加的意思，得先有一个，然后才考虑追加。</td>\n</tr>\n<tr>\n<td><code>*</code></td>\n<td>等价于 <code>{0,}</code>，表示<strong>出现任意次</strong>，有可能不出现。记忆方式：看看天上的星星，可能一颗没有，可能零散有几颗，可能数也数不过来。</td>\n</tr>\n</tbody>\n</table>\n<h4>1.3.2. 贪婪匹配与惰性匹配</h4>\n<p>看如下的例子：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/\\d{2,5}/g</span>;\n<span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;123 1234 12345 123456&quot;</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( string.<span class=\"hljs-title function_\">match</span>(regex) );\n<span class=\"hljs-comment\">// =&gt; [&quot;123&quot;, &quot;1234&quot;, &quot;12345&quot;, &quot;12345&quot;]</span>\n</code></pre>\n<p>其中正则 <code>/\\d{2,5}/</code>，表示数字连续出现 <code>2</code> 到 <code>5</code> 次。会匹配 <code>2 位、3 位、4 位、5 位</code>连续数字。</p>\n<p>但是其是贪婪的，它会尽可能多的匹配。你能给我 <code>6</code> 个，我就要 <code>5</code> 个。你能给我 <code>3</code> 个，我就要 <code>3</code> 个。</p>\n<p>反正只要在能力范围内，越多越好。 我们知道有时贪婪不是一件好事。而惰性匹配，就是尽可能少的匹配：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/\\d{2,5}?/g</span>;\n<span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;123 1234 12345 123456&quot;</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( string.<span class=\"hljs-title function_\">match</span>(regex) );\n<span class=\"hljs-comment\">// =&gt; [&quot;12&quot;, &quot;12&quot;, &quot;34&quot;, &quot;12&quot;, &quot;34&quot;, &quot;12&quot;, &quot;34&quot;, &quot;56&quot;]</span>\n</code></pre>\n<p>其中 <code>/\\d{2,5}?/</code> 表示，虽然 2 到 5 次都行，当 2 个就够的时候，就不再往下尝试了。</p>\n<p>通过在量词后面加个问号就能实现惰性匹配，因此所有惰性匹配情形如下：</p>\n<table>\n<thead>\n<tr>\n<th>惰性量词</th>\n<th>贪婪量词</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>{m,n}?</code></td>\n<td><code>{m,n}</code></td>\n</tr>\n<tr>\n<td><code>{m,}?</code></td>\n<td><code>{m,}</code></td>\n</tr>\n<tr>\n<td><code>??</code></td>\n<td><code>?</code></td>\n</tr>\n<tr>\n<td><code>+?</code></td>\n<td><code>+</code></td>\n</tr>\n<tr>\n<td><code>*?</code></td>\n<td><code>*</code></td>\n</tr>\n</tbody>\n</table>\n<div class=\"tip\">\n<p>TIP 对惰性匹配的记忆方式是：量词后面加个问号，问一问你知足了吗，你很贪婪吗？</p>\n</div>\n<h3>1.4. 多选分支</h3>\n<p>一个模式可以实现横向和纵向模糊匹配。而多选分支可以支持多个子模式任选其一。</p>\n<p>具体形式如下：<code>(p1|p2|p3)</code>，其中 <code>p1、p2 和 p3</code> 是子模式，用 <code>|</code>（管道符）分隔，表示其中任何之一。</p>\n<p>例如要匹配字符串 &quot;<code>good</code>&quot; 和 &quot;<code>nice</code>&quot; 可以使用 <code>/good|nice/</code>。</p>\n<p>测试如下：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/good|nice/g</span>;\n<span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;good idea, nice try.&quot;</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( string.<span class=\"hljs-title function_\">match</span>(regex) );\n<span class=\"hljs-comment\">// =&gt; [&quot;good&quot;, &quot;nice&quot;]</span>\n</code></pre>\n<p>但有个事实我们应该注意，比如我用 <code>/good|goodbye/</code>，去匹配 <code>&quot;goodbye&quot;</code> 字符串时，结果是 <code>&quot;good&quot;</code>：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/good|goodbye/g</span>;\n<span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;goodbye&quot;</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( string.<span class=\"hljs-title function_\">match</span>(regex) );\n<span class=\"hljs-comment\">// =&gt; [&quot;good&quot;]</span>\n</code></pre>\n<p>而把正则改成 <code>/goodbye|good/</code>，结果是：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/goodbye|good/g</span>;\n<span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;goodbye&quot;</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( string.<span class=\"hljs-title function_\">match</span>(regex) );\n<span class=\"hljs-comment\">// =&gt; [&quot;goodbye&quot;]</span>\n</code></pre>\n<p>也就是说，分支结构也是惰性的，即当前面的匹配上了，后面的就不再尝试了。</p>\n<h3>1.5. 案例分析</h3>\n<p>匹配字符，无非就是字符组、量词和分支结构的组合使用罢了。</p>\n<p>下面找几个例子演练一下（其中，每个正则并不是只有唯一写法）：</p>\n<h4>1.5.1. 匹配 16 进制颜色值 要求匹配：</h4>\n<pre class=\"hljs\"><code>#ffbbad\n#<span class=\"hljs-title class_\">Fc01</span>DF\n#<span class=\"hljs-variable constant_\">FFF</span>\n#ffE\n</code></pre>\n<p>分析： 表示一个 16 进制字符，可以用字符组 <code>[0-9a-fA-F]</code>。</p>\n<p>其中字符可以出现 3 或 6 次，需要是用量词和分支结构。</p>\n<p>使用分支结构时，需要注意顺序。</p>\n<p>正则如下：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/#([0-9a-fA-F]{6}|[0-9a-fA-F]{3})/g</span>;\n<span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;#ffbbad #Fc01DF #FFF #ffE&quot;</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( string.<span class=\"hljs-title function_\">match</span>(regex) );\n<span class=\"hljs-comment\">// =&gt; [&quot;#ffbbad&quot;, &quot;#Fc01DF&quot;, &quot;#FFF&quot;, &quot;#ffE&quot;]</span>\n</code></pre>\n<h4>1.5.2. 匹配时间</h4>\n<p>以 24 小时制为例。 要求匹配：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-number\">23</span>:<span class=\"hljs-number\">59</span>\n<span class=\"hljs-number\">02</span>:<span class=\"hljs-number\">07</span>\n</code></pre>\n<p>分析：</p>\n<p>共 4 位数字，第一位数字可以为 <code>[0-2]</code>。</p>\n<p>当第 1 位为 &quot;2&quot; 时，第 2 位可以为 <code>[0-3]</code>，其他情况时，第 2 位为 <code>[0-9]</code>。</p>\n<p>第 3 位数字为 <code>[0-5]</code>，第4位为 <code>[0-9]</code>。</p>\n<p>正则如下：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/^([01][0-9]|[2][0-3]):[0-5][0-9]$/</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;23:59&quot;</span>) );\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;02:07&quot;</span>) );\n<span class=\"hljs-comment\">// =&gt; true</span>\n<span class=\"hljs-comment\">// =&gt; true</span>\n</code></pre>\n<p>NOTE 正则中使用了 <code>^</code> 和 <code>$</code>，分别表示字符串开头和结尾。</p>\n<p>如果也要求匹配 <code>&quot;7:9&quot;</code>，也就是说时分前面的 <code>&quot;0&quot;</code> 可以省略。</p>\n<p>此时正则变成：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/^(0?[0-9]|1[0-9]|[2][0-3]):(0?[0-9]|[1-5][0-9])$/</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;23:59&quot;</span>) );\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;02:07&quot;</span>) );\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;7:9&quot;</span>) );\n<span class=\"hljs-comment\">// =&gt; true</span>\n<span class=\"hljs-comment\">// =&gt; true</span>\n<span class=\"hljs-comment\">// =&gt; true</span>\n</code></pre>\n<h4>1.5.3. 匹配日期</h4>\n<p>比如 <code>yyyy-mm-dd</code> 格式为例。 要求匹配：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">06</span>-<span class=\"hljs-number\">10</span>\n</code></pre>\n<p>分析：</p>\n<p>年，四位数字即可，可用 <code>[0-9]{4}</code>。</p>\n<p>月，共 12 个月，分两种情况 <code>&quot;01&quot;、&quot;02&quot;、…、&quot;09&quot; 和 &quot;10&quot;、&quot;11&quot;、&quot;12&quot;</code>，可用 <code>(0[1-9]|1[0-2])</code>。</p>\n<p>日，最大 31 天，可用 <code>(0[1-9]|[12][0-9]|3[01])</code>。</p>\n<p>正则如下：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$/</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;2017-06-10&quot;</span>) );\n<span class=\"hljs-comment\">// =&gt; true</span>\n</code></pre>\n<h4>1.5.4. window 操作系统文件路径</h4>\n<p>要求匹配：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-attr\">F</span>:\\study\\javascript\\regex\\regular expression.<span class=\"hljs-property\">pdf</span>\n<span class=\"hljs-attr\">F</span>:\\study\\javascript\\regex\\\n<span class=\"hljs-attr\">F</span>:\\study\\javascript\n<span class=\"hljs-attr\">F</span>:\\\n</code></pre>\n<p>分析：</p>\n<p>整体模式是:</p>\n<pre class=\"hljs\"><code>盘符:\\文件夹\\文件夹\\文件夹\\\n</code></pre>\n<p>其中匹配 <code>&quot;F:\\&quot;</code>，需要使用 <code>[a-zA-Z]:\\\\</code>，其中盘符不区分大小写，注意 <code>\\</code> 字符需要转义。</p>\n<p>文件名或者文件夹名，不能包含一些特殊字符，此时我们需要排除字符组 <code>[^\\\\:*&lt;&gt;|&quot;?\\r\\n/]</code> 来表示合法字符。</p>\n<p>另外它们的名字不能为空名，至少有一个字符，也就是要使用量词 <code>+</code>。因此匹配 <code>文件夹\\</code>，可用 <code>[^\\\\:*&lt;&gt;|&quot;?\\r\\n/]+\\\\</code>。</p>\n<p>另外 <code>文件夹\\</code>，可以出现任意次。也就是 <code>([^\\\\:*&lt;&gt;|&quot;?\\r\\n/]+\\\\)*</code>。其中括号表示其内部正则是一个整体。</p>\n<p>路径的最后一部分可以是 <code>文件夹</code>，没有 <code>\\</code>，因此需要添加 <code>([^\\\\:*&lt;&gt;|&quot;?\\r\\n/]+)?</code>。</p>\n<p>最后拼接成了一个看起来比较复杂的正则：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/^[a-zA-Z]:\\\\([^\\\\:*&lt;&gt;|&quot;?\\r\\n/]+\\\\)*([^\\\\:*&lt;&gt;|&quot;?\\r\\n/]+)?$/</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;F:\\\\study\\\\javascript\\\\regex\\\\regular expression.pdf&quot;</span>) );\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;F:\\\\study\\\\javascript\\\\regex\\\\&quot;</span>) );\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;F:\\\\study\\\\javascript&quot;</span>) );\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;F:\\\\&quot;</span>) );\n<span class=\"hljs-comment\">// =&gt; true</span>\n<span class=\"hljs-comment\">// =&gt; true</span>\n<span class=\"hljs-comment\">// =&gt; true</span>\n<span class=\"hljs-comment\">// =&gt; true</span>\n</code></pre>\n<p>其中，在JavaScript 中字符串要表示字符 <code>\\</code> 时，也需要转义。</p>\n<h4>1.5.5. 匹配 id</h4>\n<p>要求从</p>\n<pre class=\"hljs\"><code>&lt;div id=<span class=\"hljs-string\">&quot;container&quot;</span> <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;main&quot;</span>&gt;&lt;/div&gt;\n</code></pre>\n<p>提取出 <code>id=&quot;container&quot;</code>。</p>\n<p>可能最开始想到的正则是：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/id=&quot;.*&quot;/</span>\n<span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&#x27;&lt;div id=&quot;container&quot; class=&quot;main&quot;&gt;&lt;/div&gt;&#x27;</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(string.<span class=\"hljs-title function_\">match</span>(regex)[<span class=\"hljs-number\">0</span>]);\n<span class=\"hljs-comment\">// =&gt; id=&quot;container&quot; class=&quot;main&quot;</span>\n</code></pre>\n<p>因为 <code>.</code> 是通配符，本身就匹配双引号的，而量词 <code>*</code> 又是贪婪的，当遇到 <code>container</code> 后面双引号时，是不会停下来，会继续匹配，直到遇到最后一个双引号为止。</p>\n<p>解决之道，可以使用惰性匹配：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/id=&quot;.*?&quot;/</span>\n<span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&#x27;&lt;div id=&quot;container&quot; class=&quot;main&quot;&gt;&lt;/div&gt;&#x27;</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(string.<span class=\"hljs-title function_\">match</span>(regex)[<span class=\"hljs-number\">0</span>]);\n<span class=\"hljs-comment\">// =&gt; id=&quot;container&quot;</span>\n</code></pre>\n<p>当然，这样也会有个问题。效率比较低，因为其匹配原理会涉及到“回溯”这个概念。可以优化如下：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/id=&quot;[^&quot;]*&quot;/</span>\n<span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&#x27;&lt;div id=&quot;container&quot; class=&quot;main&quot;&gt;&lt;/div&gt;&#x27;</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(string.<span class=\"hljs-title function_\">match</span>(regex)[<span class=\"hljs-number\">0</span>]);\n<span class=\"hljs-comment\">// =&gt; id=&quot;container</span>\n</code></pre>\n<h2>2. 第二章 正则表达式位置匹配攻略</h2>\n<p>正则表达式是匹配模式，要么匹配字符，要么匹配位置。请记住这句话。</p>\n<p>然而大部分人学习正则时，对于匹配位置的重视程度没有那么高。</p>\n<p>内容包括：</p>\n<ul>\n<li>什么是位置？</li>\n<li>如何匹配位置？</li>\n<li>位置的特性</li>\n<li>几个应用实例分析</li>\n</ul>\n<h3>2.1. 什么是位置呢？</h3>\n<p>位置（锚）是相邻字符之间的位置。比如，下图中箭头所指的地方</p>\n<img src=\"../../assets/1639757871(1).jpg\" style=\"display: flex; margin: auto; width: 60%;\"/>\n<h3>2.2. 如何匹配位置呢？</h3>\n<p>在 <code>ES5</code> 中，共有 6 个锚： <code>^、$、\\b、\\B、(?=p)、(?!p)</code></p>\n<h4>2.2.1. <code>^</code> 和 <code>$</code></h4>\n<p><code>^</code>（脱字符）匹配开头，在多行匹配中匹配行开头。</p>\n<p><code>$</code>（美元符号）匹配结尾，在多行匹配中匹配行结尾。</p>\n<p>比如我们把字符串的开头和结尾用 &quot;<code>#</code>&quot; 替换（位置可以替换成字符的！）：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> result = <span class=\"hljs-string\">&quot;hello&quot;</span>.<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-regexp\">/^|$/g</span>, <span class=\"hljs-string\">&#x27;#&#x27;</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(result);\n<span class=\"hljs-comment\">// =&gt; &quot;#hello#&quot;</span>\n</code></pre>\n<p>多行匹配模式（即有修饰符 <code>m</code>）时，二者是行的概念，这一点需要我们注意：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> result = <span class=\"hljs-string\">&quot;I\\nlove\\njavascript&quot;</span>.<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-regexp\">/^|$/gm</span>, <span class=\"hljs-string\">&#x27;#&#x27;</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(result);\n<span class=\"hljs-comment\">/*\n#I#\n#love#\n#javascript#\n*/</span>\n</code></pre>\n<h4>2.2.2. <code>\\b</code> 和 <code>\\B</code></h4>\n<p><code>\\b</code> 是单词边界，具体就是 <code>\\w</code> 与 <code>\\W </code>之间的位置，也包括 <code>\\w</code> 与 <code>^</code> 之间的位置，和 <code>\\w</code> 与 <code>$</code> 之间的位置。</p>\n<p>比如考察文件名 <code>&quot;[JS] Lesson_01.mp4&quot;</code> 中的 <code>\\b</code>，如下：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> result = <span class=\"hljs-string\">&quot;[JS] Lesson_01.mp4&quot;</span>.<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-regexp\">/\\b/g</span>, <span class=\"hljs-string\">&#x27;#&#x27;</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(result);\n<span class=\"hljs-comment\">// =&gt; &quot;[#JS#] #Lesson_01#.#mp4#&quot;</span>\n</code></pre>\n<p>为什么是这样呢？这需要仔细看看。</p>\n<p>首先，我们知道，<code>\\w</code> 是字符组 <code>[0-9a-zA-Z_]</code> 的简写形式，即 <code>\\w</code> 是字母数字或者下划线的中任何一个字符。而 <code>\\W</code> 是排除字符组 <code>[^0-9a-zA-Z_]</code> 的简写形式，即 <code>\\W</code> 是 <code>\\w</code> 以外的任何一个字符。</p>\n<p>此时我们可以看看 <code>&quot;[#JS#] #Lesson_01#.#mp4#&quot;</code> 中的每一个井号 ，是怎么来的。</p>\n<p>第 1 个，两边字符是 <code>&quot;[&quot; 与 &quot;J&quot;，是 \\W 与 \\w 之间</code>的位置。</p>\n<p>第 2 个，两边字符是 <code>&quot;S&quot; 与 &quot;]&quot;，也就是 \\w 与 \\W 之间</code>的位置。</p>\n<p>第 3 个，两边字符是 <code>空格与 &quot;L&quot;，也就是 \\W 与 \\w 之间</code>的位置。</p>\n<p>第 4 个，两边字符是 <code>&quot;1&quot; 与 &quot;.&quot;，也就是 \\w 与 \\W 之间</code>的位置。</p>\n<p>第 5 个，两边字符是 <code>&quot;.&quot; 与 &quot;m&quot;，也就是 \\W 与 \\w之间</code>的位置。</p>\n<p>第 6 个，位于结尾，前面的字符 &quot;4&quot; 是 <code>\\w</code>，<code>即 \\w 与 $ 之间</code>的位置。</p>\n<p>知道了 <code>\\b</code> 的概念后，那么 <code>\\B</code> 也就相对好理解了。</p>\n<p><code>\\B</code> 就是 <code>\\b</code> 的反面的意思，非单词边界。例如在字符串中所有位置中，扣掉 <code>\\b</code>，剩下的都是 <code>\\B</code> 的。</p>\n<p>具体说来就是 <code>\\w</code> 与 <code>\\w</code>、 <code>\\W</code> 与 <code>\\W</code>、<code>^</code> 与 <code>\\W</code>，<code>\\W</code> 与 <code>$</code> 之间的位置。</p>\n<p>比如上面的例子，把所有 <code>\\B</code> 替换成 <code>&quot;#&quot;</code>：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> result = <span class=\"hljs-string\">&quot;[JS] Lesson_01.mp4&quot;</span>.<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-regexp\">/\\B/g</span>, <span class=\"hljs-string\">&#x27;#&#x27;</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(result);\n<span class=\"hljs-comment\">// =&gt; &quot;#[J#S]# L#e#s#s#o#n#_#0#1.m#p#4&quot;</span>\n</code></pre>\n<h4>2.2.3. <code>(?=p) 和 (?!p)</code></h4>\n<p><code>(?=p)</code>，其中 <code>p</code> 是一个子模式，即 <code>p</code> 前面的位置，或者说，该位置后面的字符要匹配 <code>p</code>。</p>\n<p>比如 <code>(?=l)</code>，表示 <code>&quot;l&quot;</code> 字符前面的位置，例如：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> result = <span class=\"hljs-string\">&quot;hello&quot;</span>.<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-regexp\">/(?=l)/g</span>, <span class=\"hljs-string\">&#x27;#&#x27;</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(result);\n<span class=\"hljs-comment\">// =&gt; &quot;he#l#lo&quot;</span>\n</code></pre>\n<p>而 <code>(?!p)</code> 就是 <code>(?=p)</code> 的反面意思，比如：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> result = <span class=\"hljs-string\">&quot;hello&quot;</span>.<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-regexp\">/(?!l)/g</span>, <span class=\"hljs-string\">&#x27;#&#x27;</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(result);\n<span class=\"hljs-comment\">// =&gt; &quot;#h#ell#o#&quot;</span>\n</code></pre>\n<p>二者的学名分别是 <code>positive lookahead</code> 和 <code>negative lookahead</code>。</p>\n<p>中文翻译分别是<strong>正向先行断言</strong>和<strong>负向先行断言</strong>。</p>\n<p><code>ES5</code> 之后的版本，会支持 <code>positive lookbehind</code> 和 <code>negative lookbehind</code>。 具体是 <code>(?&lt;=p)</code> 和 <code>(?&lt;!p)</code>。</p>\n<p>也有书上把这四个东西，翻译成<strong>环视</strong>，即看看右边和看看左边。</p>\n<p>但一般书上，没有很好强调这四者是个位置。</p>\n<p>比如 <code>(?=p)</code>，一般都理解成：要求接下来的字符与 <code>p</code> 匹配，但不能包括 <code>p</code> 匹配的那些字符。</p>\n<p>而在本人看来，<code>(?=p)</code> 就与 <code>^</code> 一样好理解，就是 <code>p</code> 前面的那个位置。</p>\n<h3>2.3. 位置的特性</h3>\n<p>对于位置的理解，我们可以理解成空字符 <code>&quot;&quot;</code>。</p>\n<p>比如 <code>&quot;hello&quot;</code> 字符串等价于如下的形式：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-string\">&quot;hello&quot;</span> == <span class=\"hljs-string\">&quot;&quot;</span> + <span class=\"hljs-string\">&quot;h&quot;</span> + <span class=\"hljs-string\">&quot;&quot;</span> + <span class=\"hljs-string\">&quot;e&quot;</span> + <span class=\"hljs-string\">&quot;&quot;</span> + <span class=\"hljs-string\">&quot;l&quot;</span> + <span class=\"hljs-string\">&quot;&quot;</span> + <span class=\"hljs-string\">&quot;l&quot;</span> + <span class=\"hljs-string\">&quot;&quot;</span> + <span class=\"hljs-string\">&quot;o&quot;</span> + <span class=\"hljs-string\">&quot;&quot;</span>; \n</code></pre>\n<p>也等价于：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-string\">&quot;hello&quot;</span> == <span class=\"hljs-string\">&quot;&quot;</span> + <span class=\"hljs-string\">&quot;&quot;</span> + <span class=\"hljs-string\">&quot;hello&quot;</span> \n</code></pre>\n<p>因此，把 <code>/^hello$/</code> 写成 <code>/^^hello$$$/</code>，是没有任何问题的：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> result = <span class=\"hljs-regexp\">/^^hello$$$/</span>.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;hello&quot;</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(result);\n<span class=\"hljs-comment\">// =&gt; true</span>\n</code></pre>\n<p>甚至可以写成更复杂的:</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> result = <span class=\"hljs-regexp\">/(?=he)^^he(?=\\w)llo$\\b\\b$/</span>.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;hello&quot;</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(result);\n<span class=\"hljs-comment\">// =&gt; true</span>\n</code></pre>\n<p>也就是说字符之间的位置，可以写成多个。</p>\n<div class=\"tip\">\n<p>TIP 把位置理解空字符，是对位置非常有效的理解方式。</p>\n</div>\n<h3>2.4. 相关案例</h3>\n<h4>2.4.1. 不匹配任何东西的正则</h4>\n<p>让你写个正则不匹配任何东西</p>\n<p>easy，<code>/.^/</code>。 因为此正则要求只有一个字符，但该字符后面是开头，而这样的字符串是不存在的。</p>\n<h4>2.4.2 数字的千位分隔符表示法</h4>\n<p>比如把 <code>&quot;12345678&quot;</code>，变成 <code>&quot;12,345,678&quot;</code>。</p>\n<p>可见是需要把相应的位置替换成 <code>&quot;,&quot;</code>。</p>\n<p>思路是什么呢？</p>\n<h5>2.4.2.1. 弄出最后一个逗号</h5>\n<p>使用 <code>(?=\\d{3}$)</code> 就可以做到：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> result = <span class=\"hljs-string\">&quot;12345678&quot;</span>.<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-regexp\">/(?=\\d{3}$)/g</span>, <span class=\"hljs-string\">&#x27;,&#x27;</span>)\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(result);\n<span class=\"hljs-comment\">// =&gt; &quot;12345,678&quot;</span>\n</code></pre>\n<p>其中，<code>(?=\\d{3}$)</code> 匹配 <code>\\d{3}$</code> 前面的位置。而 <code>\\d{3}$</code> 匹配的是目标字符串最后那 <code>3</code> 位数字。</p>\n<h5>2.4.2.2. 弄出所有的逗号</h5>\n<p>因为逗号出现的位置，要求后面 3 个数字一组，也就是 <code>\\d{3}</code> 至少出现一次。</p>\n<p>此时可以使用量词 <code>+</code>：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> result = <span class=\"hljs-string\">&quot;12345678&quot;</span>.<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-regexp\">/(?=(\\d{3})+$)/g</span>, <span class=\"hljs-string\">&#x27;,&#x27;</span>)\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(result);\n<span class=\"hljs-comment\">// =&gt; &quot;12,345,678&quot;</span>\n</code></pre>\n<h5>2.4.2.3. 匹配其余案例</h5>\n<p>写完正则后，要多验证几个案例，此时我们会发现问题：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> result = <span class=\"hljs-string\">&quot;123456789&quot;</span>.<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-regexp\">/(?=(\\d{3})+$)/g</span>, <span class=\"hljs-string\">&#x27;,&#x27;</span>)\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(result);\n<span class=\"hljs-comment\">// =&gt; &quot;,123,456,789&quot;</span>\n</code></pre>\n<p>因为上面的正则，仅仅表示把从结尾向前数，一但是 3 的倍数，就把其前面的位置替换成逗号。因此才会出现这个问题。</p>\n<p>怎么解决呢？我们要求匹配的到这个位置不能是开头。</p>\n<p>我们知道匹配开头可以使用 <code>^</code>，但要求这个位置不是开头怎么办？</p>\n<p>easy，<code>(?!^)</code>，你想到了吗？测试如下：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/(?!^)(?=(\\d{3})+$)/g</span>;\n<span class=\"hljs-keyword\">var</span> result = <span class=\"hljs-string\">&quot;12345678&quot;</span>.<span class=\"hljs-title function_\">replace</span>(regex, <span class=\"hljs-string\">&#x27;,&#x27;</span>)\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(result);\n<span class=\"hljs-comment\">// =&gt; &quot;12,345,678&quot;</span>\nresult = <span class=\"hljs-string\">&quot;123456789&quot;</span>.<span class=\"hljs-title function_\">replace</span>(regex, <span class=\"hljs-string\">&#x27;,&#x27;</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(result);\n<span class=\"hljs-comment\">// =&gt; &quot;123,456,789&quot;</span>\n</code></pre>\n<h5>2.4.2.4. 支持其他形式</h5>\n<p>如果要把 <code>&quot;12345678 123456789&quot;</code> 替换成 <code>&quot;12,345,678 123,456,789&quot;。</code></p>\n<p>此时我们需要修改正则，把里面的开头 <code>^</code> 和结尾 <code>$</code>，修改成 <code>\\b</code>：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;12345678 123456789&quot;</span>,\nregex = <span class=\"hljs-regexp\">/(?!\\b)(?=(\\d{3})+\\b)/g</span>;\n<span class=\"hljs-keyword\">var</span> result = string.<span class=\"hljs-title function_\">replace</span>(regex, <span class=\"hljs-string\">&#x27;,&#x27;</span>)\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(result);\n<span class=\"hljs-comment\">// =&gt; &quot;12,345,678 123,456,789&quot;</span>\n</code></pre>\n<p>其中 <code>(?!\\b)</code> 怎么理解呢？</p>\n<p>要求当前是一个位置，但不是 <code>\\b</code> 前面的位置，其实 <code>(?!\\b)</code> 说的就是 <code>\\B</code>。</p>\n<p>因此最终正则变成了：<code>/\\B(?=(\\d{3})+\\b)/g。</code></p>\n<h5>2.4.2.5. 格式化</h5>\n<p>千分符表示法一个常见的应用就是货币格式化。</p>\n<p>比如把下面的字符串：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-number\">1888</span>\n</code></pre>\n<p>格式化成：</p>\n<pre class=\"hljs\"><code>$ <span class=\"hljs-number\">1888.00</span>\n</code></pre>\n<p>有了前面的铺垫，我们很容易实现如下：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">format</span> (num) {\n  <span class=\"hljs-keyword\">return</span> num.<span class=\"hljs-title function_\">toFixed</span>(<span class=\"hljs-number\">2</span>).<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-regexp\">/\\B(?=(\\d{3})+\\b)/g</span>, <span class=\"hljs-string\">&quot;,&quot;</span>).<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-regexp\">/^/</span>, <span class=\"hljs-string\">&quot;$$ &quot;</span>); };\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( <span class=\"hljs-title function_\">format</span>(<span class=\"hljs-number\">1888</span>) );\n<span class=\"hljs-comment\">// =&gt; &quot;$ 1,888.00&quot;</span>\n</code></pre>\n<h4>2.4.3. 验证密码问题</h4>\n<p>密码长度 <code>6-12</code> 位，由数字、小写字符和大写字母组成，但必须至少包括 <code>2</code> 种字符。</p>\n<p>此题，如果写成多个正则来判断，比较容易。但要写成一个正则就比较困难。</p>\n<p>那么，我们就来挑战一下。看看我们对位置的理解是否深刻。</p>\n<h5>2.4.3.1. 简化</h5>\n<p>不考虑“但必须至少包括 <code>2</code> 种字符”这一条件。我们可以容易写出：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/^[0-9A-Za-z]{6,12}$/</span>;\n</code></pre>\n<p>2.4.3.2. 判断是否包含有某一种字符</p>\n<p>假设，要求的必须包含数字，怎么办？此时我们可以使用 <code>(?=.*[0-9])</code> 来做。</p>\n<p>因此正则变成：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/(?=.*[0-9])^[0-9A-Za-z]{6,12}$/</span>;\n</code></pre>\n<h5>2.4.3.3. 同时包含具体两种字符</h5>\n<p>比如同时包含数字和小写字母，可以用 <code>(?=.*[0-9])(?=.*[a-z])</code> 来做。</p>\n<p>因此正则变成：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/(?=.*[0-9])(?=.*[a-z])^[0-9A-Za-z]{6,12}$/</span>;\n</code></pre>\n<h5>2.4.3.4. 解答 我们可以把原题变成下列几种情况之一：</h5>\n<p>同时包含数字和小写字母</p>\n<p>同时包含数字和大写字母</p>\n<p>同时包含小写字母和大写字母</p>\n<p>同时包含数字、小写字母和大写字母</p>\n<p>以上的 4 种情况是或的关系（实际上，可以不用第 4 条）。</p>\n<p>最终答案是：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/((?=.*[0-9])(?=.*[a-z])|(?=.*[0-9])(?=.*[A-Z])|(?=.*[a-z])(?=.*[A\u0002Z]))^[0-9A-Za-z]{6,12}$/</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;1234567&quot;</span>) ); <span class=\"hljs-comment\">// false 全是数字</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;abcdef&quot;</span>) ); <span class=\"hljs-comment\">// false 全是小写字母</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;ABCDEFGH&quot;</span>) ); <span class=\"hljs-comment\">// false 全是大写字母</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;ab23C&quot;</span>) ); <span class=\"hljs-comment\">// false 不足6位</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;ABCDEF234&quot;</span>) ); <span class=\"hljs-comment\">// true 大写字母和数字</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;abcdEF234&quot;</span>) ); <span class=\"hljs-comment\">// true 三者都有</span>\n</code></pre>\n<h5>2.4.3.5. 解惑</h5>\n<p>上面的正则看起来比较复杂，只要理解了第二步，其余就全部理解了。</p>\n<pre class=\"hljs\"><code>/(?=.*[<span class=\"hljs-number\">0</span>-<span class=\"hljs-number\">9</span>])^[<span class=\"hljs-number\">0</span>-9A-<span class=\"hljs-title class_\">Za</span>-z]{<span class=\"hljs-number\">6</span>,<span class=\"hljs-number\">12</span>}$/\n</code></pre>\n<p>对于这个正则，我们只需要弄明白 <code>(?=.*[0-9])^</code> 即可。</p>\n<p>分开来看就是 <code>(?=.*[0-9])</code> 和 <code>^</code>。</p>\n<p>表示开头前面还有个位置（当然也是开头，即同一个位置，想想之前的空字符类比）。</p>\n<p><code>(?=.*[0-9])</code> 表示该位置后面的字符匹配 <code>.*[0-9]</code>，即，有任何多个任意字符，后面再跟个数字。</p>\n<p>翻译成大白话，就是接下来的字符，必须包含个数字。</p>\n<h5>2.4.3.6. 另外一种解法</h5>\n<p>“至少包含两种字符”的意思就是说，不能全部都是数字，也不能全部都是小写字母，也不能全部都是大写字母。</p>\n<p>那么要求“不能全部都是数字”，怎么做呢？ <code>(?!p)</code> 出马！</p>\n<p>对应的正则是：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/(?!^[0-9]{6,12}$)^[0-9A-Za-z]{6,12}$/</span>;\n</code></pre>\n<p>三种“都不能”呢？</p>\n<p>最终答案是：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/(?!^[0-9]{6,12}$)(?!^[a-z]{6,12}$)(?!^[A-Z]{6,12}$)^[0-9A-Za-z]{6,12}$/</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;1234567&quot;</span>) ); <span class=\"hljs-comment\">// false 全是数字</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;abcdef&quot;</span>) ); <span class=\"hljs-comment\">// false 全是小写字母</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;ABCDEFGH&quot;</span>) ); <span class=\"hljs-comment\">// false 全是大写字母</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;ab23C&quot;</span>) ); <span class=\"hljs-comment\">// false 不足6位</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;ABCDEF234&quot;</span>) ); <span class=\"hljs-comment\">// true 大写字母和数字</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;abcdEF234&quot;</span>) ); <span class=\"hljs-comment\">// true 三者都有</span>\n</code></pre>\n<p>小结 重点掌握匹配位置的这 6 个锚，给我们的解决正则问题工具箱内添加了新工具。</p>\n<h2>3. 第三章 正则表达式括号的作用</h2>\n<p>不管哪门语言中都有括号。正则表达式也是一门语言，而括号的存在使这门语言更为强大。</p>\n<p>对括号的使用是否得心应手，是衡量对正则的掌握水平的一个侧面标准。</p>\n<p>括号的作用，其实三言两语就能说明白，括号提供了分组，便于我们引用它。</p>\n<p>引用某个分组，会有两种情形：在 JavaScript 里引用它，在正则表达式里引用它。</p>\n<p>内容包括：</p>\n<p><strong>分组和分支结构</strong></p>\n<p><strong>分组引用</strong></p>\n<p><strong>反向引用</strong></p>\n<p><strong>非捕获括号</strong></p>\n<p><strong>相关案例</strong></p>\n<h3>3.1. 分组和分支结构</h3>\n<p>这二者是括号最直觉的作用，也是最原始的功能，强调括号内的正则是一个整体，即提供子表达式。</p>\n<h4>3.1.1. 分组</h4>\n<p>我们知道 <code>/a+/</code> 匹配连续出现的 <code>&quot;a&quot;</code>，而要匹配连续出现的 <code>&quot;ab&quot;</code> 时，需要使用 <code>/(ab)+/</code>。</p>\n<p>其中括号是提供<strong>分组功能</strong>，使量词 <code>+</code> 作用于 <code>&quot;ab&quot;</code> 这个整体，测试如下：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/(ab)+/g</span>;\n<span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;ababa abbb ababab&quot;</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( string.<span class=\"hljs-title function_\">match</span>(regex) );\n<span class=\"hljs-comment\">// =&gt; [&quot;abab&quot;, &quot;ab&quot;, &quot;ababab&quot;]</span>\n</code></pre>\n<h4>3.1.2. 分支结构</h4>\n<p>而在多选分支结构 <code>(p1|p2)</code> 中，此处括号的作用也是不言而喻的，提供了分支表达式的所有可能。</p>\n<p>比如，要匹配如下的字符串：</p>\n<pre class=\"hljs\"><code>I love <span class=\"hljs-title class_\">JavaScript</span>\nI love <span class=\"hljs-title class_\">Regular</span> <span class=\"hljs-title class_\">Expression</span>\n</code></pre>\n<p>可以使用正则：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/^I love (JavaScript|Regular Expression)$/</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;I love JavaScript&quot;</span>) );\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;I love Regular Expression&quot;</span>) );\n<span class=\"hljs-comment\">// =&gt; true</span>\n<span class=\"hljs-comment\">// =&gt; true</span>\n</code></pre>\n<p>如果去掉正则中的括号，即：</p>\n<pre class=\"hljs\"><code>/^I love <span class=\"hljs-title class_\">JavaScript</span>|<span class=\"hljs-title class_\">Regular</span> <span class=\"hljs-title class_\">Expression</span>$/，\n</code></pre>\n<p>匹配字符串是 <code>&quot;I love JavaScript&quot; </code>和 <code>&quot;Regular Expression&quot;</code>，当然这不是我们想要的。</p>\n<h3>3.2. 分组引用</h3>\n<p>这是括号一个重要的作用，有了它，我们就可以进行数据提取，以及更强大的替换操作。</p>\n<p>而要使用它带来的好处，必须配合使用实现环境的 <code>API。</code></p>\n<p>以日期为例。假设格式是 <code>yyyy-mm-dd</code> 的，我们可以先写一个简单的正则：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/\\d{4}-\\d{2}-\\d{2}/</span>;\n</code></pre>\n<p>然后再修改成括号版的：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/(\\d{4})-(\\d{2})-(\\d{2})/</span>;\n</code></pre>\n<img src=\"../../assets/微信截图_20211219101110.png\" style=\"display: flex; margin: auto; width: 80%;\"/>\n<p>对比这两个可视化图片，我们发现，与前者相比，后者多了分组编号，如 <code>Group #1</code>。</p>\n<p>其实正则引擎也是这么做的，在匹配过程中，给每一个分组都开辟一个空间，用来存储每一个分组匹配到的数据。</p>\n<p>既然分组可以捕获数据，那么我们就可以使用它们。</p>\n<h4>3.2.1. 提取数据</h4>\n<p>比如提取出年、月、日，可以这么做：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/(\\d{4})-(\\d{2})-(\\d{2})/</span>;\n<span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;2017-06-12&quot;</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( string.<span class=\"hljs-title function_\">match</span>(regex) );\n<span class=\"hljs-comment\">// =&gt; [&quot;2017-06-12&quot;, &quot;2017&quot;, &quot;06&quot;, &quot;12&quot;, index: 0, input: &quot;2017-06-12&quot;]</span>\n</code></pre>\n<p>NOTE</p>\n<p><code>match</code> 返回的一个数组，第一个元素是整体匹配结果，然后是各个分组（括号里）匹配的内容，然后是匹配下标，最后是输入的文本。另外，正则表达式是否有修饰符 <code>g，match</code>返回的数组格式是不一样的。</p>\n<p>另外也可以使用正则实例对象的 <code>exec</code> 方法：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/(\\d{4})-(\\d{2})-(\\d{2})/</span>;\n<span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;2017-06-12&quot;</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">exec</span>(string) );\n<span class=\"hljs-comment\">// =&gt; [&quot;2017-06-12&quot;, &quot;2017&quot;, &quot;06&quot;, &quot;12&quot;, index: 0, input: &quot;2017-06-12&quot;]</span>\n</code></pre>\n<p>同时，也可以使用构造函数的全局属性 <code>$1</code> 至 <code>$9</code> 来获取：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/(\\d{4})-(\\d{2})-(\\d{2})/</span>;\n<span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;2017-06-12&quot;</span>;\nregex.<span class=\"hljs-title function_\">test</span>(string); <span class=\"hljs-comment\">// 正则操作即可，例如</span>\n<span class=\"hljs-comment\">//regex.exec(string);</span>\n<span class=\"hljs-comment\">//string.match(regex);</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-title class_\">RegExp</span>.<span class=\"hljs-property\">$1</span>); <span class=\"hljs-comment\">// &quot;2017&quot;</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-title class_\">RegExp</span>.<span class=\"hljs-property\">$2</span>); <span class=\"hljs-comment\">// &quot;06&quot;</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-title class_\">RegExp</span>.<span class=\"hljs-property\">$3</span>); <span class=\"hljs-comment\">// &quot;12&quot;</span>\n</code></pre>\n<h4>3.2.2. 替换</h4>\n<p>比如，想把 <code>yyyy-mm-dd</code> 格式，替换成 <code>mm/dd/yyyy</code> 怎么做？</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/(\\d{4})-(\\d{2})-(\\d{2})/</span>;\n<span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;2017-06-12&quot;</span>;\n<span class=\"hljs-keyword\">var</span> result = string.<span class=\"hljs-title function_\">replace</span>(regex, <span class=\"hljs-string\">&quot;$2/$3/$1&quot;</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(result);\n<span class=\"hljs-comment\">// =&gt; &quot;06/12/2017&quot;</span>\n</code></pre>\n<p>其中 <code>replace</code> 中的，第二个参数里用 <code>$1、$2、$3</code> 指代相应的分组。等价于如下的形式：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/(\\d{4})-(\\d{2})-(\\d{2})/</span>;\n<span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;2017-06-12&quot;</span>;\n<span class=\"hljs-keyword\">var</span> result = string.<span class=\"hljs-title function_\">replace</span>(regex, <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title class_\">RegExp</span>.<span class=\"hljs-property\">$2</span> + <span class=\"hljs-string\">&quot;/&quot;</span> + <span class=\"hljs-title class_\">RegExp</span>.<span class=\"hljs-property\">$3</span> + <span class=\"hljs-string\">&quot;/&quot;</span> + <span class=\"hljs-title class_\">RegExp</span>.<span class=\"hljs-property\">$1</span>;\n});\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(result);\n<span class=\"hljs-comment\">// =&gt; &quot;06/12/2017&quot;</span>\n</code></pre>\n<p>也等价于：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/(\\d{4})-(\\d{2})-(\\d{2})/</span>;\n<span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;2017-06-12&quot;</span>;\n<span class=\"hljs-keyword\">var</span> result = string.<span class=\"hljs-title function_\">replace</span>(regex, <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">match, year, month, day</span>) {\n  <span class=\"hljs-keyword\">return</span> month + <span class=\"hljs-string\">&quot;/&quot;</span> + day + <span class=\"hljs-string\">&quot;/&quot;</span> + year;\n});\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(result);\n<span class=\"hljs-comment\">// =&gt; &quot;06/12/2017&quot;</span>\n</code></pre>\n<h3>3.3. 反向引用</h3>\n<p>除了使用相应 <code>API</code> 来引用分组，也可以在正则本身里引用分组。但只能引用之前出现的分组，即反向引用。</p>\n<p>还是以日期为例。</p>\n<p>比如要写一个正则支持匹配如下三种格式：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-number\">2016</span>-<span class=\"hljs-number\">06</span>-<span class=\"hljs-number\">12</span>\n<span class=\"hljs-number\">2016</span>/<span class=\"hljs-number\">06</span>/<span class=\"hljs-number\">12</span>\n<span class=\"hljs-number\">2016.06</span><span class=\"hljs-number\">.12</span>\n</code></pre>\n<p>最先可能想到的正则是:</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/\\d{4}(-|\\/|\\.)\\d{2}(-|\\/|\\.)\\d{2}/</span>;\n<span class=\"hljs-keyword\">var</span> string1 = <span class=\"hljs-string\">&quot;2017-06-12&quot;</span>;\n<span class=\"hljs-keyword\">var</span> string2 = <span class=\"hljs-string\">&quot;2017/06/12&quot;</span>;\n<span class=\"hljs-keyword\">var</span> string3 = <span class=\"hljs-string\">&quot;2017.06.12&quot;</span>;\n<span class=\"hljs-keyword\">var</span> string4 = <span class=\"hljs-string\">&quot;2016-06/12&quot;</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(string1) ); <span class=\"hljs-comment\">// true</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(string2) ); <span class=\"hljs-comment\">// true</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(string3) ); <span class=\"hljs-comment\">// true</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(string4) ); <span class=\"hljs-comment\">// true</span>\n</code></pre>\n<p>其中 <code>/</code> 和 <code>.</code> 需要转义。虽然匹配了要求的情况，但也匹配 <code>&quot;2016-06/12&quot;</code> 这样的数据。</p>\n<p>假设我们想要求分割符前后一致怎么办？此时需要使用反向引用：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/\\d{4}(-|\\/|\\.)\\d{2}\\1\\d{2}/</span>;\n<span class=\"hljs-keyword\">var</span> string1 = <span class=\"hljs-string\">&quot;2017-06-12&quot;</span>;\n<span class=\"hljs-keyword\">var</span> string2 = <span class=\"hljs-string\">&quot;2017/06/12&quot;</span>;\n<span class=\"hljs-keyword\">var</span> string3 = <span class=\"hljs-string\">&quot;2017.06.12&quot;</span>;\n<span class=\"hljs-keyword\">var</span> string4 = <span class=\"hljs-string\">&quot;2016-06/12&quot;</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(string1) ); <span class=\"hljs-comment\">// true</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(string2) ); <span class=\"hljs-comment\">// true</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(string3) ); <span class=\"hljs-comment\">// true</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(string4) ); <span class=\"hljs-comment\">// false</span>\n</code></pre>\n<p>注意里面的 <code>\\1</code>，表示的引用之前的那个分组 <code>(-|\\/|\\.)</code>。不管它匹配到什么<code>（比如 -）</code>，<code>\\1</code> 都匹配那个同 样的具体某个字符。</p>\n<p>我们知道了 <code>\\1</code> 的含义后，那么 <code>\\2</code> 和 <code>\\3</code> 的概念也就理解了，即分别指代第二个和第三个分组。</p>\n<p>看到这里，此时，恐怕你会有几个问题。</p>\n<h4>3.3.1. 括号嵌套怎么办？</h4>\n<p>以左括号（开括号）为准。比如：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/^((\\d)(\\d(\\d)))\\1\\2\\3\\4$/</span>;\n<span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;1231231233&quot;</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(string) ); <span class=\"hljs-comment\">// true</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( <span class=\"hljs-title class_\">RegExp</span>.<span class=\"hljs-property\">$1</span> ); <span class=\"hljs-comment\">// 123</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( <span class=\"hljs-title class_\">RegExp</span>.<span class=\"hljs-property\">$2</span> ); <span class=\"hljs-comment\">// 1</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( <span class=\"hljs-title class_\">RegExp</span>.<span class=\"hljs-property\">$3</span> ); <span class=\"hljs-comment\">// 23</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( <span class=\"hljs-title class_\">RegExp</span>.<span class=\"hljs-property\">$4</span> ); <span class=\"hljs-comment\">// 3</span>\n</code></pre>\n<p>我们可以看看这个正则匹配模式：</p>\n<p>第一个字符是数字，比如说 <code>&quot;1&quot;</code>，</p>\n<p>第二个字符是数字，比如说 <code>&quot;2&quot;</code>，</p>\n<p>第三个字符是数字，比如说 <code>&quot;3&quot;</code>，</p>\n<p>接下来的是 <code>\\1</code>，是第一个分组内容，那么看第一个开括号对应的分组是什么，是 <code>&quot;123&quot;</code>，</p>\n<p>接下来的是 <code>\\2</code>，找到第2个开括号，对应的分组，匹配的内容是 <code>&quot;1&quot;</code>，</p>\n<p>接下来的是 <code>\\3</code>，找到第3个开括号，对应的分组，匹配的内容是 <code>&quot;23&quot;</code>，</p>\n<p>最后的是 <code>\\4</code>，找到第3个开括号，对应的分组，匹配的内容是 <code>&quot;3&quot;</code>。</p>\n<p>我们可以看看这个正则匹配模式：</p>\n<p>第一个字符是数字，比如说 <code>&quot;1&quot;</code>，</p>\n<p>第二个字符是数字，比如说 <code>&quot;2&quot;</code>，</p>\n<p>第三个字符是数字，比如说 <code>&quot;3&quot;</code>，</p>\n<p>接下来的是 <code>\\1</code>，是第一个分组内容，那么看第一个开括号对应的分组是什么，是 <code>&quot;123&quot;，</code></p>\n<p>接下来的是 <code>\\2</code>，找到第2个开括号，对应的分组，匹配的内容是 <code>&quot;1&quot;</code>，</p>\n<p>接下来的是 <code>\\3</code>，找到第3个开括号，对应的分组，匹配的内容是 <code>&quot;23&quot;</code>，</p>\n<p>最后的是 <code>\\4</code>，找到第3个开括号，对应的分组，匹配的内容是 <code>&quot;3&quot;</code>。</p>\n<h4>3.3.2. <code>\\10</code> 表示什么呢？</h4>\n<p>另外一个疑问可能是，即 <code>\\10</code> 是表示第 <code>10</code> 个分组，还是 <code>\\1</code> 和 <code>0</code> 呢？</p>\n<p>答案是前者，虽然一个正则里出现 <code>\\10</code> 比较罕见。测试如下：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/(1)(2)(3)(4)(5)(6)(7)(8)(9)(#) \\10+/</span>;\n<span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;123456789# ######&quot;</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(string) );\n<span class=\"hljs-comment\">// =&gt; true</span>\n</code></pre>\n<p>TIP 如果真要匹配 <code>\\1</code> 和 <code>0</code> 的话，请使用 <code>(?:\\1)0</code> 或者 <code>\\1(?:0)</code>。</p>\n<h4>3.3.3. 引用不存在的分组会怎样？</h4>\n<p>因为反向引用，是引用前面的分组，但我们在正则里引用了不存在的分组时，此时正则不会报错，只是匹配反向引用的字符本身。例如 <code>\\2</code>，就匹配 <code>&quot;\\2&quot;</code>。注意 <code>&quot;\\2&quot;</code> 表示对 <code>&quot;2&quot;</code> 进行了转义。</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/\\1\\2\\3\\4\\5\\6\\7\\8\\9/</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;\\1\\2\\3\\4\\5\\6\\7\\8\\9&quot;</span>) );\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( <span class=\"hljs-string\">&quot;\\1\\2\\3\\4\\5\\6\\7\\8\\9&quot;</span>.<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&quot;&quot;</span>) );\n</code></pre>\n<p><code>Chrome</code> 浏览器打印的结果（不同的浏览器和版本，打印的结果可能不一样）：</p>\n<img src=\"../../assets/微信截图_20211219140323.png\" style=\"display: flex; margin: auto; width: 80%;\"/>\n<h4>3.3.4. 分组后面有量词会怎样？</h4>\n<p>分组后面有量词的话，分组最终捕获到的数据是最后一次的匹配。比如如下的测试案例：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/(\\d)+/</span>;\n<span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;12345&quot;</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( string.<span class=\"hljs-title function_\">match</span>(regex) );\n<span class=\"hljs-comment\">// =&gt; [&quot;12345&quot;, &quot;5&quot;, index: 0, input: &quot;12345&quot;]</span>\n</code></pre>\n<p>从上面看出，分组 <code>(\\d)</code> 捕获的数据是 <code>&quot;5&quot;</code>。</p>\n<p>同理对于反向引用，也是这样的。测试如下：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/(\\d)+ \\1/</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;12345 1&quot;</span>) );\n<span class=\"hljs-comment\">// =&gt; false</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;12345 5&quot;</span>) );\n<span class=\"hljs-comment\">// =&gt; true</span>\n</code></pre>\n<h3>3.4. 非捕获括号</h3>\n<p>之前文中出现的括号，都会捕获它们匹配到的数据，以便后续引用，因此也称它们是<strong>捕获型分组</strong>和<strong>捕获型分支</strong>。</p>\n<p>如果只想要括号最原始的功能，但不会引用它，即，既不在 <code>API</code> 里引用，也不在正则里反向引用。</p>\n<p>此时可以使用非捕获括号 <code>(?:p)</code> 和 <code>(?:p1|p2|p3)</code>，例如本章第一个例子可以修改为：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/(?:ab)+/g</span>;\n<span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;ababa abbb ababab&quot;</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( string.<span class=\"hljs-title function_\">match</span>(regex) );\n<span class=\"hljs-comment\">// =&gt; [&quot;abab&quot;, &quot;ab&quot;, &quot;ababab&quot;]</span>\n</code></pre>\n<p>同理，第二例子可以修改为：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/^I love (?:JavaScript|Regular Expression)$/</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;I love JavaScript&quot;</span>) );\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;I love Regular Expression&quot;</span>) );\n<span class=\"hljs-comment\">// =&gt; true</span>\n<span class=\"hljs-comment\">// =&gt; true</span>\n</code></pre>\n<h3>3.5. 相关案例</h3>\n<p>至此括号的作用已经讲完了，总结一句话，就是提供了可供我们使用的分组，如何用就看我们的了。</p>\n<h4>3.5.1. 字符串 <code>trim</code> 方法模拟</h4>\n<p><code>trim</code> 方法是去掉字符串的开头和结尾的空白符。有两种思路去做。</p>\n<p>第一种，匹配到开头和结尾的空白符，然后替换成空字符。如：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">trim</span>(<span class=\"hljs-params\">str</span>) {\n  <span class=\"hljs-keyword\">return</span> str.<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-regexp\">/^\\s+|\\s+$/g</span>, <span class=\"hljs-string\">&#x27;&#x27;</span>); }\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( <span class=\"hljs-title function_\">trim</span>(<span class=\"hljs-string\">&quot; foobar &quot;</span>) );\n<span class=\"hljs-comment\">// =&gt; &quot;foobar&quot;</span>\n</code></pre>\n<p>第二种，匹配整个字符串，然后用引用来提取出相应的数据：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">trim</span> (str) {\n  <span class=\"hljs-keyword\">return</span> str.<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-regexp\">/^\\s*(.*?)\\s*$/g</span>, <span class=\"hljs-string\">&quot;$1&quot;</span>); }\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( <span class=\"hljs-title function_\">trim</span>(<span class=\"hljs-string\">&quot; foobar &quot;</span>) );\n<span class=\"hljs-comment\">// =&gt; &quot;foobar&quot;</span>\n</code></pre>\n<p>这里使用了惰性匹配 <code>*?</code>，不然也会匹配最后一个空格之前的所有空格的。</p>\n<p>当然，前者效率高。</p>\n<h4>3.5.2. 将每个单词的首字母转换为大写</h4>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">titleize</span> (str) {\n  <span class=\"hljs-keyword\">return</span> str.<span class=\"hljs-title function_\">toLowerCase</span>().<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-regexp\">/(?:^|\\s)\\w/g</span>, <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">c</span>) {\n  <span class=\"hljs-keyword\">return</span> c.<span class=\"hljs-title function_\">toUpperCase</span>();\n  }); }\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( <span class=\"hljs-title function_\">titleize</span>(<span class=\"hljs-string\">&#x27;my name is epeli&#x27;</span>) );\n<span class=\"hljs-comment\">// =&gt; &quot;My Name Is Epeli&quot;</span>\n</code></pre>\n<p>思路是找到每个单词的首字母，当然这里不使用非捕获匹配也是可以的。</p>\n<h4>3.5.3. 驼峰化</h4>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">camelize</span> (str) {\n  <span class=\"hljs-keyword\">return</span> str.<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-regexp\">/[-_\\s]+(.)?/g</span>, <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">match, c</span>) {\n  <span class=\"hljs-keyword\">return</span> c ? c.<span class=\"hljs-title function_\">toUpperCase</span>() : <span class=\"hljs-string\">&#x27;&#x27;</span>;\n  }); }\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( <span class=\"hljs-title function_\">camelize</span>(<span class=\"hljs-string\">&#x27;-moz-transform&#x27;</span>) );\n<span class=\"hljs-comment\">// =&gt; &quot;MozTransform</span>\n</code></pre>\n<p>驼峰化的逆过程。</p>\n<h4>3.5.5. <code>HTML</code> 转义和反转义</h4>\n<pre class=\"hljs\"><code><span class=\"hljs-comment\">// 将HTML特殊字符转换成等值的实体</span>\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">escapeHTML</span> (str) {\n  <span class=\"hljs-keyword\">var</span> escapeChars = {\n  <span class=\"hljs-string\">&#x27;&lt;&#x27;</span> : <span class=\"hljs-string\">&#x27;lt&#x27;</span>,\n  <span class=\"hljs-string\">&#x27;&gt;&#x27;</span> : <span class=\"hljs-string\">&#x27;gt&#x27;</span>,\n  <span class=\"hljs-string\">&#x27;&quot;&#x27;</span> : <span class=\"hljs-string\">&#x27;quot&#x27;</span>,\n  <span class=\"hljs-string\">&#x27;&amp;&#x27;</span> : <span class=\"hljs-string\">&#x27;amp&#x27;</span>,\n  <span class=\"hljs-string\">&#x27;\\&#x27;&#x27;</span> : <span class=\"hljs-string\">&#x27;#39&#x27;</span>\n  };\n  <span class=\"hljs-keyword\">return</span> str.<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RegExp</span>(<span class=\"hljs-string\">&#x27;[&#x27;</span> + <span class=\"hljs-title class_\">Object</span>.<span class=\"hljs-title function_\">keys</span>(escapeChars).<span class=\"hljs-title function_\">join</span>(<span class=\"hljs-string\">&#x27;&#x27;</span>) +<span class=\"hljs-string\">&#x27;]&#x27;</span>, <span class=\"hljs-string\">&#x27;g&#x27;</span>),\n<span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">match</span>) {\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&#x27;&amp;&#x27;</span> + escapeChars[match] + <span class=\"hljs-string\">&#x27;;&#x27;</span>;\n  }); }\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( escapeHTML(<span class=\"hljs-string\">&#x27;&lt;div&gt;Blah blah blah&lt;/div&gt;&#x27;</span>) );\n<span class=\"hljs-comment\">// =&gt; &quot;&amp;lt;div&amp;gt;Blah blah blah&amp;lt;/div&amp;gt&quot;;</span>\n</code></pre>\n<p>其中使用了用构造函数生成的正则，然后替换相应的格式就行了，这个跟本章没多大关系。</p>\n<p>倒是它的逆过程，使用了括号，以便提供引用，也很简单，如下：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-comment\">// 实体字符转换为等值的HTML。</span>\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">unescapeHTML</span> (str) {\n  <span class=\"hljs-keyword\">var</span> htmlEntities = {\n  <span class=\"hljs-attr\">nbsp</span>: <span class=\"hljs-string\">&#x27; &#x27;</span>,\n  <span class=\"hljs-attr\">lt</span>: <span class=\"hljs-string\">&#x27;&lt;&#x27;</span>,\n  <span class=\"hljs-attr\">gt</span>: <span class=\"hljs-string\">&#x27;&gt;&#x27;</span>,\n  <span class=\"hljs-attr\">quot</span>: <span class=\"hljs-string\">&#x27;&quot;&#x27;</span>,\n  <span class=\"hljs-attr\">amp</span>: <span class=\"hljs-string\">&#x27;&amp;&#x27;</span>,\n  <span class=\"hljs-attr\">apos</span>: <span class=\"hljs-string\">&#x27;\\&#x27;&#x27;</span>\n  };\n  <span class=\"hljs-keyword\">return</span> str.<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-regexp\">/\\&amp;([^;]+);/g</span>, <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">match, key</span>) {\n  <span class=\"hljs-keyword\">if</span> (key <span class=\"hljs-keyword\">in</span> htmlEntities) {\n  <span class=\"hljs-keyword\">return</span> htmlEntities[key];\n  }\n  <span class=\"hljs-keyword\">return</span> match;\n  }); }\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( unescapeHTML(<span class=\"hljs-string\">&#x27;&amp;lt;div&amp;gt;Blah blah blah&amp;lt;/div&amp;gt;&#x27;</span>) );\n<span class=\"hljs-comment\">// =&gt; &quot;&lt;div&gt;Blah blah blah&lt;/div&gt;&quot;</span>\n</code></pre>\n<p>通过 <code>key</code> 获取相应的分组引用，然后作为对象的键。</p>\n<h4>3.5.6. 匹配成对标签</h4>\n<p>要求匹配：</p>\n<pre class=\"hljs\"><code>&lt;title&gt;regular expression&lt;/title&gt;\n<span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>laoyao bye bye<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span></span>\n</code></pre>\n<p>不匹配：</p>\n<pre class=\"hljs\"><code>&lt;title&gt;wrong!&lt;/p&gt;\n</code></pre>\n<p>匹配一个开标签，可以使用正则 <code>&lt;[^&gt;]+&gt;</code>，</p>\n<p>匹配一个闭标签，可以使用 <code>&lt;\\/[^&gt;]+&gt;</code>，</p>\n<p>但是要求匹配成对标签，那就需要使用反向引用，如：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/&lt;([^&gt;]+)&gt;[\\d\\D]*&lt;\\/\\1&gt;/</span>;\n<span class=\"hljs-keyword\">var</span> string1 = <span class=\"hljs-string\">&quot;&lt;title&gt;regular expression&lt;/title&gt;&quot;</span>;\n<span class=\"hljs-keyword\">var</span> string2 = <span class=\"hljs-string\">&quot;&lt;p&gt;laoyao bye bye&lt;/p&gt;&quot;</span>;\n<span class=\"hljs-keyword\">var</span> string3 = <span class=\"hljs-string\">&quot;&lt;title&gt;wrong!&lt;/p&gt;&quot;</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(string1) ); <span class=\"hljs-comment\">// true</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(string2) ); <span class=\"hljs-comment\">// true</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(string3) ); <span class=\"hljs-comment\">// false</span>\n</code></pre>\n<p>其中开标签 <code>&lt;[\\^&gt;]+&gt;</code> 改成 <code>&lt;([^&gt;]+)&gt;</code>，使用括号的目的是为了后面使用<strong>反向引用</strong>，而提供分组。</p>\n<p>闭标签使用了反向引用，<code>&lt;\\/\\1&gt;</code>。</p>\n<p>另外，<code>[\\d\\D]</code>的意思是，这个字符是<strong>数字或者不是数字</strong>，因此，也就是匹配任意字符的意思。</p>\n<h3>3.6 本章小结</h3>\n<p>重点理解括号可以提供分组，我们可以提取数据，应该就可以了。</p>\n<h2>4. 第四章 正则表达式回溯法原理</h2>\n<p>学习正则表达式，是需要懂点儿匹配原理的。</p>\n<p>而研究匹配原理时，有两个字出现的频率比较高：“回溯”。</p>\n<p>听起来挺高大上，事实上却是一个比较容易理解的概念。</p>\n<p>因此，本章就简单扼要地说清楚回溯到底是什么东西。</p>\n<p>内容包括：</p>\n<p><strong>没有回溯的匹配</strong></p>\n<p><strong>有回溯的匹配</strong></p>\n<p><strong>常见的回溯形式</strong></p>\n<h3>4.1. 没有回溯的匹配</h3>\n<p>假设我们的正则是 <code>/ab{1,3}c/</code>，其可视化形式是：</p>\n<img src=\"../../assets/微信截图_20211219152846.png\" style=\"display: flex; margin: auto; width: 60%;\"/>\n<p>而当目标字符串是 <code>&quot;abbbc&quot;</code> 时，就没有所谓的“回溯”。其匹配过程是：</p>\n<img src=\"../../assets/微信截图_20211219153236.png\" style=\"display: flex; margin: auto; width: 60%;\"/>\n<p>其中子表达式 <code>b{1,3}</code> 表示 <code>&quot;b&quot;</code> 字符连续出现 <code>1</code> 到 <code>3</code> 次。</p>\n<h3>4.2. 有回溯的匹配</h3>\n<p>如果目标字符串是<code>&quot;abbc&quot;</code>，中间就有回溯。</p>\n<img src=\"../../assets/微信截图_20211219154202.png\" style=\"display: flex; margin: auto; width: 60%;\"/>\n<p>图中第 <code>5</code> 步有红颜色，表示匹配不成功。此时 <code>b{1,3}</code> 已经匹配到了 <code>2</code> 个字符 <code>&quot;b&quot;</code>，准备尝试第三个时，</p>\n<p>结果发现接下来的字符是 <code>&quot;c&quot;</code>。那么就认为 <code>b{1,3}</code> 就已经匹配完毕。然后状态又回到之前的状态（即 第 <code>6</code> 步与第 <code>4</code> 步一样），</p>\n<p>最后再用子表达式 <code>c</code>，去匹配字符 <code>&quot;c&quot;</code>。当然，此时整个表达式匹配成功了。</p>\n<p>图中的第 <code>6</code> 步，就是<code>“回溯”</code>。</p>\n<p>你可能对此没有感觉，这里我们再举一个例子。正则是：</p>\n<img src=\"../../assets/微信截图_20211219154447.png\" style=\"display: flex; margin: auto; width: 60%;\"/>\n<p>目标字符串是<code>&quot;abbbc&quot;</code>，匹配过程是：</p>\n<img src=\"../../assets/微信截图_20211219154628.png\" style=\"display: flex; margin: auto; width: 60%;\"/>\n<p>其中第 <code>7</code> 步和第 <code>10</code> 步是回溯。第 <code>7</code> 步与第 <code>4</code> 步一样，此时 <code>b{1,3}</code> 匹配了两个 <code>&quot;b&quot;</code>，</p>\n<p>而第 <code>10</code> 步与 第 <code>3</code> 步一样，此时 <code>b{1,3}</code> 只匹配了一个 <code>&quot;b&quot;</code>，这也是 <code>b{1,3}</code> 的最终匹配结果。</p>\n<p>这里再看一个清晰的回溯，正则是：</p>\n<img src=\"../../assets/微信截图_20211219155731.png\" style=\"display: flex; margin: auto; width: 60%;\"/>\n<p>目标字符串是：<code>&quot;abc&quot;de</code>，匹配过程是：</p>\n<img src=\"../../assets/微信截图_20211219155900.png\" style=\"display: flex; margin: auto; width: 60%;\"/>\n<p>图中省略了尝试匹配双引号失败的过程。可以看出 <code>.*</code> 是非常影响效率的。</p>\n<p>为了减少一些不必要的回溯，可以把正则修改为 <code>/&quot;[^&quot;]*&quot;/。</code></p>\n<h3>4.3. 常见的回溯形式</h3>\n<p>正则表达式匹配字符串的这种方式，有个学名，叫<strong>回溯法</strong>。</p>\n<blockquote>\n<p>回溯法也称试探法，它的基本思想是：从问题的某一种状态（初始状态）出发，搜索从这种状态出发所能达到的所有“状态”，当一条路走到“尽头”的时候（不能再前进），再后退一步或若干步，从另一种可能“状态”出发，继续搜索，直到所有的“路径”（状态）都试探过。这种不断“前进”、 不断“回溯”寻找解的方法，就称作“回溯法”。 — 百度百科</p>\n</blockquote>\n<p>本质上就是<strong>深度优先搜索算法</strong>。其中退到之前的某一步这一过程，我们称为<code>“回溯”</code>。从上面的描述过程中，可以看出，路走不通时，就会发生“回溯”。即，尝试匹配失败时，接下来的一步通常就是回溯。</p>\n<p>道理，我们是懂了。那么 <code>JavaScript</code> 中正则表达式会产生回溯的地方都有哪些呢？</p>\n<h4>4.3.1 贪婪量词</h4>\n<p>之前的例子都是贪婪量词相关的。比如 <code>b{1,3}</code>，因为其是贪婪的，尝试可能的顺序是从多往少的方向去尝 试。</p>\n<p>首先会尝试 <code>&quot;bbb&quot;</code>，然后再看整个正则是否能匹配。不能匹配时，吐出一个 <code>&quot;b&quot;</code>，即在 <code>&quot;bb&quot;</code> 的基础上，再继续尝试。</p>\n<p>如果还不行，再吐出一个，再试。如果还不行呢？只能说明匹配失败了。</p>\n<p>虽然局部匹配是贪婪的，但也要满足整体能正确匹配。否则，皮之不存，毛将焉附？</p>\n<p>此时我们不禁会问，如果当多个贪婪量词挨着存在，并相互有冲突时，此时会是怎样？</p>\n<p>答案是，先下手为强！因为深度优先搜索。测试如下：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;12345&quot;</span>;\n<span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/(\\d{1,3})(\\d{1,3})/</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( string.<span class=\"hljs-title function_\">match</span>(regex) );\n<span class=\"hljs-comment\">// =&gt; [&quot;12345&quot;, &quot;123&quot;, &quot;45&quot;, index: 0, input: &quot;12345&quot;]</span>\n</code></pre>\n<p>其中，前面的 <code>\\d{1,3}</code> 匹配的是 <code>&quot;123&quot;</code>，后面的 <code>\\d{1,3}</code> 匹配的是 <code>&quot;45&quot;</code>。</p>\n<h4>4.3.2 惰性量词</h4>\n<p>惰性量词就是在贪婪量词后面加个问号。表示<strong>尽可能少的匹配</strong>，比如：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;12345&quot;</span>;\n<span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/(\\d{1,3}?)(\\d{1,3})/</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( string.<span class=\"hljs-title function_\">match</span>(regex) );\n<span class=\"hljs-comment\">// =&gt; [&quot;1234&quot;, &quot;1&quot;, &quot;234&quot;, index: 0, input: &quot;12345&quot;]</span>\n</code></pre>\n<p>其中 <code>\\d{1,3}?</code> 只匹配到一个字符 <code>&quot;1&quot;</code>，而后面的 <code>\\d{1,3}</code> 匹配了 <code>&quot;234&quot;</code>。</p>\n<p><strong>虽然惰性量词不贪，但也会有回溯的现象</strong>。比如正则是：</p>\n<img src=\"../../assets/微信截图_20211219173819.png\" style=\"display: flex; margin: auto; width: 60%;\"/>\n<p>目标字符串是 <code>&quot;12345&quot;</code>，匹配过程是：</p>\n<img src=\"../../assets/微信截图_20211219174005.png\" style=\"display: flex; margin: auto; width: 60%;\"/>\n<p>知道你不贪、很知足，但是为了整体匹配成，没办法，也只能给你多塞点了。因此最后 <code>\\d{1,3}?</code> 匹配的字 符是 <code>&quot;12&quot;</code>，是两个数字，而不是一个。</p>\n<h4>4.3.3 分支结构</h4>\n<p>我们知道分支也是惰性的，比如 <code>/can|candy/</code>，去匹配字符串 <code>&quot;candy&quot;</code>，得到的结果是 <code>&quot;can&quot;</code>，因为分支会一个一个尝试，如果前面的满足了，后面就不会再试验了。</p>\n<p><strong>分支结构</strong>，可能前面的<strong>子模式</strong>会形成了<strong>局部匹配</strong>，如果接下来表达式整体不匹配时，仍会继续尝试剩下的分支。这种尝试也可以看成一种回溯。</p>\n<p>比如正则：</p>\n<img src=\"../../assets/微信截图_20211219174935.png\" style=\"display: flex; margin: auto; width: 60%;\"/>\n<p>目标字符串是 <code>&quot;candy&quot;</code>，匹配过程：</p>\n<img src=\"../../assets/微信截图_20211219175244.png\" style=\"display: flex; margin: auto; width: 60%;\"/>\n<p>上面第 <code>5</code> 步，虽然没有回到之前的状态，但仍然回到了分支结构，尝试下一种可能。所以，可以认为它是 一种回溯的。</p>\n<h3>4.4. 本章小结</h3>\n<p>其实回溯法，很容易掌握的。</p>\n<p>简单总结就是，正因为有多种可能，所以要一个一个试。直到，要么到某一步时，整体匹配成功了；要么最 后都试完后，发现整体匹配不成功。</p>\n<p>贪婪量词“试”的策略是：<strong>买衣服砍价</strong>。价钱太高了，便宜点，不行，再便宜点。</p>\n<p>惰性量词“试”的策略是：<strong>卖东西加价</strong>。给少了，再多给点行不，还有点少啊，再给点。</p>\n<p>分支结构“试”的策略是：<strong>货比三家</strong>。这家不行，换一家吧，还不行，再换。</p>\n<p>既然有<strong>回溯</strong>的过程，那么<strong>匹配效率肯定低一些</strong>。相对谁呢？相对那些 <code>DFA</code> 引擎, <code>DFA</code> 是“确定型有限自动 机”的简写。</p>\n<p>而 <code>JavaScript</code> 的正则引擎是 <code>NFA，NFA</code> 是“非确定型有限自动机”的简写。</p>\n<p>大部分语言中的正则都是 <code>NFA</code>，为啥它这么流行呢？</p>\n<p>答：你别看我匹配慢，但是我编译快啊，而且我还有趣哦。</p>\n<h2>5. 第五章 正则表达式的拆分</h2>\n<p>对于一门语言的掌握程度怎么样，可以有两个角度来衡量：读和写。</p>\n<p>不仅要求自己能解决问题，还要看懂别人的解决方案。代码是这样，正则表达式也是这样。</p>\n<p>正则这门语言跟其他语言有一点不同，它通常就是一大堆字符，而没有所谓“语句”的概念。</p>\n<p>如何能正确地把一大串正则拆分成一块一块的，成为了破解“天书”的关键。</p>\n<p>本章就解决这一问题，内容包括：</p>\n<p>结构和操作符</p>\n<p>注意要点</p>\n<p>案例分析</p>\n<h3>5.1. 结构和操作符</h3>\n<p>编程语言一般都有操作符。只要有操作符，就会出现一个问题。当一大堆操作在一起时，先操作谁，又后操作谁呢？为了不产生歧义，就需要语言本身定义好操作顺序，即所谓的优先级。</p>\n<p>而在正则表达式中，操作符都体现在结构中，即由<strong>特殊字符</strong>和<strong>普通字符</strong>所代表的一个个特殊整体。</p>\n<p><code>JavaScript</code> 正则表达式中，都有哪些结构呢？</p>\n<p><strong>字符字面量</strong>、<strong>字符组</strong>、<strong>量词</strong>、<strong>锚</strong>、<strong>分组</strong>、<strong>选择分支</strong>、<strong>反向引用</strong>。</p>\n<p>具体含义简要回顾如下：</p>\n<table>\n<thead>\n<tr>\n<th>结构</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>字面量</td>\n<td>匹配一个具体字符，包括<strong>不用转义的和需要转义</strong>的。比如 <code>a</code> 匹配字符 <code>&quot;a&quot;</code>， 又比如 <code>\\n</code> 匹配<strong>换行符</strong>，又比如 <code>\\.</code> 匹配<strong>小数点</strong>。</td>\n</tr>\n<tr>\n<td>字符组</td>\n<td>匹配一个字符，可以是多种可能之一，比如 <code>[0-9]</code>，表示<strong>匹配一个数字</strong>。也有 <code>\\d</code> 的简写形式。另外还有<strong>反义字符组</strong>，表示可以是除了特定字符之外任何一个字符，比如 <code>[^0-9]</code>， 表示一个<strong>非数字字符</strong>，也有 <code>\\D</code> 的简写形式。</td>\n</tr>\n<tr>\n<td>量词</td>\n<td>表示一个字符连续出现，比如 <code>a{1,3}</code> 表示 <code>&quot;a&quot;</code> 字符连续出现 <code>3</code> 次。另外还有常见的简写形式，比如 <code>a+</code> 表示 <code>&quot;a&quot;</code> 字符连续出现至少一次。</td>\n</tr>\n<tr>\n<td>锚</td>\n<td>匹配一个位置，<strong>而不是字符</strong>。比如 <code>^</code> 匹配字符串的开头，又比如 <code>\\b</code> 匹配<strong>单词边界</strong>， 又比如 <code>(?=\\d)</code> 表示<strong>数字前面的位置</strong>。</td>\n</tr>\n<tr>\n<td>分组</td>\n<td>用括号表示一个整体，比如 <code>(ab)+</code>，表示 <code>&quot;ab&quot;</code> 两个字符连续出现多次，也可以使用非捕获分组 <code>(?:ab)+</code>。</td>\n</tr>\n<tr>\n<td>分支</td>\n<td>多个子表达式多选一，比如 <code>abc|bcd</code>，表达式匹配 <code>&quot;abc&quot; </code>或者 <code>&quot;bcd&quot;</code> 字符子串。 <strong>反向引用</strong>，比如 <code>\\2</code>，表示引用第 <code>2</code> 个分组。</td>\n</tr>\n</tbody>\n</table>\n<p>其中涉及到的操作符有：</p>\n<table>\n<thead>\n<tr>\n<th>操作符描述</th>\n<th>操作符</th>\n<th>优先级</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>转义符</strong></td>\n<td><code>\\</code></td>\n<td><code>1</code></td>\n</tr>\n<tr>\n<td><strong>括号和方括号</strong></td>\n<td><code>(…)、(?:…)、(?=…)、(?!…)、[…]</code></td>\n<td><code>2</code></td>\n</tr>\n<tr>\n<td><strong>量词限定符</strong></td>\n<td><code> {m}、{m,n}、{m,}、?、*、+</code></td>\n<td><code>3</code></td>\n</tr>\n<tr>\n<td><strong>位置和序列</strong></td>\n<td><code>^、$、\\元字符、一般字符</code></td>\n<td><code>4</code></td>\n</tr>\n<tr>\n<td><strong>管道符（竖杠）</strong></td>\n<td><code>|</code></td>\n<td><code>5</code></td>\n</tr>\n</tbody>\n</table>\n<p>上面操作符的优先级从上至下，由高到低。</p>\n<p>这里，我们来分析一个正则：</p>\n<pre class=\"hljs\"><code>/ab?(c|de*)+|fg/\n</code></pre>\n<p>由于括号的存在，所以，<code>(c|de*)</code> 是一个整体结构。</p>\n<p>在 <code>(c|de*)</code> 中，注意其中的量词 ，因此 <code>e</code> 是一个整体结构。</p>\n<p>又因为分支结构 <code>|</code> 优先级最低，因此 <code>c</code> 是一个整体、而 <code>de*</code> 是另一个整体。</p>\n<p>同理，整个正则分成了 <code>a、b?、(…)+、f、g</code>。而由于分支的原因， 又可以分成 <code>ab?(c|de*)+</code> 和 <code>fg</code> 这两部分。</p>\n<p>希望你没被我绕晕，上面的分析可用其可视化形式描述如下：</p>\n<img src=\"../../assets/微信截图_20211219225240.png\" style=\"display: flex; margin: auto; width: 80%;\"/>\n<h3>5.2. 注意要点</h3>\n<p>关于结构和操作符，还是有几点需要强调：</p>\n<h4>5.2.1 匹配字符串整体问题</h4>\n<p>因为是要匹配整个字符串，我们经常会在正则前后中加上锚 <code>^</code> 和 <code>$</code>。</p>\n<p>比如要匹配目标字符串 <code>&quot;abc&quot;</code> 或者 <code>&quot;bcd&quot;</code> 时，如果一不小心，就会写成 <code>/^abc|bcd$/</code>。</p>\n<p>而位置字符和字符序列优先级要比竖杠高，故其匹配的结构是：</p>\n<img src=\"../../assets/微信截图_20211219230752.png\" style=\"display: flex; margin: auto; width: 50%;\"/>\n<h4>5.2.2 量词连缀问题</h4>\n<p>假设，要匹配这样的字符串：</p>\n<ol>\n<li>每个字符为 <code>&quot;a、&quot;b&quot;、&quot;c&quot;</code> 任选其一，</li>\n<li>字符串的长度是 <code>3</code> 的倍数。</li>\n</ol>\n<p>此时正则不能想当然地写成 <code>/^[abc]{3}+$/</code>，这样会报错，说 <code>+</code> 前面没什么可重复的：</p>\n<img src=\"../../assets/微信截图_20211220000031.png\" style=\"display: flex; margin: auto; width: 80%;\"/>\n<p>此时要修改成：</p>\n<img src=\"../../assets/微信截图_20211220000110.png\" style=\"display: flex; margin: auto; width: 50%;\"/>\n<h4>5.2.3 元字符转义问题</h4>\n<p>所谓元字符，就是正则中有特殊含义的字符。</p>\n<p>所有结构里，用到的元字符总结如下：</p>\n<pre class=\"hljs\"><code>^、$、.、*、+、?、|、\\、/、(、)、[、]、{、}、=、!、:、- ,\n</code></pre>\n<p>当匹配上面的字符本身时，可以一律转义：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;^$.*+?|\\\\/[]{}=!:-,&quot;</span>;\n<span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/\\^\\$\\.\\*\\+\\?\\|\\\\\\/\\[\\]\\{\\}\\=\\!\\:\\-\\,/</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(string) );\n<span class=\"hljs-comment\">// =&gt; true</span>\n</code></pre>\n<p>其中 <code>string</code> 中的 <code>\\</code> 字符也要转义的。</p>\n<p>另外，在 <code>string</code> 中，也可以把每个字符转义，当然，转义后的结果仍是本身：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;^$.*+?|\\\\/[]{}=!:-,&quot;</span>;\n<span class=\"hljs-keyword\">var</span> string2 = <span class=\"hljs-string\">&quot;\\^\\$\\.\\*\\+\\?\\|\\\\\\/\\[\\]\\{\\}\\=\\!\\:\\-\\,&quot;</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( string == string2 );\n<span class=\"hljs-comment\">// =&gt; true</span>\n</code></pre>\n<p>现在的问题是，是不是每个字符都需要转义呢？否，看情况。</p>\n<h5>5.2.3.1. 字符组中的元字符</h5>\n<p>跟字符组相关的元字符有 <code>[、]、^、-</code>。因此在会引起歧义的地方进行转义。例如开头的 <code>^</code> 必须转义，不然会把整个字符组，看成反义字符组。</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;^$.*+?|\\\\/[]{}=!:-,&quot;</span>;\n<span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/[\\^$.*+?|\\\\/\\[\\]{}=!:\\-,]/g</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( string.<span class=\"hljs-title function_\">match</span>(regex) );\n<span class=\"hljs-comment\">// =&gt; [&quot;^&quot;, &quot;$&quot;, &quot;.&quot;, &quot;*&quot;, &quot;+&quot;, &quot;?&quot;, &quot;|&quot;, &quot;\\&quot;, &quot;/&quot;, &quot;[&quot;, &quot;]&quot;, &quot;{&quot;, &quot;}&quot;, &quot;=&quot;, &quot;!&quot;, &quot;:&quot;,</span>\n<span class=\"hljs-string\">&quot;-&quot;</span>, <span class=\"hljs-string\">&quot;,&quot;</span>]\n</code></pre>\n<h5>5.2.3.2. 匹配 <code>&quot;[abc]&quot;</code> 和 <code>&quot;{3,5}&quot;</code></h5>\n<p>我们知道 <code>[abc]</code>，是个字符组。如果要匹配字符串 &quot;[abc]&quot; 时，该怎么办？</p>\n<p>可以写成 <code>/\\[abc\\]/</code>，也可以写成 <code>/\\[abc]/</code>，测试如下：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;[abc]&quot;</span>;\n<span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/\\[abc]/g</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( string.<span class=\"hljs-title function_\">match</span>(regex)[<span class=\"hljs-number\">0</span>] );\n<span class=\"hljs-comment\">// =&gt; &quot;[abc]&quot;</span>\n</code></pre>\n<p>只需要在第一个方括号转义即可，因为后面的方括号构不成字符组，正则不会引发歧义，自然不需要转义。</p>\n<p>同理，要匹配字符串 <code>&quot;{3,5}&quot;</code>，只需要把正则写成 <code>/\\{3,5}/</code> 即可。</p>\n<p>另外，我们知道量词有简写形式 <code>{m,}</code>，却没有 <code>{,n}</code> 的情况。虽然后者不构成量词的形式，但此时并不会报 错。当然，匹配的字符串也是 <code>&quot;{,n}&quot;</code>，测试如下：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;{,3}&quot;</span>;\n<span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/{,3}/g</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( string.<span class=\"hljs-title function_\">match</span>(regex)[<span class=\"hljs-number\">0</span>] );\n<span class=\"hljs-comment\">// =&gt; &quot;{,3}&quot;</span>\n</code></pre>\n<h5>5.2.3.3. 其余情况</h5>\n<p>比如 <code>=、!、:、-、,</code> 等符号，只要不在特殊结构中，并不需要转义。</p>\n<p>但是，括号需要前后都转义的，如 <code>/\\(123\\)/</code>。 至于剩下的 <code>^、$、.、*、+、?、|、\\、/</code> 等字符，只要不在字符组内，都需要转义的。</p>\n<h3>5.3. 案例分析</h3>\n<p>接下来分析两个例子，一个简单的，一个复杂的。</p>\n<h4>5.3.1 身份证</h4>\n<p>正则表达式是：</p>\n<pre class=\"hljs\"><code>/^(\\d{<span class=\"hljs-number\">15</span>}|\\d{<span class=\"hljs-number\">17</span>}[\\dxX])$/\n</code></pre>\n<p>因为竖杠 <code>|</code> 的优先级最低，所以正则分成了两部分 <code>\\d{15} 和 \\d{17}[\\dxX]。</code></p>\n<p><code>\\d{15}</code> 表示 <code>15</code> 位连续数字。</p>\n<p><code>\\d{17}[\\dxX]</code> 表示 <code>17</code> 位连续数字，最后一位可以是数字，可以大小写字母 <code>&quot;x&quot;。</code></p>\n<p>可视化如下：</p>\n<img src=\"../../assets/微信截图_20211220005321.png\" style=\"display: flex; margin: auto; width: 60%;\"/>\n<h4>5.3.2 IPV4 地址</h4>\n<p>正则表达式是：</p>\n<pre class=\"hljs\"><code>/^((<span class=\"hljs-number\">0</span>{<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">2</span>}\\d|<span class=\"hljs-number\">0</span>?\\d{<span class=\"hljs-number\">2</span>}|<span class=\"hljs-number\">1</span>\\d{<span class=\"hljs-number\">2</span>}|<span class=\"hljs-number\">2</span>[<span class=\"hljs-number\">0</span>-<span class=\"hljs-number\">4</span>]\\d|<span class=\"hljs-number\">25</span>[<span class=\"hljs-number\">0</span>-<span class=\"hljs-number\">5</span>])\\.){<span class=\"hljs-number\">3</span>}(<span class=\"hljs-number\">0</span>{<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">2</span>}\\d|<span class=\"hljs-number\">0</span>?\\d{<span class=\"hljs-number\">2</span>}|<span class=\"hljs-number\">1</span>\\d{<span class=\"hljs-number\">2</span>}|<span class=\"hljs-number\">2</span>[<span class=\"hljs-number\">0</span>-<span class=\"hljs-number\">4</span>]\\d|<span class=\"hljs-number\">25</span>[<span class=\"hljs-number\">0</span>-<span class=\"hljs-number\">5</span>])$/\n</code></pre>\n<p>这个正则，看起来非常吓人。但是熟悉优先级后，会立马得出如下的结构：</p>\n<pre class=\"hljs\"><code>((…)\\.){<span class=\"hljs-number\">3</span>}(…)\n</code></pre>\n<p>其中，两个 <code>(…)</code> 是一样的结构。表示匹配的是 <code>3</code> 位数字。因此整个结构是</p>\n<p>3位数.3位数.3位数.3位数</p>\n<p>然后再来分析 <code>(…)：</code></p>\n<pre class=\"hljs\"><code>(<span class=\"hljs-number\">0</span>{<span class=\"hljs-number\">0</span>,<span class=\"hljs-number\">2</span>}\\d|<span class=\"hljs-number\">0</span>?\\d{<span class=\"hljs-number\">2</span>}|<span class=\"hljs-number\">1</span>\\d{<span class=\"hljs-number\">2</span>}|<span class=\"hljs-number\">2</span>[<span class=\"hljs-number\">0</span>-<span class=\"hljs-number\">4</span>]\\d|<span class=\"hljs-number\">25</span>[<span class=\"hljs-number\">0</span>-<span class=\"hljs-number\">5</span>])\n</code></pre>\n<p>它是一个多选结构，分成<code>5</code>个部分：</p>\n<p><code>0{0,2}\\d</code>，匹配一位数，包括 <code>&quot;0&quot;</code> 补齐的。比如，<code>&quot;9&quot;、&quot;09&quot;、&quot;009&quot;；</code></p>\n<p><code>0?\\d{2}</code>，匹配两位数，包括 <code>&quot;0&quot;</code> 补齐的，也包括一位数；</p>\n<p><code>1\\d{2}</code>，匹配 <code>&quot;100&quot; 到 &quot;199&quot;;</code></p>\n<p><code>2[0-4]\\d</code>，匹配 <code>&quot;200&quot; 到 &quot;249&quot;；</code></p>\n<p><code>25[0-5]</code>，匹配 <code>&quot;250&quot; 到 &quot;255&quot;。</code></p>\n<p>最后来看一下其可视化形式：</p>\n<img src=\"../../assets/微信截图_20211220005910.png\" style=\"display: flex; margin: auto; width: 80%;\"/>\n<h3>5.4. 本章小结</h3>\n<p>掌握正则表达式中的优先级后，再看任何正则应该都有信心分析下去了。</p>\n<p>至于例子，不一而足，没有写太多。</p>\n<p>这里稍微总结一下，竖杠的优先级最低，即最后运算。 只要知道这一点，就能读懂大部分正则。</p>\n<p>另外关于元字符转义问题，当自己不确定与否时，尽管去转义，总之是不会错的。</p>\n<h2>6. 第六章 正则表达式的构建</h2>\n<p>对于一门语言的掌握程度怎么样，可以有两个角度来衡量：读和写。</p>\n<p>不仅要看懂别人的解决方案，也要能独立地解决问题。代码是这样，正则表达式也是这样。 与“读”相比，“写”往往更为重要，这个道理是不言而喻的。</p>\n<p>对正则的运用，首重就是：如何针对问题，构建一个合适的正则表达式？</p>\n<p>本章就解决该问题，内容包括：</p>\n<p><strong>平衡法则</strong></p>\n<p><strong>构建正则前提</strong></p>\n<p><strong>准确性</strong></p>\n<p><strong>效率</strong></p>\n<h3>6.1. 平衡法则</h3>\n<p>构建正则有一点非常重要，需要做到下面几点的平衡：</p>\n<p><strong>匹配预期的字符串</strong></p>\n<p><strong>不匹配非预期的字符串</strong></p>\n<p><strong>可读性和可维护性</strong></p>\n<p><strong>效率</strong></p>\n<h3>6.2. 构建正则前提</h3>\n<h4>6.2.1. 是否能使用正则？</h4>\n<p>正则太强大了，以至于我们随便遇到一个操作字符串问题时，都会下意识地去想，用正则该怎么做。但我们始终要提醒自己，正则虽然强大，但不是万能的，很多看似很简单的事情，还是做不到的。</p>\n<p>比如匹配这样的字符串：<code>1010010001…。</code></p>\n<p>虽然很有规律，但是只靠正则就是无能为力。</p>\n<h4>6.2.2. 是否有必要使用正则？</h4>\n<p>要认识到正则的局限，不要去研究根本无法完成的任务。同时，也不能走入另一个极端：无所不用正则。能用字符串 <code>API</code> 解决的简单问题，就不该正则出马。</p>\n<p>比如，从日期中提取出年月日，虽然可以使用正则：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;2017-07-01&quot;</span>;\n<span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/^(\\d{4})-(\\d{2})-(\\d{2})/</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( string.<span class=\"hljs-title function_\">match</span>(regex) );\n<span class=\"hljs-comment\">// =&gt; [&quot;2017-07-01&quot;, &quot;2017&quot;, &quot;07&quot;, &quot;01&quot;, index: 0, input: &quot;2017-07-01&quot;]</span>\n</code></pre>\n<p>其实，可以使用字符串的 <code>split</code> 方法来做，即可：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;2017-07-01&quot;</span>;\n<span class=\"hljs-keyword\">var</span> result = string.<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&quot;-&quot;</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( result );\n<span class=\"hljs-comment\">// =&gt; [&quot;2017&quot;, &quot;07&quot;, &quot;01&quot;]</span>\n</code></pre>\n<p>比如，判断是否有问号，虽然可以使用：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;?id=xx&amp;act=search&quot;</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( string.<span class=\"hljs-title function_\">search</span>(<span class=\"hljs-regexp\">/\\?/</span>) );\n<span class=\"hljs-comment\">// =&gt; 0</span>\n</code></pre>\n<p>其实，可以使用字符串的 <code>indexOf</code> 方法：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;?id=xx&amp;act=search&quot;</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( string.<span class=\"hljs-title function_\">indexOf</span>(<span class=\"hljs-string\">&quot;?&quot;</span>) );\n<span class=\"hljs-comment\">// =&gt; 0</span>\n</code></pre>\n<p>比如获取子串，虽然可以使用正则：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;JavaScript&quot;</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( string.<span class=\"hljs-title function_\">match</span>(<span class=\"hljs-regexp\">/.{4}(.+)/</span>)[<span class=\"hljs-number\">1</span>] );\n<span class=\"hljs-comment\">// =&gt; Script</span>\n</code></pre>\n<p>其实，可以直接使用字符串的 <code>substring</code> 或 <code>substr</code> 方法来做：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;JavaScript&quot;</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( string.<span class=\"hljs-title function_\">substring</span>(<span class=\"hljs-number\">4</span>) );\n<span class=\"hljs-comment\">// =&gt; Script</span>\n</code></pre>\n<h4>6.2.3. 是否有必要构建一个复杂的正则？</h4>\n<p>比如密码匹配问题，要求密码长度 <code>6-12</code> 位，由数字、小写字符和大写字母组成，但必须至少包括 2 种字符。</p>\n<pre class=\"hljs\"><code>/(?!^[<span class=\"hljs-number\">0</span>-<span class=\"hljs-number\">9</span>]{<span class=\"hljs-number\">6</span>,<span class=\"hljs-number\">12</span>}$)(?!^[a-z]{<span class=\"hljs-number\">6</span>,<span class=\"hljs-number\">12</span>}$)(?!^[A-Z]{<span class=\"hljs-number\">6</span>,<span class=\"hljs-number\">12</span>}$)^[<span class=\"hljs-number\">0</span>-9A-<span class=\"hljs-title class_\">Za</span>-z]{<span class=\"hljs-number\">6</span>,<span class=\"hljs-number\">12</span>}$/\n</code></pre>\n<p>其实可以使用多个小正则来做：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex1 = <span class=\"hljs-regexp\">/^[0-9A-Za-z]{6,12}$/</span>;\n<span class=\"hljs-keyword\">var</span> regex2 = <span class=\"hljs-regexp\">/^[0-9]{6,12}$/</span>;\n<span class=\"hljs-keyword\">var</span> regex3 = <span class=\"hljs-regexp\">/^[A-Z]{6,12}$/</span>;\n<span class=\"hljs-keyword\">var</span> regex4 = <span class=\"hljs-regexp\">/^[a-z]{6,12}$/</span>;\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">checkPassword</span> (string) {\n  <span class=\"hljs-keyword\">if</span> (!regex1.<span class=\"hljs-title function_\">test</span>(string)) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n  <span class=\"hljs-keyword\">if</span> (regex2.<span class=\"hljs-title function_\">test</span>(string)) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n  <span class=\"hljs-keyword\">if</span> (regex3.<span class=\"hljs-title function_\">test</span>(string)) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n  <span class=\"hljs-keyword\">if</span> (regex4.<span class=\"hljs-title function_\">test</span>(string)) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>; }\n</code></pre>\n<h3>6.3. 准确性</h3>\n<p>所谓准确性，就是能匹配预期的目标，并且不匹配非预期的目标。</p>\n<p>这里提到了“预期”二字，那么我们就需要知道目标的组成规则。</p>\n<p>不然没法界定什么样的目标字符串是符合预期的，什么样的又不是符合预期的。</p>\n<p>下面将举例说明，当目标字符串构成比较复杂时，该如何构建正则，并考虑到哪些平衡。</p>\n<h4>6.3.1. 匹配固定电话</h4>\n<p>比如要匹配如下格式的固定电话号码：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-number\">055188888888</span>\n<span class=\"hljs-number\">0551</span>-<span class=\"hljs-number\">88888888</span>\n(<span class=\"hljs-number\">0551</span>)<span class=\"hljs-number\">88888888</span>\n</code></pre>\n<p>第一步，了解各部分的模式规则。</p>\n<p>上面的电话，总体上分为<strong>区号</strong>和<strong>号码</strong>两部分（不考虑分机号和 <code>&quot;+86&quot;</code> 的情形）。</p>\n<p>区号是 <code>&quot;0&quot;</code> 开头的 <code>3</code> 到 <code>4</code> 位数字，对应的正则是：<code>0\\d{2,3}</code>，</p>\n<p>号码是非 <code>&quot;0&quot;</code> 开头的 <code>7</code> 到 <code>8</code> 位数字，对应的正则是：<code>[1-9]\\d{6,7}，</code></p>\n<p>因此，匹配 <code>&quot;055188888888&quot;</code> 的正则是：<code>/^0\\d{2,3}[1-9]\\d{6,7}$/，</code></p>\n<p>匹配 <code>&quot;0551-88888888&quot;</code> 的正则是：<code>/^0\\d{2,3}-[1-9]\\d{6,7}$/，</code></p>\n<p>匹配 <code>&quot;(0551)88888888&quot;</code> 的正则是：<code>/^\\(0\\d{2,3}\\)[1-9]\\d{6,7}$/。</code></p>\n<p>第二步，明确形式关系。</p>\n<p>这三者情形是或的关系，可以构建分支：</p>\n<pre class=\"hljs\"><code>/^<span class=\"hljs-number\">0</span>\\d{<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>}[<span class=\"hljs-number\">1</span>-<span class=\"hljs-number\">9</span>]\\d{<span class=\"hljs-number\">6</span>,<span class=\"hljs-number\">7</span>}$|^<span class=\"hljs-number\">0</span>\\d{<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>}-[<span class=\"hljs-number\">1</span>-<span class=\"hljs-number\">9</span>]\\d{<span class=\"hljs-number\">6</span>,<span class=\"hljs-number\">7</span>}$|^\\(<span class=\"hljs-number\">0</span>\\d{<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>}\\)[<span class=\"hljs-number\">1</span>-<span class=\"hljs-number\">9</span>]\\d{<span class=\"hljs-number\">6</span>,<span class=\"hljs-number\">7</span>}$/\n</code></pre>\n<p>提取公共部分：</p>\n<pre class=\"hljs\"><code>/^(<span class=\"hljs-number\">0</span>\\d{<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>}|<span class=\"hljs-number\">0</span>\\d{<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>}-|\\(<span class=\"hljs-number\">0</span>\\d{<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>}\\))[<span class=\"hljs-number\">1</span>-<span class=\"hljs-number\">9</span>]\\d{<span class=\"hljs-number\">6</span>,<span class=\"hljs-number\">7</span>}$/\n</code></pre>\n<p>进一步简写：</p>\n<pre class=\"hljs\"><code>/^(<span class=\"hljs-number\">0</span>\\d{<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>}-?|\\(<span class=\"hljs-number\">0</span>\\d{<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>}\\))[<span class=\"hljs-number\">1</span>-<span class=\"hljs-number\">9</span>]\\d{<span class=\"hljs-number\">6</span>,<span class=\"hljs-number\">7</span>}$/\n</code></pre>\n<p>其可视化形式：</p>\n<img src=\"../../assets/微信截图_20211220013239.png\" style=\"display: flex; margin: auto; width: 80%;\"/>\n<p>上面的正则构建过程略显罗嗦，但是这样做，能保证正则是准确的。</p>\n<p>上述三种情形是或的关系，这一点很重要，不然很容易按字符是否出现的情形把正则写成：</p>\n<pre class=\"hljs\"><code>/^\\(?<span class=\"hljs-number\">0</span>\\d{<span class=\"hljs-number\">2</span>,<span class=\"hljs-number\">3</span>}\\)?-?[<span class=\"hljs-number\">1</span>-<span class=\"hljs-number\">9</span>]\\d{<span class=\"hljs-number\">6</span>,<span class=\"hljs-number\">7</span>}$/\n</code></pre>\n<p>虽然也能匹配上述目标字符串，但也会匹配 <code>&quot;(0551-88888888&quot;</code> 这样的字符串。当然，这不是我们想要的。</p>\n<p>其实这个正则也不是完美的，因为现实中，并不是每个 3 位数和 4 位数都是一个真实的区号。</p>\n<p>这就是一个平衡取舍问题，一般够用就行。</p>\n<h4>6.3.2. 匹配浮点数</h4>\n<p>要求匹配如下的格式：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-number\">1.23</span>、+<span class=\"hljs-number\">1.23</span>、-<span class=\"hljs-number\">1.23</span>\n<span class=\"hljs-number\">10</span>、+<span class=\"hljs-number\">10</span>、-<span class=\"hljs-number\">10</span>\n<span class=\"hljs-number\">.2</span>、+<span class=\"hljs-number\">.2</span>、-<span class=\"hljs-number\">.2</span>\n</code></pre>\n<p>可以看出正则分为三部分。</p>\n<p>符号部分：<code>[+-]</code>，</p>\n<p>整数部分：<code>\\d+</code>，</p>\n<p>小数部分：<code>\\.\\d+</code>。</p>\n<p>上述三个部分，并不是全部都出现。如果此时很容易写出如下的正则：</p>\n<p><code>/^[+-]?(\\d+)?(\\.\\d+)?$/</code></p>\n<p>此正则看似没问题，但这个正则也会匹配空字符 <code>&quot;&quot;</code>。</p>\n<p>因为目标字符串的形式关系不是要求每部分都是可选的。</p>\n<p>要匹配 <code>&quot;1.23&quot;、&quot;+1.23&quot;、&quot;-1.23&quot;</code>，可以用<code>/^[+-]?\\d+\\.\\d+$/</code>，</p>\n<p>要匹配 <code>&quot;10&quot;、&quot;+10&quot;、&quot;-10&quot;</code>，可以用<code>/^[+-]?\\d+$/</code>，</p>\n<p>要匹配 <code>&quot;.2&quot;、&quot;+.2&quot;、&quot;-.2&quot;</code>，可以用<code>/^[+-]?\\.\\d+$/</code>。</p>\n<p>因此整个正则是这三者的或的关系，提取公众部分后是：</p>\n<p><code>/^[+-]?(\\d+\\.\\d+|\\d+|\\.\\d+)$/</code></p>\n<p>其可视化形式是：</p>\n<img src=\"../../assets/微信截图_20211221204927.png\" style=\"display: flex; margin: auto; width: 60%;\"/>\n<p>如果要求不匹配 <code>&quot;+.2&quot;</code> 和 <code>&quot;-.2&quot;</code>，此时正则变成：</p>\n<img src=\"../../assets/微信截图_20211221205246.png\" style=\"display: flex; margin: auto; width: 60%;\"/>\n<p>当然，<code>/^[+-]?(\\d+\\.\\d+|\\d+|\\.\\d+)$/</code> 也不是完美的，我们也是做了些取舍，比如：</p>\n<p>它也会匹配 <code>&quot;012&quot;</code> 这样以 <code>&quot;0&quot;</code> 开头的整数。如果要求不匹配的话，需要修改整数部分的正则。一般进行验\n证操作之前，都要经过 trim 和判空。那样的话，也许那个错误正则也就够用了。也可以进一步改写成：\n<code>/^[+-]?(\\d+)?(\\.)?\\d+$/</code>，这样我们就需要考虑可读性和可维护性了。</p>\n<h3>6.4. 效率</h3>\n<p>保证了准确性后，才需要是否要考虑要优化。大多数情形是不需要优化的，除非运行的非常慢。什么情形正\n则表达式运行才慢呢？我们需要考察正则表达式的运行过程（原理）。</p>\n<p>正则表达式的运行分为如下的阶段：</p>\n<ol>\n<li>编译；</li>\n<li>设定起始位置；</li>\n<li>尝试匹配；</li>\n<li>匹配失败的话，从下一位开始继续第 3 步；</li>\n<li>最终结果：匹配成功或失败。</li>\n</ol>\n<p>下面以代码为例，来看看这几个阶段都做了什么：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/\\d+/g</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-property\">lastIndex</span>, regex.<span class=\"hljs-title function_\">exec</span>(<span class=\"hljs-string\">&quot;123abc34def&quot;</span>) );\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-property\">lastIndex</span>, regex.<span class=\"hljs-title function_\">exec</span>(<span class=\"hljs-string\">&quot;123abc34def&quot;</span>) );\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-property\">lastIndex</span>, regex.<span class=\"hljs-title function_\">exec</span>(<span class=\"hljs-string\">&quot;123abc34def&quot;</span>) );\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-property\">lastIndex</span>, regex.<span class=\"hljs-title function_\">exec</span>(<span class=\"hljs-string\">&quot;123abc34def&quot;</span>) );\n<span class=\"hljs-comment\">// =&gt; 0 [&quot;123&quot;, index: 0, input: &quot;123abc34def&quot;]</span>\n<span class=\"hljs-comment\">// =&gt; 3 [&quot;34&quot;, index: 6, input: &quot;123abc34def&quot;]</span>\n<span class=\"hljs-comment\">// =&gt; 8 null</span>\n<span class=\"hljs-comment\">// =&gt; 0 [&quot;123&quot;, index: 0, input: &quot;123abc34def&quot;]</span>\n</code></pre>\n<p>具体分析如下：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/\\d+/g</span>;\n</code></pre>\n<p>当生成一个正则时，引擎会对其进行编译。报错与否出现这这个阶段。</p>\n<pre class=\"hljs\"><code>regex.<span class=\"hljs-title function_\">exec</span>(<span class=\"hljs-string\">&quot;123abc34def&quot;</span>)\n</code></pre>\n<p>当尝试匹配时，需要确定从哪一位置开始匹配。一般情形都是字符串的开头，即第 0 位。</p>\n<p>但当使用 <code>test</code> 和 <code>exec</code> 方法，且正则有 g 时，起始位置是从正则对象的 <code>lastIndex</code> 属性开始。 因此第一次 <code>exec</code> 是从第 0 位开始，而第二次是从 3 开始的。</p>\n<p>设定好起始位置后，就开始尝试匹配了。</p>\n<p>比如第一次 <code>exec</code>，从 0 开始，去尝试匹配，并且成功地匹配到 3 个数字。此时结束时的下标是 2，因此下一次的起始位置是 3。 而第二次，起始下标是 3，但第 3 个字符是 <code>&quot;a&quot;</code>，并不是数字。但此时并不会直接报匹配失败，而是移动到下一位置，即从第 4 位开始继续尝试匹配，但该字符是 <code>&quot;b&quot;</code>，也不是数字。再移动到下一位，是 <code>&quot;c&quot;</code> 仍不行，再移动一位是数字 <code>&quot;3&quot;</code>，此时匹配到了两位数字 <code>&quot;34&quot;</code>。此时，下一次匹配的位置是 <code>&quot;d&quot;</code> 的位置，即第8 位。</p>\n<p>第三次，是从第 8 位开始匹配，直到试到最后一位，也没发现匹配的，因此匹配失败，返回 <code>null</code>。同时设置 <code>lastIndex</code> 为 0，即，如要再尝试匹配的话，需从头开始。</p>\n<p>从上面可以看出，匹配会出现效率问题，主要出现在上面的第 3 阶段和第 4 阶段。 因此，主要优化手法也是针对这两阶段的</p>\n<h4>6.4.1. 使用具体型字符组来代替通配符，来消除回溯</h4>\n<p>而在第三阶段，最大的问题就是回溯。 例如，匹配双引用号之间的字符。如，匹配字符串 <code>123&quot;abc&quot;456</code> 中的 <code>&quot;abc&quot;</code>。</p>\n<p>如果正则用的是：<code>/&quot;.*&quot;/</code>，会在第 <code>3</code> 阶段产生 <code>4</code> 次回溯（粉色表示 <code>.*</code> 匹配的内容）：</p>\n<img src=\"../../assets/微信截图_20211221221651.png\" style=\"display: flex; margin: auto; width: 60%;\"/>\n<p>如果正则用的是：<code>/&quot;.*?&quot;/</code>，会产生 2 次回溯（粉色表示 <code>.*?</code> 匹配的内容）</p>\n<img src=\"../../assets/微信截图_20211221230642.png\" style=\"display: flex; margin: auto; width: 60%;\"/>\n<p>因为回溯的存在，需要引擎保存多种可能中未尝试过的状态，以便后续回溯时使用。注定要占用一定的内存。</p>\n<p>此时要使用具体化的字符组，来代替通配符<code>.</code>，以便消除不必要的字符，此时使用正则 <code>/&quot;[^&quot;]*&quot;/</code>，即可。</p>\n<h4>6.4.2. 使用非捕获型分组</h4>\n<p>因为括号的作用之一是，可以捕获分组和分支里的数据。那么就需要内存来保存它们。</p>\n<p>当我们不需要使用分组引用和反向引用时，此时可以使用非捕获分组。</p>\n<pre class=\"hljs\"><code>例如，/^[-]?(\\d\\.\\d+|\\d+|\\.\\d+)$/ 可以修改成：/^[-]?(?:\\d\\.\\d+|\\d+|\\.\\d+)$/。\n</code></pre>\n<h4>6.4.3. 独立出确定字符</h4>\n<p>例如，<code>/a+/</code> 可以修改成 <code>/aa*/</code>。 因为后者能比前者多确定了字符 <code>&quot;a&quot;</code>。这样会在第四步中，加快判断是否匹配失败，进而加快移位的速度。</p>\n<h4>6.4.4. 提取分支公共部分</h4>\n<p>比如，<code>/^abc|^def/</code> 修改成 <code>/^(?:abc|def)/</code>。</p>\n<p>又比如， <code>/this|that/</code>修改成 <code>/th(?:is|at)/</code>。</p>\n<p>这样做，可以减少匹配过程中可消除的重复。</p>\n<h4>6.4.5. 减少分支的数量，缩小它们的范围</h4>\n<p><code>/red|read/</code> 可以修改成 <code>/rea?d/</code>。</p>\n<p>此时分支和量词产生的回溯的成本是不一样的。但这样优化后，可读性会降低的。</p>\n<h3>6.5. 本章小结</h3>\n<p>本章涉及的内容并不多。</p>\n<p>一般情况下，针对某问题能写出一个满足需求的正则，基本上就可以了。</p>\n<p>至于准确性和效率方面的追求，纯属看个人要求了。我觉得够用就行了。</p>\n<p>关于准确性，本章关心的是最常用的解决思路： 针对每种情形，分别写出正则，然用分支把它们合并在一起，再提取分支公共部分，就能得到准确的正则。</p>\n<p>至于优化，本章没有为了凑数，去写一大堆。了解了匹配原理，常见的优化手法也就这么几种</p>\n<h2>7. 第七章 正则表达式编程</h2>\n<p>什么叫知识，能指导我们实践的东西才叫知识。</p>\n<p>学习一样东西，如果不能使用，最多只能算作纸上谈兵。正则表达式的学习，也不例外。</p>\n<p>掌握了正则表达式的语法后，下一步，也是关键的一步，就是在真实世界中使用它。</p>\n<p>那么如何使用正则表达式呢？有哪些关键的点呢？本章就解决这个问题。</p>\n<p>内容包括：</p>\n<p><strong>正则表达式的四种操作</strong></p>\n<p><strong>相关API注意要点</strong></p>\n<p><strong>真实案例</strong></p>\n<h3>7.1. 正则表达式的四种操作</h3>\n<p>正则表达式是匹配模式，不管如何使用正则表达式，万变不离其宗，都需要先“匹配”。</p>\n<p>有了匹配这一基本操作后，才有其他的操作：<strong>验证、切分、提取、替换</strong>。</p>\n<p>进行任何相关操作，也需要宿主引擎相关 <code>API</code> 的配合使用。当然，在 <code>JavaScript</code> 中，相关 <code>API</code> 也不多。</p>\n<h4>7.1.1. 验证</h4>\n<p>验证是正则表达式最直接的应用，比如表单验证。</p>\n<p>在说验证之前，先要说清楚匹配是什么概念。</p>\n<p>所谓匹配，就是看目标字符串里是否有满足匹配的子串。因此，“匹配”的本质就是“查找”。</p>\n<p>有没有匹配，是不是匹配上，判断是否的操作，即称为“验证”。</p>\n<p>这里举一个例子，来看看如何使用相关 <code>API</code> 进行验证操作的。</p>\n<p>比如，判断一个字符串中是否有数字。</p>\n<p>使用 <code>search：</code></p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/\\d/</span>;\n<span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;abc123&quot;</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( !!~string.<span class=\"hljs-title function_\">search</span>(regex) );\n<span class=\"hljs-comment\">// =&gt; true</span>\n</code></pre>\n<p>使用 <code>test：</code></p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/\\d/</span>;\n<span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;abc123&quot;</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(string) );\n<span class=\"hljs-comment\">// =&gt; true</span>\n</code></pre>\n<p>使用 <code>match：</code></p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/\\d/</span>;\n<span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;abc123&quot;</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( !!string.<span class=\"hljs-title function_\">match</span>(regex) );\n<span class=\"hljs-comment\">// =&gt; true</span>\n</code></pre>\n<p>使用 <code>exec：</code></p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/\\d/</span>;\n<span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;abc123&quot;</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( !!regex.<span class=\"hljs-title function_\">exec</span>(string) );\n<span class=\"hljs-comment\">// =&gt; true</span>\n</code></pre>\n<p>其中，最常用的是 <code>test。</code></p>\n<h4>7.1.2. 切分</h4>\n<p>匹配上了，我们就可以进行一些操作，比如切分。</p>\n<p>所谓“切分”，就是把目标字符串，切成一段一段的。在 <code>JavaScript</code> 中使用的是 <code>split。</code></p>\n<p>比如，目标字符串是 <code>&quot;html,css,javascript&quot;</code>，按逗号来切分：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/,/</span>;\n<span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;html,css,javascript&quot;</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( string.<span class=\"hljs-title function_\">split</span>(regex) );\n<span class=\"hljs-comment\">// =&gt; [&quot;html&quot;, &quot;css&quot;, &quot;javascript&quot;]</span>\n</code></pre>\n<p>又比如，如下的日期格式：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-number\">2017</span>/<span class=\"hljs-number\">06</span>/<span class=\"hljs-number\">26</span>\n<span class=\"hljs-number\">2017.06</span><span class=\"hljs-number\">.26</span>\n<span class=\"hljs-number\">2017</span>-<span class=\"hljs-number\">06</span>-<span class=\"hljs-number\">26</span>\n</code></pre>\n<p>可以使用 <code>split</code> “切出”年月日：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/\\D/</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( <span class=\"hljs-string\">&quot;2017/06/26&quot;</span>.<span class=\"hljs-title function_\">split</span>(regex) );\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( <span class=\"hljs-string\">&quot;2017.06.26&quot;</span>.<span class=\"hljs-title function_\">split</span>(regex) );\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( <span class=\"hljs-string\">&quot;2017-06-26&quot;</span>.<span class=\"hljs-title function_\">split</span>(regex) );\n<span class=\"hljs-comment\">// =&gt; [&quot;2017&quot;, &quot;06&quot;, &quot;26&quot;]</span>\n<span class=\"hljs-comment\">// =&gt; [&quot;2017&quot;, &quot;06&quot;, &quot;26&quot;]</span>\n<span class=\"hljs-comment\">// =&gt; [&quot;2017&quot;, &quot;06&quot;, &quot;26&quot;]</span>\n</code></pre>\n<h4>7.1.3. 提取</h4>\n<p>虽然整体匹配上了，但有时需要提取部分匹配的数据。</p>\n<p>此时正则通常要使用分组引用（分组捕获）功能，还需要配合使用相关 <code>API。</code></p>\n<p>这里，还是以日期为例，提取出年月日。注意下面正则中的括号：</p>\n<p>使用 <code>match：</code></p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/^(\\d{4})\\D(\\d{2})\\D(\\d{2})$/</span>;\n<span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;2017-06-26&quot;</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( string.<span class=\"hljs-title function_\">match</span>(regex) );\n<span class=\"hljs-comment\">// =&gt;[&quot;2017-06-26&quot;, &quot;2017&quot;, &quot;06&quot;, &quot;26&quot;, index: 0, input: &quot;2017-06-26&quot;]</span>\n</code></pre>\n<p>使用 <code>exec：</code></p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/^(\\d{4})\\D(\\d{2})\\D(\\d{2})$/</span>;\n<span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;2017-06-26&quot;</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">exec</span>(string) );\n<span class=\"hljs-comment\">// =&gt;[&quot;2017-06-26&quot;, &quot;2017&quot;, &quot;06&quot;, &quot;26&quot;, index: 0, input: &quot;2017-06-26&quot;]</span>\n</code></pre>\n<p>使用 <code>test：</code></p>\n<pre class=\"hljs\"><code>var regex = /^(\\d{4})\\D(\\d{2})\\D(\\d{2})$/;\nvar string = &quot;2017-06-26&quot;;\nregex.test(string);\nconsole.log( RegExp.$1, RegExp.$2, RegExp.$3 );\n// =&gt; &quot;2017&quot; &quot;06&quot; &quot;26&quot;\n</code></pre>\n<p>使用 <code>search：</code></p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/^(\\d{4})\\D(\\d{2})\\D(\\d{2})$/</span>;\n<span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;2017-06-26&quot;</span>;\nstring.<span class=\"hljs-title function_\">search</span>(regex);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( <span class=\"hljs-title class_\">RegExp</span>.<span class=\"hljs-property\">$1</span>, <span class=\"hljs-title class_\">RegExp</span>.<span class=\"hljs-property\">$2</span>, <span class=\"hljs-title class_\">RegExp</span>.<span class=\"hljs-property\">$3</span> );\n<span class=\"hljs-comment\">// =&gt; &quot;2017&quot; &quot;06&quot; &quot;26&quot;</span>\n</code></pre>\n<p>使用 <code>replace：</code></p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/^(\\d{4})\\D(\\d{2})\\D(\\d{2})$/</span>;\n<span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;2017-06-26&quot;</span>;\n<span class=\"hljs-keyword\">var</span> date = [];\nstring.<span class=\"hljs-title function_\">replace</span>(regex, <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">match, year, month, day</span>) {\n  date.<span class=\"hljs-title function_\">push</span>(year, month, day);\n});\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(date);\n<span class=\"hljs-comment\">// =&gt; [&quot;2017&quot;, &quot;06&quot;, &quot;26&quot;]</span>\n</code></pre>\n<p>其中，最常用的是 <code>match。</code></p>\n<h4>7.1.4. 替换</h4>\n<p>找，往往不是目的，通常下一步是为了替换。在 <code>JavaScript</code> 中，使用 <code>replace</code> 进行替换。</p>\n<p>比如把日期格式，从 <code>yyyy-mm-dd</code> 替换成 <code>yyyy/mm/dd：</code></p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;2017-06-26&quot;</span>;\n<span class=\"hljs-keyword\">var</span> today = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Date</span>( string.<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-regexp\">/-/g</span>, <span class=\"hljs-string\">&quot;/&quot;</span>) );\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( today );\n<span class=\"hljs-comment\">// =&gt; Mon Jun 26 2017 00:00:00 GMT+0800 (中国标准时间)</span>\n</code></pre>\n<p>这里只是简单地应用了一下 <code>replace</code>。但，<code>replace</code> 方法很是强大的，是需要重点掌握的。</p>\n<h3>7.2. 相关 API 注意要点</h3>\n<p>从上面可以看出用于正则操作的方法，共有 6 个，字符串实例 4 个，正则实例 2 个：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-title class_\">String</span>#search\n<span class=\"hljs-title class_\">String</span>#split\n<span class=\"hljs-title class_\">String</span>#match\n<span class=\"hljs-title class_\">String</span>#replace\n<span class=\"hljs-title class_\">RegExp</span>#test\n<span class=\"hljs-title class_\">RegExp</span>#exec\n</code></pre>\n<h4>7.2.1. <code>search</code> 和 <code>match</code> 的参数问题</h4>\n<p>我们知道字符串实例的那 4 个方法参数都支持正则和字符串。</p>\n<p>但 <code>search</code> 和 <code>match</code>，会把字符串转换为正则的。</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;2017.06.27&quot;</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( string.<span class=\"hljs-title function_\">search</span>(<span class=\"hljs-string\">&quot;.&quot;</span>) );\n<span class=\"hljs-comment\">// =&gt; 0</span>\n<span class=\"hljs-comment\">//需要修改成下列形式之一</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( string.<span class=\"hljs-title function_\">search</span>(<span class=\"hljs-string\">&quot;\\\\.&quot;</span>) );\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( string.<span class=\"hljs-title function_\">search</span>(<span class=\"hljs-regexp\">/\\./</span>) );\n<span class=\"hljs-comment\">// =&gt; 4</span>\n<span class=\"hljs-comment\">// =&gt; 4</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( string.<span class=\"hljs-title function_\">match</span>(<span class=\"hljs-string\">&quot;.&quot;</span>) );\n<span class=\"hljs-comment\">// =&gt; [&quot;2&quot;, index: 0, input: &quot;2017.06.27&quot;]</span>\n<span class=\"hljs-comment\">//需要修改成下列形式之一</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( string.<span class=\"hljs-title function_\">match</span>(<span class=\"hljs-string\">&quot;\\\\.&quot;</span>) );\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( string.<span class=\"hljs-title function_\">match</span>(<span class=\"hljs-regexp\">/\\./</span>) );\n<span class=\"hljs-comment\">// =&gt; [&quot;.&quot;, index: 4, input: &quot;2017.06.27&quot;]</span>\n<span class=\"hljs-comment\">// =&gt; [&quot;.&quot;, index: 4, input: &quot;2017.06.27&quot;]</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( string.<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&quot;.&quot;</span>) );\n<span class=\"hljs-comment\">// =&gt; [&quot;2017&quot;, &quot;06&quot;, &quot;27&quot;]</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( string.<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-string\">&quot;.&quot;</span>, <span class=\"hljs-string\">&quot;/&quot;</span>) );\n<span class=\"hljs-comment\">// =&gt; &quot;2017/06.27&quot;</span>\n</code></pre>\n<p>7.2.2. <code>match</code> 返回结果的格式问题</p>\n<p><code>match</code> 返回结果的格式，与正则对象是否有修饰符 <code>g</code> 有关。</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;2017.06.27&quot;</span>;\n<span class=\"hljs-keyword\">var</span> regex1 = <span class=\"hljs-regexp\">/\\b(\\d+)\\b/</span>;\n<span class=\"hljs-keyword\">var</span> regex2 = <span class=\"hljs-regexp\">/\\b(\\d+)\\b/g</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( string.<span class=\"hljs-title function_\">match</span>(regex1) );\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( string.<span class=\"hljs-title function_\">match</span>(regex2) );\n<span class=\"hljs-comment\">// =&gt; [&quot;2017&quot;, &quot;2017&quot;, index: 0, input: &quot;2017.06.27&quot;]</span>\n<span class=\"hljs-comment\">// =&gt; [&quot;2017&quot;, &quot;06&quot;, &quot;27&quot;]</span>\n</code></pre>\n<p>没有 <code>g</code>，返回的是标准匹配格式，即，数组的第一个元素是整体匹配的内容，接下来是分组捕获的内容，然后是整体匹配的第一个下标，最后是输入的目标字符串。</p>\n<p>有 <code>g</code>，返回的是所有匹配的内容。</p>\n<p>当没有匹配时，不管有无 <code>g</code>，都返回 <code>null。</code></p>\n<h4>7.2.3. <code>exec</code> 比 <code>match</code> 更强大</h4>\n<p>当正则没有 <code>g</code> 时，使用 <code>match</code> 返回的信息比较多。但是有 <code>g</code> 后，就没有关键的信息 <code>index</code> 了。</p>\n<p>而 <code>exec</code> 方法就能解决这个问题，它能接着上一次匹配后继续匹配：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;2017.06.27&quot;</span>;\n<span class=\"hljs-keyword\">var</span> regex2 = <span class=\"hljs-regexp\">/\\b(\\d+)\\b/g</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex2.<span class=\"hljs-title function_\">exec</span>(string) );\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex2.<span class=\"hljs-property\">lastIndex</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex2.<span class=\"hljs-title function_\">exec</span>(string) );\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex2.<span class=\"hljs-property\">lastIndex</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex2.<span class=\"hljs-title function_\">exec</span>(string) );\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex2.<span class=\"hljs-property\">lastIndex</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex2.<span class=\"hljs-title function_\">exec</span>(string) );\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex2.<span class=\"hljs-property\">lastIndex</span>);\n<span class=\"hljs-comment\">// =&gt; [&quot;2017&quot;, &quot;2017&quot;, index: 0, input: &quot;2017.06.27&quot;]</span>\n<span class=\"hljs-comment\">// =&gt; 4</span>\n<span class=\"hljs-comment\">// =&gt; [&quot;06&quot;, &quot;06&quot;, index: 5, input: &quot;2017.06.27&quot;]</span>\n<span class=\"hljs-comment\">// =&gt; 7</span>\n<span class=\"hljs-comment\">// =&gt; [&quot;27&quot;, &quot;27&quot;, index: 8, input: &quot;2017.06.27&quot;]</span>\n<span class=\"hljs-comment\">// =&gt; 10</span>\n<span class=\"hljs-comment\">// =&gt; null</span>\n<span class=\"hljs-comment\">// =&gt; 0</span>\n</code></pre>\n<p>其中正则实例 <code>lastIndex</code> 属性，表示下一次匹配开始的位置。</p>\n<p>比如第一次匹配了 <code>&quot;2017&quot;</code>，开始下标是 <code>0</code>，共 <code>4</code> 个字符，因此这次匹配结束的位置是 <code>3</code>，下一次开始匹配的位置是 <code>4</code>。</p>\n<p>从上述代码看出，在使用 <code>exec</code> 时，经常需要配合使用 <code>while</code> 循环：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;2017.06.27&quot;</span>;\n<span class=\"hljs-keyword\">var</span> regex2 = <span class=\"hljs-regexp\">/\\b(\\d+)\\b/g</span>;\n<span class=\"hljs-keyword\">var</span> result;\n<span class=\"hljs-keyword\">while</span> ( result = regex2.<span class=\"hljs-title function_\">exec</span>(string) ) {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( result, regex2.<span class=\"hljs-property\">lastIndex</span> ); }\n<span class=\"hljs-comment\">// =&gt; [&quot;2017&quot;, &quot;2017&quot;, index: 0, input: &quot;2017.06.27&quot;] 4</span>\n<span class=\"hljs-comment\">// =&gt; [&quot;06&quot;, &quot;06&quot;, index: 5, input: &quot;2017.06.27&quot;] 7</span>\n<span class=\"hljs-comment\">// =&gt; [&quot;27&quot;, &quot;27&quot;, index: 8, input: &quot;2017.06.27&quot;] 10</span>\n</code></pre>\n<p>其中正则实例 <code>lastIndex</code> 属性，表示下一次匹配开始的位置。</p>\n<p>比如第一次匹配了 <code>&quot;2017&quot;</code>，开始下标是 0，共 4 个字符，因此这次匹配结束的位置是 3，下一次开始匹配的位置是 4。</p>\n<p>从上述代码看出，在使用 <code>exec</code> 时，经常需要配合使用 <code>while</code> 循环：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;2017.06.27&quot;</span>;\n<span class=\"hljs-keyword\">var</span> regex2 = <span class=\"hljs-regexp\">/\\b(\\d+)\\b/g</span>;\n<span class=\"hljs-keyword\">var</span> result;\n<span class=\"hljs-keyword\">while</span> ( result = regex2.<span class=\"hljs-title function_\">exec</span>(string) ) {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( result, regex2.<span class=\"hljs-property\">lastIndex</span> ); }\n<span class=\"hljs-comment\">// =&gt; [&quot;2017&quot;, &quot;2017&quot;, index: 0, input: &quot;2017.06.27&quot;] 4</span>\n<span class=\"hljs-comment\">// =&gt; [&quot;06&quot;, &quot;06&quot;, index: 5, input: &quot;2017.06.27&quot;] 7</span>\n<span class=\"hljs-comment\">// =&gt; [&quot;27&quot;, &quot;27&quot;, index: 8, input: &quot;2017.06.27&quot;] 10</span>\n</code></pre>\n<h4>7.2.4. 修饰符 <code>g</code>，对 <code>exex</code> 和 <code>test</code> 的影响</h4>\n<p>上面提到了正则实例的 <code>lastIndex</code> 属性，表示尝试匹配时，从字符串的 <code>lastIndex</code> 位开始去匹配。</p>\n<p>字符串的四个方法，每次匹配时，都是从 <code>0</code> 开始的，即 <code>lastIndex</code> 属性始终不变。</p>\n<p>而正则实例的两个方法 <code>exec、test</code>，当正则是全局匹配时，每一次匹配完成后，都会修改 <code>lastIndex</code>。下面让我们以 <code>test</code> 为例，看看你是否会迷糊：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/a/g</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;a&quot;</span>), regex.<span class=\"hljs-property\">lastIndex</span> );\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;aba&quot;</span>), regex.<span class=\"hljs-property\">lastIndex</span> );\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;ababc&quot;</span>), regex.<span class=\"hljs-property\">lastIndex</span> );\n<span class=\"hljs-comment\">// =&gt; true 1</span>\n<span class=\"hljs-comment\">// =&gt; true 3</span>\n<span class=\"hljs-comment\">// =&gt; false 0</span>\n</code></pre>\n<p>注意上面代码中的第三次调用 <code>test</code>，因为这一次尝试匹配，开始从下标 <code>lastIndex</code>，即 3 位置处开始查 找，自然就找不到了。</p>\n<p>如果没有 <code>g</code>，自然都是从字符串第 <code>0</code> 个字符处开始尝试匹配：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/a/</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;a&quot;</span>), regex.<span class=\"hljs-property\">lastIndex</span> );\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;aba&quot;</span>), regex.<span class=\"hljs-property\">lastIndex</span> );\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;ababc&quot;</span>), regex.<span class=\"hljs-property\">lastIndex</span> );\n<span class=\"hljs-comment\">// =&gt; true 0</span>\n<span class=\"hljs-comment\">// =&gt; true 0</span>\n<span class=\"hljs-comment\">// =&gt; true 0</span>\n</code></pre>\n<h4>7.2.5. <code>test</code> 整体匹配时需要使用 <code>^</code> 和 <code>$</code></h4>\n<p>这个相对容易理解，因为 <code>test</code> 是看目标字符串中是否有子串匹配正则，即有部分匹配即可。</p>\n<p>如果，要整体匹配，正则前后需要添加开头和结尾：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( <span class=\"hljs-regexp\">/123/</span>.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;a123b&quot;</span>) );\n<span class=\"hljs-comment\">// =&gt; true</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( <span class=\"hljs-regexp\">/^123$/</span>.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;a123b&quot;</span>) );\n<span class=\"hljs-comment\">// =&gt; false</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( <span class=\"hljs-regexp\">/^123$/</span>.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;123&quot;</span>) );\n<span class=\"hljs-comment\">// =&gt; true</span>\n</code></pre>\n<h4>7.2.6. <code>split</code> 相关注意事项</h4>\n<p><code>split</code> 方法看起来不起眼，但要注意的地方有两个的。</p>\n<p>第一，它可以有第二个参数，表示结果数组的最大长度：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;html,css,javascript&quot;</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( string.<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-regexp\">/,/</span>, <span class=\"hljs-number\">2</span>) );\n<span class=\"hljs-comment\">// =&gt;[&quot;html&quot;, &quot;css&quot;]</span>\n</code></pre>\n<p>第二，正则使用分组时，结果数组中是包含分隔符的：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;html,css,javascript&quot;</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( string.<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-regexp\">/(,)/</span>) );\n<span class=\"hljs-comment\">// =&gt;[&quot;html&quot;, &quot;,&quot;, &quot;css&quot;, &quot;,&quot;, &quot;javascript&quot;]</span>\n</code></pre>\n<h4>7.2.7. replace 是很强大的</h4>\n<p>总体来说 <code>replace</code> 有两种使用形式，这是因为它的第二个参数，可以是<strong>字符串</strong>，也可以是<strong>函数</strong>。</p>\n<p>当第二个参数是字符串时，如下的字符有特殊的含义：</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>$1,$2,…,$99</code></td>\n<td>匹配第 <code>1-99</code> 个 分组里捕获的文本</td>\n</tr>\n<tr>\n<td><code>$&amp;</code></td>\n<td>匹配到的子串文本</td>\n</tr>\n<tr>\n<td><code> $</code> `</td>\n<td>匹配到的子串的左边文本</td>\n</tr>\n<tr>\n<td><code>$'</code></td>\n<td>匹配到的子串的右边文本</td>\n</tr>\n<tr>\n<td><code>$$</code></td>\n<td>美元符号</td>\n</tr>\n</tbody>\n</table>\n<p>例如，把 <code>&quot;2,3,5&quot;</code>，变成 <code>&quot;5=2+3&quot;</code>：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> result = <span class=\"hljs-string\">&quot;2,3,5&quot;</span>.<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-regexp\">/(\\d+),(\\d+),(\\d+)/</span>, <span class=\"hljs-string\">&quot;$3=$1+$2&quot;</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(result);\n<span class=\"hljs-comment\">// =&gt; &quot;5=2+3&quot;</span>\n</code></pre>\n<p>又例如，把 <code>&quot;2,3,5&quot;</code>，变成 <code>&quot;222,333,555&quot;</code>:</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> result = <span class=\"hljs-string\">&quot;2,3,5&quot;</span>.<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-regexp\">/(\\d+)/g</span>, <span class=\"hljs-string\">&quot;$&amp;$&amp;$&amp;&quot;</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(result);\n<span class=\"hljs-comment\">// =&gt; &quot;222,333,555&quot;</span>\n</code></pre>\n<p>再例如，把 <code>&quot;2+3=5&quot;</code>，变成 <code>&quot;2+3=2+3=5=5&quot;</code>:</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> result = <span class=\"hljs-string\">&quot;2+3=5&quot;</span>.<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-regexp\">/=/</span>, <span class=\"hljs-string\">&quot;$&amp;$`$&amp;$&#x27;$&amp;&quot;</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(result);\n<span class=\"hljs-comment\">// =&gt; &quot;2+3=2+3=5=5&quot;</span>\n</code></pre>\n<p>我们对最后这个进行一下说明。要把 <code>&quot;2+3=5&quot;</code>，变成 <code>&quot;2+3=2+3=5=5&quot;</code>，其实就是想办法把 <code>=</code> 替换成\n<code>=2+3=5=</code>，其中，<code>$&amp;</code> 匹配的是 <code>=</code>，</p>\n<pre class=\"hljs\"><code>$` 匹配的是 2+3，\n</code></pre>\n<pre class=\"hljs\"><code>$' 匹配的是 5。\n</code></pre>\n<p>因此使用</p>\n<pre class=\"hljs\"><code>&quot;$&amp;$`$&amp;$'$&amp;&quot;\n</code></pre>\n<p>便达成了目的。</p>\n<p>当第二个参数是函数时，我们需要注意该回调函数的参数具体是什么：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-string\">&quot;1234 2345 3456&quot;</span>.<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-regexp\">/(\\d)\\d{2}(\\d)/g</span>, <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">match, $<span class=\"hljs-number\">1</span>, $<span class=\"hljs-number\">2</span>, index, input</span>) {\n  <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>([match, $<span class=\"hljs-number\">1</span>, $<span class=\"hljs-number\">2</span>, index, input]);\n});\n<span class=\"hljs-comment\">// =&gt; [&quot;1234&quot;, &quot;1&quot;, &quot;4&quot;, 0, &quot;1234 2345 3456&quot;]</span>\n<span class=\"hljs-comment\">// =&gt; [&quot;2345&quot;, &quot;2&quot;, &quot;5&quot;, 5, &quot;1234 2345 3456&quot;]</span>\n<span class=\"hljs-comment\">// =&gt; [&quot;3456&quot;, &quot;3&quot;, &quot;6&quot;, 10, &quot;1234 2345 3456&quot;]</span>\n</code></pre>\n<p>此时我们可以看到 <code>replace</code> 拿到的信息，并不比 <code>exec</code> 少</p>\n<h4>7.2.8. 使用构造函数需要注意的问题</h4>\n<p>一般不推荐使用构造函数生成正则，而应该优先使用字面量。因为用构造函数会多写很多 <code>\\</code>。</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;2017-06-27 2017.06.27 2017/06/27&quot;</span>;\n<span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/\\d{4}(-|\\.|\\/)\\d{2}\\1\\d{2}/g</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( string.<span class=\"hljs-title function_\">match</span>(regex) );\n<span class=\"hljs-comment\">// =&gt; [&quot;2017-06-27&quot;, &quot;2017.06.27&quot;, &quot;2017/06/27&quot;]</span>\nregex = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RegExp</span>(<span class=\"hljs-string\">&quot;\\\\d{4}(-|\\\\.|\\\\/)\\\\d{2}\\\\1\\\\d{2}&quot;</span>, <span class=\"hljs-string\">&quot;g&quot;</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( string.<span class=\"hljs-title function_\">match</span>(regex) );\n<span class=\"hljs-comment\">// =&gt; [&quot;2017-06-27&quot;, &quot;2017.06.27&quot;, &quot;2017/06/27&quot;]</span>\n</code></pre>\n<h4>7.2.9. 修饰符</h4>\n<p>ES5 中修饰符，共 3 个：</p>\n<table>\n<thead>\n<tr>\n<th>修饰符</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>g</code></td>\n<td>全局匹配，即找到所有匹配的，单词是 <code>global。</code></td>\n</tr>\n<tr>\n<td><code>i</code></td>\n<td>忽略字母大小写，单词是 <code>ingoreCase。</code></td>\n</tr>\n<tr>\n<td><code>m</code></td>\n<td>多行匹配，只影响 <code>^</code> 和 <code>$</code>，二者变成行的概念，即行开头和行结尾。单词是 <code>multiline。</code></td>\n</tr>\n</tbody>\n</table>\n<p>当然正则对象也有相应的只读属性：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/\\w/img</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-property\">global</span> );\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-property\">ignoreCase</span> );\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-property\">multiline</span> );\n<span class=\"hljs-comment\">// =&gt; true</span>\n<span class=\"hljs-comment\">// =&gt; true</span>\n<span class=\"hljs-comment\">// =&gt; true</span>\n</code></pre>\n<h4>7.2.10. source 属性</h4>\n<p>正则实例对象属性，除了 <code>global、ingnoreCase、multiline、lastIndex</code> 属性之外，还有一个 <code>source</code>属性。</p>\n<p>它什么时候有用呢？</p>\n<p>比如，在构建动态的正则表达式时，可以通过查看该属性，来确认构建出的正则到底是什么：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> className = <span class=\"hljs-string\">&quot;high&quot;</span>;\n<span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RegExp</span>(<span class=\"hljs-string\">&quot;(^|\\\\s)&quot;</span> + className + <span class=\"hljs-string\">&quot;(\\\\s|$)&quot;</span>);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( regex.<span class=\"hljs-property\">source</span> )\n<span class=\"hljs-comment\">// =&gt; (^|\\s)high(\\s|$) 即字符串&quot;(^|\\\\s)high(\\\\s|$)&quot;</span>\n</code></pre>\n<h4>7.2.11. 构造函数属性</h4>\n<p>构造函数的静态属性基于所执行的最近一次正则操作而变化。除了是 <code>$1,…,$9</code> 之外，还有几个不太常用的属性（有兼容性问题）：</p>\n<pre class=\"hljs\"><code>| 静态属性              | 描述                            | 简写形式     |\n| --------------------- | ------------------------------- | ------------ |\n| <span class=\"hljs-string\">`RegExp.input`</span>        | 最近一次目标字符串              | <span class=\"hljs-title class_\">RegExp</span>[<span class=\"hljs-string\">&quot;$_&quot;</span>] |\n| <span class=\"hljs-string\">`RegExp.lastMatch`</span>    | 最近一次匹配的文本              | <span class=\"hljs-title class_\">RegExp</span>[<span class=\"hljs-string\">&quot;$&amp;&quot;</span>] |\n| <span class=\"hljs-string\">`RegExp.lastParen`</span>    | 最近一次捕获的文本              | <span class=\"hljs-title class_\">RegExp</span>[<span class=\"hljs-string\">&quot;$+&quot;</span>] |\n| <span class=\"hljs-string\">`RegExp.leftContext`</span>  | 目标字符串中lastMatch之前的文本 | <span class=\"hljs-title class_\">RegExp</span>[<span class=\"hljs-string\">&quot;$`&quot;</span>] |\n| <span class=\"hljs-string\">`RegExp.rightContext`</span> | 目标字符串中lastMatch之后的文本 | <span class=\"hljs-title class_\">RegExp</span>[<span class=\"hljs-string\">&quot;$&#x27;&quot;</span>] |\n</code></pre>\n<p>测试代码如下：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-regexp\">/([abc])(\\d)/g</span>;\n<span class=\"hljs-keyword\">var</span> string = <span class=\"hljs-string\">&quot;a1b2c3d4e5&quot;</span>;\nstring.<span class=\"hljs-title function_\">match</span>(regex);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( <span class=\"hljs-title class_\">RegExp</span>.<span class=\"hljs-property\">input</span> );\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( <span class=\"hljs-title class_\">RegExp</span>[<span class=\"hljs-string\">&quot;$_&quot;</span>]);\n<span class=\"hljs-comment\">// =&gt; &quot;a1b2c3d4e5&quot;</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( <span class=\"hljs-title class_\">RegExp</span>.<span class=\"hljs-property\">lastMatch</span> );\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( <span class=\"hljs-title class_\">RegExp</span>[<span class=\"hljs-string\">&quot;$&amp;&quot;</span>] );\n<span class=\"hljs-comment\">// =&gt; &quot;c3&quot;</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( <span class=\"hljs-title class_\">RegExp</span>.<span class=\"hljs-property\">lastParen</span> );\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( <span class=\"hljs-title class_\">RegExp</span>[<span class=\"hljs-string\">&quot;$+&quot;</span>] );\n<span class=\"hljs-comment\">// =&gt; &quot;3&quot;</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( <span class=\"hljs-title class_\">RegExp</span>.<span class=\"hljs-property\">leftContext</span> );\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( <span class=\"hljs-title class_\">RegExp</span>[<span class=\"hljs-string\">&quot;$`&quot;</span>] );\n<span class=\"hljs-comment\">// =&gt; &quot;a1b2&quot;</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( <span class=\"hljs-title class_\">RegExp</span>.<span class=\"hljs-property\">rightContext</span> );\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( <span class=\"hljs-title class_\">RegExp</span>[<span class=\"hljs-string\">&quot;$&#x27;&quot;</span>] );\n<span class=\"hljs-comment\">// =&gt; &quot;d4e5&quot;</span>\n</code></pre>\n<h3>7.3. 真实案例</h3>\n<h4>7.3.1. 使用构造函数生成正则表达式</h4>\n<p>我们知道要优先使用字面量来创建正则，但有时正则表达式的主体是不确定的，此时可以使用构造函数来创建。</p>\n<p>模拟 <code>getElementsByClassName</code> 方法，就是很能说明该问题的一个例子。</p>\n<p>这里 <code>getElementsByClassName</code> 函数的实现思路是：</p>\n<p>比如要获取 <code>className</code> 为 <code>&quot;high&quot;</code> 的 <code>dom</code> 元素；</p>\n<p>首先生成一个正则：<code>/(^|\\s)high(\\s|$)/</code>,</p>\n<p>然后再用其逐一验证页面上的所有<code>dom</code>元素的类名，拿到满足匹配的元素即可。</p>\n<p>代码如下(可以直接复制到本地查看运行效果)</p>\n<pre class=\"hljs\"><code>&lt;p <span class=\"hljs-keyword\">class</span>=<span class=\"hljs-string\">&quot;high&quot;</span>&gt;<span class=\"hljs-number\">1111</span>&lt;/p&gt;\n<span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;high&quot;</span>&gt;</span>2222<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span></span>\n<span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>3333<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span></span>\n<span class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\">\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">getElementsByClassName</span> (className) {\n  <span class=\"hljs-keyword\">var</span> elements = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementsByTagName</span>(<span class=\"hljs-string\">&quot;*&quot;</span>);\n  <span class=\"hljs-keyword\">var</span> regex = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RegExp</span>(<span class=\"hljs-string\">&quot;(^|\\\\s)&quot;</span> + className + <span class=\"hljs-string\">&quot;(\\\\s|$)&quot;</span>);\n  <span class=\"hljs-keyword\">var</span> result = [];\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; elements.<span class=\"hljs-property\">length</span>; i++) {\n  <span class=\"hljs-keyword\">var</span> element = elements[i];\n  <span class=\"hljs-keyword\">if</span> (regex.<span class=\"hljs-title function_\">test</span>(element.<span class=\"hljs-property\">className</span>)) {\n  result.<span class=\"hljs-title function_\">push</span>(element)\n  }\n  }\n  <span class=\"hljs-keyword\">return</span> result; }\n<span class=\"hljs-keyword\">var</span> highs = <span class=\"hljs-title function_\">getElementsByClassName</span>(<span class=\"hljs-string\">&#x27;high&#x27;</span>);\nhighs.<span class=\"hljs-title function_\">forEach</span>(<span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">item</span>) {\n  item.<span class=\"hljs-property\">style</span>.<span class=\"hljs-property\">color</span> = <span class=\"hljs-string\">&#x27;red&#x27;</span>;\n});\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></span>\n</code></pre>\n<h4>7.3.2. 使用字符串保存数据</h4>\n<p>一般情况下，我们都愿意使用数组来保存数据。但我看到有的框架中，使用的却是字符串。</p>\n<p>使用时，仍需要把字符串切分成数组。虽然不一定用到正则，但总感觉酷酷的，这里分享如下：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> utils = {}; <span class=\"hljs-string\">&quot;Boolean|Number|String|Function|Array|Date|RegExp|Object|Error&quot;</span>.<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&quot;|&quot;</span>).<span class=\"hljs-title function_\">forEach</span>(fun\nction (item) {\n  utils[<span class=\"hljs-string\">&quot;is&quot;</span> + item] = <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">obj</span>) {\n  <span class=\"hljs-keyword\">return</span> {}.<span class=\"hljs-property\">toString</span>.<span class=\"hljs-title function_\">call</span>(obj) == <span class=\"hljs-string\">&quot;[object &quot;</span> + item + <span class=\"hljs-string\">&quot;]&quot;</span>;\n  };\n});\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( utils.<span class=\"hljs-title function_\">isArray</span>([<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]) );\n<span class=\"hljs-comment\">// =&gt; true</span>\n</code></pre>\n<h4>7.3.3. <code>if</code> 语句中使用正则替代 <code>&amp;&amp;</code></h4>\n<p>比如，模拟 <code>ready</code> 函数，即加载完毕后再执行回调（不兼容 <code>IE</code> 的）：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">var</span> readyRE = <span class=\"hljs-regexp\">/complete|loaded|interactive/</span>;\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">ready</span> (callback) {\n  <span class=\"hljs-keyword\">if</span> (readyRE.<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">readyState</span>) &amp;&amp; <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">body</span>) {\n  <span class=\"hljs-title function_\">callback</span>()\n  }\n  <span class=\"hljs-keyword\">else</span> {\n  <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">addEventListener</span>(\n  <span class=\"hljs-string\">&#x27;DOMContentLoaded&#x27;</span>,\n  <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-title function_\">callback</span>()\n  },\n  <span class=\"hljs-literal\">false</span>\n  );\n  } };\n<span class=\"hljs-title function_\">ready</span>(<span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-title function_\">alert</span>(<span class=\"hljs-string\">&quot;加载完毕！&quot;</span>)\n});\n</code></pre>\n<h4>7.3.4. 使用强大的 <code>replace</code></h4>\n<p>因为 <code>replace</code> 方法比较强大，有时用它根本不是为了替换，只是拿其匹配到的信息来做文章。</p>\n<p>这里以查询字符串（<code>querystring</code>）压缩技术为例，注意下面 <code>replace</code> 方法中，回调函数根本没有返回任何东西。</p>\n<pre class=\"hljs\"><code><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">compress</span> (source) {\n  <span class=\"hljs-keyword\">var</span> keys = {};\n  source.<span class=\"hljs-title function_\">replace</span>(<span class=\"hljs-regexp\">/([^=&amp;]+)=([^&amp;]*)/g</span>, <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">full, key, value</span>) {\n  keys[key] = (keys[key] ? keys[key] + <span class=\"hljs-string\">&#x27;,&#x27;</span> : <span class=\"hljs-string\">&#x27;&#x27;</span>) + value;\n  });\n  <span class=\"hljs-keyword\">var</span> result = [];\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> key <span class=\"hljs-keyword\">in</span> keys) {\n  result.<span class=\"hljs-title function_\">push</span>(key + <span class=\"hljs-string\">&#x27;=&#x27;</span> + keys[key]);\n  }\n  <span class=\"hljs-keyword\">return</span> result.<span class=\"hljs-title function_\">join</span>(<span class=\"hljs-string\">&#x27;&amp;&#x27;</span>); }\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>( <span class=\"hljs-title function_\">compress</span>(<span class=\"hljs-string\">&quot;a=1&amp;b=2&amp;a=3&amp;b=4&quot;</span>) );\n<span class=\"hljs-comment\">// =&gt; &quot;a=1,3&amp;b=2,4&quot;</span>\n</code></pre>\n<h4>7.3.5. 综合运用</h4>\n<p>最后这里再做个简单实用的正则测试器</p>\n<pre class=\"hljs\"><code><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">section</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;err&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;regex&quot;</span> <span class=\"hljs-attr\">placeholder</span>=<span class=\"hljs-string\">&quot;请输入正则表达式&quot;</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;text&quot;</span> <span class=\"hljs-attr\">placeholder</span>=<span class=\"hljs-string\">&quot;请输入测试文本&quot;</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;run&quot;</span>&gt;</span>测试一下<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;result&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">section</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><span class=\"language-css\">\n<span class=\"hljs-selector-tag\">section</span>{\n  <span class=\"hljs-attribute\">display</span>:flex;\n  <span class=\"hljs-attribute\">flex-direction</span>:column;\n  <span class=\"hljs-attribute\">justify-content</span>:space-around;\n  <span class=\"hljs-attribute\">height</span>:<span class=\"hljs-number\">300px</span>;\n  <span class=\"hljs-attribute\">padding</span>:<span class=\"hljs-number\">0</span> <span class=\"hljs-number\">200px</span>; }\n<span class=\"hljs-selector-tag\">section</span> *{\n  <span class=\"hljs-attribute\">min-height</span>:<span class=\"hljs-number\">30px</span>; }\n<span class=\"hljs-selector-id\">#err</span> {\n  <span class=\"hljs-attribute\">color</span>:red;\n}\n<span class=\"hljs-selector-id\">#result</span>{\n  <span class=\"hljs-attribute\">line-height</span>:<span class=\"hljs-number\">30px</span>; }\n<span class=\"hljs-selector-class\">.info</span> {\n  <span class=\"hljs-attribute\">background</span>:<span class=\"hljs-number\">#00c5ff</span>;\n  <span class=\"hljs-attribute\">padding</span>:<span class=\"hljs-number\">2px</span>;\n  <span class=\"hljs-attribute\">margin</span>:<span class=\"hljs-number\">2px</span>;\n  <span class=\"hljs-attribute\">display</span>:inline-block; }\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\">\n(<span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-comment\">// 获取相应dom元素</span>\n  <span class=\"hljs-keyword\">var</span> regexInput = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">&quot;regex&quot;</span>);\n  <span class=\"hljs-keyword\">var</span> textInput = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">&quot;text&quot;</span>);\n  <span class=\"hljs-keyword\">var</span> runBtn = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">&quot;run&quot;</span>);\n  <span class=\"hljs-keyword\">var</span> errBox = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">&quot;err&quot;</span>);\n  <span class=\"hljs-keyword\">var</span> resultBox = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">&quot;result&quot;</span>);\n  <span class=\"hljs-comment\">// 绑定点击事件</span>\n  runBtn.<span class=\"hljs-property\">onclick</span> = <span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-comment\">// 清除错误和结果</span>\n  errBox.<span class=\"hljs-property\">innerHTML</span> = <span class=\"hljs-string\">&quot;&quot;</span>;\n  resultBox.<span class=\"hljs-property\">innerHTML</span> = <span class=\"hljs-string\">&quot;&quot;</span>;\n  <span class=\"hljs-comment\">// 获取正则和文本</span>\n  <span class=\"hljs-keyword\">var</span> text = textInput.<span class=\"hljs-property\">value</span>;\n  <span class=\"hljs-keyword\">var</span> regex = regexInput.<span class=\"hljs-property\">value</span>;\n  <span class=\"hljs-keyword\">if</span> (regex == <span class=\"hljs-string\">&quot;&quot;</span>) {\n  errBox.<span class=\"hljs-property\">innerHTML</span> = <span class=\"hljs-string\">&quot;请输入正则表达式&quot;</span>;\n  } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (text == <span class=\"hljs-string\">&quot;&quot;</span>) {\n  errBox.<span class=\"hljs-property\">innerHTML</span> = <span class=\"hljs-string\">&quot;请输入测试文本&quot;</span>;\n  } <span class=\"hljs-keyword\">else</span> {\n  regex = <span class=\"hljs-title function_\">createRegex</span>(regex);\n  <span class=\"hljs-keyword\">if</span> (!regex) <span class=\"hljs-keyword\">return</span>;\n  <span class=\"hljs-keyword\">var</span> result, results = [];\n  <span class=\"hljs-comment\">// 没有修饰符g的话，会死循环</span>\n  <span class=\"hljs-keyword\">if</span> (regex.<span class=\"hljs-property\">global</span>) {\n  <span class=\"hljs-keyword\">while</span>(result = regex.<span class=\"hljs-title function_\">exec</span>(text)) {\n  results.<span class=\"hljs-title function_\">push</span>(result);\n  }\n  } <span class=\"hljs-keyword\">else</span> {\n  results.<span class=\"hljs-title function_\">push</span>(regex.<span class=\"hljs-title function_\">exec</span>(text));\n  }\n  <span class=\"hljs-keyword\">if</span> (results[<span class=\"hljs-number\">0</span>] == <span class=\"hljs-literal\">null</span>) {\n  resultBox.<span class=\"hljs-property\">innerHTML</span> = <span class=\"hljs-string\">&quot;匹配到0个结果&quot;</span>;\n  <span class=\"hljs-keyword\">return</span>;\n  }\n  <span class=\"hljs-comment\">// 倒序是有必要的</span>\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = results.<span class=\"hljs-property\">length</span> - <span class=\"hljs-number\">1</span>; i &gt;= <span class=\"hljs-number\">0</span>; i--) {\n  <span class=\"hljs-keyword\">var</span> result = results[i];\n  <span class=\"hljs-keyword\">var</span> match = result[<span class=\"hljs-number\">0</span>];\n  <span class=\"hljs-keyword\">var</span> prefix = text.<span class=\"hljs-title function_\">substr</span>(<span class=\"hljs-number\">0</span>, result.<span class=\"hljs-property\">index</span>);\n  <span class=\"hljs-keyword\">var</span> suffix = text.<span class=\"hljs-title function_\">substr</span>(result.<span class=\"hljs-property\">index</span> + match.<span class=\"hljs-property\">length</span>);\n  text = prefix\n  + <span class=\"hljs-string\">&#x27;&lt;span class=&quot;info&quot;&gt;&#x27;</span>\n  + match\n  + <span class=\"hljs-string\">&#x27;&lt;/span&gt;&#x27;</span>\n  + suffix;\n  }\n  resultBox.<span class=\"hljs-property\">innerHTML</span> = <span class=\"hljs-string\">&quot;匹配到&quot;</span> + results.<span class=\"hljs-property\">length</span> + <span class=\"hljs-string\">&quot;个结果:&lt;br&gt;&quot;</span> + text;\n  }\n  };\n  <span class=\"hljs-comment\">// 生成正则表达式，核心函数</span>\n  <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">createRegex</span> (regex) {\n  <span class=\"hljs-keyword\">try</span> {\n  <span class=\"hljs-keyword\">if</span> (regex[<span class=\"hljs-number\">0</span>] == <span class=\"hljs-string\">&quot;/&quot;</span>) {\n  regex = regex.<span class=\"hljs-title function_\">split</span>(<span class=\"hljs-string\">&quot;/&quot;</span>);\n  regex.<span class=\"hljs-title function_\">shift</span>();\n  <span class=\"hljs-keyword\">var</span> flags = regex.<span class=\"hljs-title function_\">pop</span>();\n  regex = regex.<span class=\"hljs-title function_\">join</span>(<span class=\"hljs-string\">&quot;/&quot;</span>);\n  regex = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RegExp</span>(regex, flags);\n  } <span class=\"hljs-keyword\">else</span> {\n  regex = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">RegExp</span>(regex, <span class=\"hljs-string\">&quot;g&quot;</span>);\n  }\n  <span class=\"hljs-keyword\">return</span> regex;\n  } <span class=\"hljs-keyword\">catch</span>(e) {\n  errBox.<span class=\"hljs-property\">innerHTML</span> = <span class=\"hljs-string\">&quot;无效的正则表达式&quot;</span>;\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n  }\n  }\n})();\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n</code></pre>\n<p>完！！！</p>\n\n          </div>\n        </template>\n        <script>\n           \n           export default {\n           name: 'vc-component-doc',\n           components: {\n            \n           },\n           data(){\n            return {}\n           }\n         }\n       </script>\n       <style lang='scss'>\n         \n       </style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??ref--15-0!../../build/markdown-loader.js!../../node_modules/eslint-loader/index.js??ref--14-0!./javascript-regular-expressions-mini-book.md?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??ref--15-0!../../build/markdown-loader.js!../../node_modules/eslint-loader/index.js??ref--14-0!./javascript-regular-expressions-mini-book.md?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./javascript-regular-expressions-mini-book.md?vue&type=template&id=6e664189&\"\nimport script from \"./javascript-regular-expressions-mini-book.md?vue&type=script&lang=js&\"\nexport * from \"./javascript-regular-expressions-mini-book.md?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","module.exports = __webpack_public_path__ + \"img/微信截图_20211219175244.0f5c07bd.png\";","module.exports = __webpack_public_path__ + \"img/微信截图_20211221230642.797a4715.png\";","module.exports = __webpack_public_path__ + \"img/微信截图_20211219155900.3f41a567.png\";","module.exports = __webpack_public_path__ + \"img/微信截图_20211219155731.1c89b041.png\";","module.exports = __webpack_public_path__ + \"img/微信截图_20211219174935.434828e7.png\";","module.exports = __webpack_public_path__ + \"img/微信截图_20211219154202.922f7bc3.png\";","module.exports = __webpack_public_path__ + \"img/微信截图_20211221221651.8d72bcb1.png\";","module.exports = __webpack_public_path__ + \"img/微信截图_20211219230752.679a7c74.png\";","module.exports = __webpack_public_path__ + \"img/微信截图_20211219154447.858ed9ed.png\";","module.exports = __webpack_public_path__ + \"img/微信截图_20211221204927.307ccb2f.png\";","module.exports = __webpack_public_path__ + \"img/微信截图_20211220000031.e395b24a.png\";","module.exports = __webpack_public_path__ + \"img/微信截图_20211219225240.36ed0421.png\";","module.exports = __webpack_public_path__ + \"img/微信截图_20211219140323.83a8c843.png\";","module.exports = __webpack_public_path__ + \"img/微信截图_20211219101110.c48196dd.png\";","module.exports = __webpack_public_path__ + \"img/微信截图_20211220000110.f86812f4.png\";","module.exports = __webpack_public_path__ + \"img/微信截图_20211219152846.fb17804a.png\";","module.exports = __webpack_public_path__ + \"img/微信截图_20211219154628.a189a10c.png\";","module.exports = __webpack_public_path__ + \"img/微信截图_20211219174005.6597acd0.png\";","module.exports = __webpack_public_path__ + \"img/微信截图_20211220013239.97483d1e.png\";","module.exports = __webpack_public_path__ + \"img/微信截图_20211221205246.cc672b0e.png\";","module.exports = __webpack_public_path__ + \"img/微信截图_20211220005910.5fa88511.png\";"],"sourceRoot":""}