(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0a447a"],{"0686":function(s,a,e){"use strict";e.r(a);var t=function(){var s=this,a=s.$createElement;s._self._c;return s._m(0)},n=[function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("div",{staticClass:"vc-snippet-doc"},[e("h1",[s._v("ECMAScript 6 简介")]),e("p",[s._v("目前，各大浏览器对 ES6 的支持可以查看"),e("a",{attrs:{href:"https://kangax.github.io/compat-table/es6/"}},[s._v("kangax.github.io/compat-table/es6/")]),s._v("。")]),e("p",[e("code",[s._v("Node.js")]),s._v(" 是 "),e("code",[s._v("JavaScript")]),s._v(" 的服务器运行环境（"),e("code",[s._v("runtime")]),s._v("）。它对 "),e("code",[s._v("ES6")]),s._v(" 的支持度更高。除了那些默认打开的功能，还有一些语法功能已经实现了，但是默认没有打开。使用下面的命令，可以查看 "),e("code",[s._v("Node.js")]),s._v(" 默认没有打开的 "),e("code",[s._v("ES6")]),s._v(" 实验性语法。")]),e("pre",{staticClass:"hljs"},[e("code",[e("span",{staticClass:"hljs-comment"},[s._v("// Linux & Mac")]),s._v("\n$ node --v8-options | grep harmony\n\n"),e("span",{staticClass:"hljs-comment"},[s._v("// Windows")]),s._v("\n$ node --v8-options | findstr harmony\n")])]),e("h2",[s._v("Babel 转码器")]),e("p",[e("code",[s._v("Babel")]),s._v(" 是一个广泛使用的 "),e("code",[s._v("ES6")]),s._v(" 转码器，可以将 "),e("code",[s._v("ES6")]),s._v(" 代码转为 "),e("code",[s._v("ES5")]),s._v(" 代码，从而在老版本的浏览器执行。这意味着，你可以用 "),e("code",[s._v("ES6")]),s._v(" 的方式编写程序，又不用担心现有环境是否支持。下面是一个例子。")]),e("pre",{staticClass:"hljs"},[e("code",[e("span",{staticClass:"hljs-comment"},[s._v("// 转码前")]),s._v("\ninput."),e("span",{staticClass:"hljs-title function_"},[s._v("map")]),s._v("("),e("span",{staticClass:"hljs-function"},[e("span",{staticClass:"hljs-params"},[s._v("item")]),s._v(" =>")]),s._v(" item + "),e("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(");\n\n"),e("span",{staticClass:"hljs-comment"},[s._v("// 转码后")]),s._v("\ninput."),e("span",{staticClass:"hljs-title function_"},[s._v("map")]),s._v("("),e("span",{staticClass:"hljs-keyword"},[s._v("function")]),s._v(" ("),e("span",{staticClass:"hljs-params"},[s._v("item")]),s._v(") {\n  "),e("span",{staticClass:"hljs-keyword"},[s._v("return")]),s._v(" item + "),e("span",{staticClass:"hljs-number"},[s._v("1")]),s._v(";\n});\n")])]),e("p",[s._v("上面的原始代码用了箭头函数，"),e("code",[s._v("Babel")]),s._v(" 将其转为普通函数，就能在不支持箭头函数的 "),e("code",[s._v("JavaScript")]),s._v(" 环境执行了。")]),e("p",[s._v("下面的命令在项目目录中，安装 "),e("code",[s._v("Babel。")])]),e("pre",{staticClass:"hljs"},[e("code",[s._v("$ npm install --save-dev @babel/core\n")])]),e("h2",[s._v("配置文件"),e("code",[s._v(".babelrc")])]),e("p",[e("code",[s._v("Babel")]),s._v(" 的配置文件是"),e("code",[s._v(".babelrc")]),s._v("，存放在项目的根目录下。使用 "),e("code",[s._v("Babel")]),s._v(" 的第一步，就是配置这个文件。")]),e("p",[s._v("该文件用来设置转码规则和插件，基本格式如下。")]),e("pre",{staticClass:"hljs"},[e("code",[s._v("{\n  "),e("span",{staticClass:"hljs-string"},[s._v('"presets"')]),s._v(": [],\n  "),e("span",{staticClass:"hljs-string"},[s._v('"plugins"')]),s._v(": []\n}\n")])]),e("p",[e("code",[s._v("presets")]),s._v("字段设定转码规则，官方提供以下的规则集，你可以根据需要安装。")]),e("h2",[s._v("最新转码规则")]),e("pre",{staticClass:"hljs"},[e("code",[s._v("$ npm install --save-dev @babel/preset-env\n\n# react 转码规则\n$ npm install --save-dev @babel/preset-react\n")])]),e("p",[s._v("然后，将这些规则加入"),e("code",[s._v(".babelrc。")])]),e("pre",{staticClass:"hljs"},[e("code",[s._v("  {\n    "),e("span",{staticClass:"hljs-string"},[s._v('"presets"')]),s._v(": [\n      "),e("span",{staticClass:"hljs-string"},[s._v('"@babel/env"')]),s._v(",\n      "),e("span",{staticClass:"hljs-string"},[s._v('"@babel/preset-react"')]),s._v("\n    ],\n    "),e("span",{staticClass:"hljs-string"},[s._v('"plugins"')]),s._v(": []\n  }\n")])]),e("p",[s._v("注意，以下所有 "),e("code",[s._v("Babel")]),s._v(" 工具和模块的使用，都必须先写好"),e("code",[s._v(".babelrc。")])]),e("h2",[s._v("命令行转码")]),e("p",[e("code",[s._v("Babel")]),s._v(" 提供命令行工具"),e("code",[s._v("@babel/cli")]),s._v("，用于命令行转码。")]),e("p",[s._v("它的安装命令如下。")]),e("pre",{staticClass:"hljs"},[e("code",[s._v("$ npm install --save-dev @babel/cli\n")])]),e("p",[s._v("基本用法如下。")]),e("pre",{staticClass:"hljs"},[e("code",[s._v("# 转码结果输出到标准输出\n$ npx babel example."),e("span",{staticClass:"hljs-property"},[s._v("js")]),s._v("\n\n# 转码结果写入一个文件\n# --out-file 或 -o 参数指定输出文件\n$ npx babel example."),e("span",{staticClass:"hljs-property"},[s._v("js")]),s._v(" --out-file compiled."),e("span",{staticClass:"hljs-property"},[s._v("js")]),s._v("\n# 或者\n$ npx babel example."),e("span",{staticClass:"hljs-property"},[s._v("js")]),s._v(" -o compiled."),e("span",{staticClass:"hljs-property"},[s._v("js")]),s._v("\n\n# 整个目录转码\n# --out-dir 或 -d 参数指定输出目录\n$ npx babel src --out-dir lib\n# 或者\n$ npx babel src -d lib\n\n# -s 参数生成source map文件\n$ npx babel src -d lib -s\n")])])])}],v={name:"vc-component-doc",components:{},data:function(){return{}}},l=v,_=e("2877"),c=Object(_["a"])(l,t,n,!1,null,null,null);a["default"]=c.exports}}]);
//# sourceMappingURL=chunk-2d0a447a.74e77eca.js.map